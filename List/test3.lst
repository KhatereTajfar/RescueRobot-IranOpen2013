
AVRASM ver. 2.1.30  G:\test\List\test3.asm Thu Jun 27 15:22:21 2013

G:\test\List\test3.asm(1059): warning: Register r4 already defined by the .DEF directive
G:\test\List\test3.asm(1060): warning: Register r6 already defined by the .DEF directive
G:\test\List\test3.asm(1061): warning: Register r8 already defined by the .DEF directive
G:\test\List\test3.asm(1062): warning: Register r10 already defined by the .DEF directive
G:\test\List\test3.asm(1063): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Advanced
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _timer=R4
                 	.DEF _cnt=R6
                 	.DEF _num=R8
                 	.DEF _dis_j=R10
                 	.DEF _dis_chp=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00b5 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x411:
00002a 0000      	.DB  0x0,0x0
                 _0x0:
00002b 443a
00002c 5620
00002d 4349
00002e 4954      	.DB  0x3A,0x44,0x20,0x56,0x49,0x43,0x54,0x49
00002f 204d
000030 6e6f
000031 5320
000032 4154      	.DB  0x4D,0x20,0x6F,0x6E,0x20,0x53,0x54,0x41
000033 4547
000034 3a20
000035 0044
000036 2023      	.DB  0x47,0x45,0x20,0x3A,0x44,0x0,0x23,0x20
000037 4956
000038 5443
000039 4d49
00003a 4c20      	.DB  0x56,0x49,0x43,0x54,0x49,0x4D,0x20,0x4C
00003b 4649
00003c 2054
00003d 0023
00003e 205a      	.DB  0x49,0x46,0x54,0x20,0x23,0x0,0x5A,0x20
00003f 4946
000040 494e
000041 4853
000042 5a20      	.DB  0x46,0x49,0x4E,0x49,0x53,0x48,0x20,0x5A
000043 5300
000044 4c41
000045 4d41
000046 5320      	.DB  0x0,0x53,0x41,0x4C,0x41,0x4D,0x20,0x53
000047 4241
000048 005a
000049 5620
00004a 4349      	.DB  0x41,0x42,0x5A,0x0,0x20,0x56,0x49,0x43
00004b 4954
00004c 204d
00004d 2000
00004e 5220      	.DB  0x54,0x49,0x4D,0x20,0x0,0x20,0x20,0x52
00004f 4445
000050 5220
000051 4f4f
000052 204d      	.DB  0x45,0x44,0x20,0x52,0x4F,0x4F,0x4D,0x20
000053 0020
000054 3920
000055 2030
000056 6172      	.DB  0x20,0x0,0x20,0x39,0x30,0x20,0x72,0x61
000057 7473
000058 253d
000059 6434
00005a 0020      	.DB  0x73,0x74,0x3D,0x25,0x34,0x64,0x20,0x0
00005b 3920
00005c 2030
00005d 6863
00005e 7061      	.DB  0x20,0x39,0x30,0x20,0x63,0x68,0x61,0x70
00005f 253d
000060 6434
000061 0020
000062 6425      	.DB  0x3D,0x25,0x34,0x64,0x20,0x0,0x25,0x64
000063 6425
000064 6425
000065 6425
000066 2520      	.DB  0x25,0x64,0x25,0x64,0x25,0x64,0x20,0x25
000067 2564
000068 2564
000069 2564
00006a 0064      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x0
00006b 6956
00006c 7463
00006d 6d69
00006e 253d      	.DB  0x56,0x69,0x63,0x74,0x69,0x6D,0x3D,0x25
00006f 2064
000070 4c00
000071 2055
000072 444c      	.DB  0x64,0x20,0x0,0x4C,0x55,0x20,0x4C,0x44
000073 5220
000074 2055
000075 4452
000076 4420      	.DB  0x20,0x52,0x55,0x20,0x52,0x44,0x20,0x44
000077 5520
000078 2500
000079 2064
00007a 6425      	.DB  0x20,0x55,0x0,0x25,0x64,0x20,0x25,0x64
00007b 2520
00007c 2064
00007d 6425
00007e 2520      	.DB  0x20,0x25,0x64,0x20,0x25,0x64,0x20,0x25
00007f 2064
000080 6425
000081 2000
000082 3325      	.DB  0x64,0x20,0x25,0x64,0x0,0x20,0x25,0x33
000083 2064
000084 3325
000085 2064
000086 3325      	.DB  0x64,0x20,0x25,0x33,0x64,0x20,0x25,0x33
000087 2064
000088 2500
000089 2e31
00008a 6631      	.DB  0x64,0x20,0x0,0x25,0x31,0x2E,0x31,0x66
00008b 2520
00008c 2e31
00008d 6631
00008e 2520      	.DB  0x20,0x25,0x31,0x2E,0x31,0x66,0x20,0x25
00008f 2e31
000090 6631
000091 2520
000092 2e31      	.DB  0x31,0x2E,0x31,0x66,0x20,0x25,0x31,0x2E
000093 6631
000094 2520
000095 2e31
000096 6631      	.DB  0x31,0x66,0x20,0x25,0x31,0x2E,0x31,0x66
000097 2520
000098 2e31
000099 6631
00009a 2520      	.DB  0x20,0x25,0x31,0x2E,0x31,0x66,0x20,0x25
00009b 2e31
00009c 6631
00009d 2520
00009e 2e31      	.DB  0x31,0x2E,0x31,0x66,0x20,0x25,0x31,0x2E
00009f 6631
G:\test\List\test3.asm(1126): warning: .cseg .db misalignment - padding zero byte
0000a0 0000      	.DB  0x31,0x66,0x0
                 _0x2000000:
0000a1 4e2d
0000a2 4e41
G:\test\List\test3.asm(1128): warning: .cseg .db misalignment - padding zero byte
0000a3 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
0000a4 c080      	.DB  0x80,0xC0
                 _0x20A0060:
G:\test\List\test3.asm(1132): warning: .cseg .db misalignment - padding zero byte
0000a5 0001      	.DB  0x1
                 _0x20A0000:
0000a6 4e2d
0000a7 4e41
0000a8 4900
0000a9 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
G:\test\List\test3.asm(1135): warning: .cseg .db misalignment - padding zero byte
0000aa 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000ab 0002      	.DW  0x02
0000ac 0004      	.DW  0x04
0000ad 0054      	.DW  _0x411*2
                 
0000ae 0002      	.DW  0x02
0000af 01b0      	.DW  __base_y_G101
0000b0 0148      	.DW  _0x2020003*2
                 
0000b1 0001      	.DW  0x01
0000b2 01b7      	.DW  __seed_G105
0000b3 014a      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
0000b4 0000      	.DW  0
                 
                 __RESET:
0000b5 94f8      	CLI
0000b6 27ee      	CLR  R30
0000b7 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000b8 e0f1      	LDI  R31,1
0000b9 bffb      	OUT  GICR,R31
0000ba bfeb      	OUT  GICR,R30
0000bb bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000bc e1f8      	LDI  R31,0x18
0000bd bdf1      	OUT  WDTCR,R31
0000be bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000bf e08d      	LDI  R24,(14-2)+1
0000c0 e0a2      	LDI  R26,2
0000c1 27bb      	CLR  R27
                 __CLEAR_REG:
0000c2 93ed      	ST   X+,R30
0000c3 958a      	DEC  R24
0000c4 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000c5 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000c6 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000c7 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000c8 93ed      	ST   X+,R30
0000c9 9701      	SBIW R24,1
0000ca f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000cb e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000cc e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000cd 9185      	LPM  R24,Z+
0000ce 9195      	LPM  R25,Z+
0000cf 9700      	SBIW R24,0
0000d0 f061      	BREQ __GLOBAL_INI_END
0000d1 91a5      	LPM  R26,Z+
0000d2 91b5      	LPM  R27,Z+
0000d3 9005      	LPM  R0,Z+
0000d4 9015      	LPM  R1,Z+
0000d5 01bf      	MOVW R22,R30
0000d6 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000d7 9005      	LPM  R0,Z+
0000d8 920d      	ST   X+,R0
0000d9 9701      	SBIW R24,1
0000da f7e1      	BRNE __GLOBAL_INI_LOOP
0000db 01fb      	MOVW R30,R22
0000dc cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000dd e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000de bfed      	OUT  SPL,R30
0000df e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000e0 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000e1 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000e2 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000e3 940c 07d6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#define R1 PORTB.0
                 ;#define R2 PORTB.1
                 ;#define L1 PORTB.5
                 ;#define L2 PORTB.4
                 ;#define ELB PORTB.6
                 ;#define ELP PORTB.7
                 ;#define KCHB PINC.0
                 ;#define KCHP PINC.1
                 ;#define KRB PINC.2
                 ;#define KRP PINC.3
                 ;#define ENR PIND.6
                 ;#define ENCH PIND.7
                 ;
                 ;#define DCL PORTD.0
                 ;#define DOP PORTD.1
                 ;#define MASDOUM PINC.6
                 ;#define KB PINC.4
                 ;#define KP PINC.5
                 ;#define LCD PORTB.3=0
                 ;#define MOTOR PORTB.3=1
                 ;
                 ;// Alphanumeric LCD Module functions
                 ;#asm
                    .equ __lcd_port=0x18 ;PORTB
                 ; 0000 001B #endasm
                 ;#include <lcd.h>
                 ;
                 ;#include <delay.h>
                 ;
                 ;#define ADC_VREF_TYPE 0x00
                 ;eeprom int rast90;
                 ;eeprom int chap90;
                 ;     unsigned int timer=0;
                 ;void stop (void);
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0028 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0000 0029 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
0000e5 81e8      	LD   R30,Y
0000e6 b9e7      	OUT  0x7,R30
                 ; 0000 002A // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 002B delay_us(10);
                +
0000e7 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000e8 958a     +DEC R24
0000e9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 002C // Start the AD conversion
                 ; 0000 002D ADCSRA|=0x40;
0000ea 9a36      	SBI  0x6,6
                 ; 0000 002E // Wait for the AD conversion to complete
                 ; 0000 002F while ((ADCSRA & 0x10)==0);
                 _0x3:
0000eb 9b34      	SBIS 0x6,4
0000ec cffe      	RJMP _0x3
                 ; 0000 0030 ADCSRA|=0x10;
0000ed 9a34      	SBI  0x6,4
                 ; 0000 0031 return ADCW;
0000ee b1e4      	IN   R30,0x4
0000ef b1f5      	IN   R31,0x4+1
0000f0 9621      	ADIW R28,1
0000f1 9508      	RET
                 ; 0000 0032 }
                 ;
                 ;// Declare your global variables here
                 ;void bazoo (void)
                 ; 0000 0036 {
                 _bazoo:
                 ; 0000 0037 L1=0;L2=0;R1=0;R2=0;
0000f2 98c5      	CBI  0x18,5
0000f3 98c4      	CBI  0x18,4
0000f4 98c0      	CBI  0x18,0
0000f5 98c1      	CBI  0x18,1
                 ; 0000 0038 delay_ms(2000);
0000f6 940e 0d9b 	CALL SUBOPT_0x0
                 ; 0000 0039 ELB=1;ELP=0;
0000f8 9ac6      	SBI  0x18,6
0000f9 98c7      	CBI  0x18,7
                 ; 0000 003A while(KB==1);
                 _0x12:
0000fa 999c      	SBIC 0x13,4
0000fb cffe      	RJMP _0x12
                 ; 0000 003B ELB=0;ELP=0;
0000fc 98c6      	CBI  0x18,6
0000fd 98c7      	CBI  0x18,7
                 ; 0000 003C DCL=0;DOP=1;
0000fe 9890      	CBI  0x12,0
0000ff 9a91      	SBI  0x12,1
                 ; 0000 003D delay_ms(1000);
000100 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 003E DCL=0;DOP=0;
000102 9890      	CBI  0x12,0
000103 9891      	CBI  0x12,1
                 ; 0000 003F }
000104 9508      	RET
                 ;
                 ;int cnt,num;
                 ;void r_90 (unsigned int i)   //in tabe be jaye encodere moteghayyere i(moteghayyere delaye) toye tabe right_90 tanzim mishe
                 ; 0000 0043     {                        //adade rast_90 (moteghayyere eeprom tabe right_90) har chi shod be hamun andaze delay ijad mishe
                 _r_90:
                 ; 0000 0044      MOTOR;
                 ;	i -> Y+0
000105 9ac3      	SBI  0x18,3
                 ; 0000 0045      L1=1;L2=0;R1=0;R2=1;
000106 940e 0da7 	CALL SUBOPT_0x2
                 ; 0000 0046      delay_ms(i);            //in dasture delaye
000108 c003      	RJMP _0x20C000B
                 ; 0000 0047     }
                 ;
                 ;void l_90 (unsigned int j)    //in tabe moshabehe tabe r_90 ast
                 ; 0000 004A     {
                 _l_90:
                 ; 0000 004B      MOTOR;
                 ;	j -> Y+0
000109 9ac3      	SBI  0x18,3
                 ; 0000 004C      L1=0;L2=1;R1=1;R2=0;
00010a 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 004D      delay_ms(j);
                 _0x20C000B:
00010c 81e8      	LD   R30,Y
00010d 81f9      	LDD  R31,Y+1
00010e 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 004E     }
000110 9622      	ADIW R28,2
000111 9508      	RET
                 ;
                 ;void rast_gard (void)
                 ; 0000 0051     {
                 _rast_gard:
                 ; 0000 0052      L1=1;L2=0;R1=0;R2=1;
000112 940e 0da7 	CALL SUBOPT_0x2
                 ; 0000 0053      r_90(rast90);
000114 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 0054      stop();
000116 d2aa      	RCALL _stop
                 ; 0000 0055      for(cnt=0;cnt<=18;cnt++)
000117 2466      	CLR  R6
000118 2477      	CLR  R7
                 _0x3E:
000119 e1e2      	LDI  R30,LOW(18)
00011a e0f0      	LDI  R31,HIGH(18)
00011b 15e6      	CP   R30,R6
00011c 05f7      	CPC  R31,R7
00011d f104      	BRLT _0x3F
                 ; 0000 0056      {
                 ; 0000 0057       L1=0;L2=0;R1=1;R2=0;
00011e 98c5      	CBI  0x18,5
00011f 98c4      	CBI  0x18,4
000120 9ac0      	SBI  0x18,0
000121 98c1      	CBI  0x18,1
                 ; 0000 0058       delay_ms(350);
000122 e5ee      	LDI  R30,LOW(350)
000123 e0f1      	LDI  R31,HIGH(350)
000124 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0059       L1=1;L2=0;R1=1;R2=0;
000126 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 005A       delay_ms(25);
000128 e1e9      	LDI  R30,LOW(25)
000129 e0f0      	LDI  R31,HIGH(25)
00012a 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 005B       if(PINA!=0)
00012c b3e9      	IN   R30,0x19
00012d 30e0      	CPI  R30,0
00012e f059      	BREQ _0x50
                 ; 0000 005C           {
                 ; 0000 005D            L1=1;L2=0;R1=1;R2=0;
00012f 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 005E            delay_ms(250);
000131 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 005F            L1=1;L2=0;R1=0;R2=1;
000133 940e 0da7 	CALL SUBOPT_0x2
                 ; 0000 0060            delay_ms(400);
000135 e9e0      	LDI  R30,LOW(400)
000136 e0f1      	LDI  R31,HIGH(400)
000137 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0061            break;
000139 c004      	RJMP _0x3F
                 ; 0000 0062           }
                 ; 0000 0063      }
                 _0x50:
00013a 01f3      	MOVW R30,R6
00013b 9631      	ADIW R30,1
00013c 013f      	MOVW R6,R30
00013d cfdb      	RJMP _0x3E
                 _0x3F:
                 ; 0000 0064      stop();
00013e c029      	RJMP _0x20C000A
                 ; 0000 0065      //L1=1;L2=0;R1=0;R2=1;
                 ; 0000 0066      //en_chap(rast90);
                 ; 0000 0067     }
                 ;
                 ;void chap_gard (void)
                 ; 0000 006A     {
                 _chap_gard:
                 ; 0000 006B      L1=0;L2=1;R1=1;R2=0;
00013f 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 006C      l_90(chap90);
000141 940e 0dc5 	CALL SUBOPT_0x8
                 ; 0000 006D      stop();
                 ; 0000 006E      for(num=0;num<=18;num++)
000143 2488      	CLR  R8
000144 2499      	CLR  R9
                 _0x6A:
000145 e1e2      	LDI  R30,LOW(18)
000146 e0f0      	LDI  R31,HIGH(18)
000147 15e8      	CP   R30,R8
000148 05f9      	CPC  R31,R9
000149 f0f4      	BRLT _0x6B
                 ; 0000 006F      {
                 ; 0000 0070       L1=1;L2=0;R1=0;R2=0;
00014a 9ac5      	SBI  0x18,5
00014b 98c4      	CBI  0x18,4
00014c 98c0      	CBI  0x18,0
00014d 98c1      	CBI  0x18,1
                 ; 0000 0071       delay_ms(350);
00014e e5ee      	LDI  R30,LOW(350)
00014f e0f1      	LDI  R31,HIGH(350)
000150 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0072       L1=1;L2=0;R1=1;R2=0;
000152 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0073       delay_ms(25);
000154 e1e9      	LDI  R30,LOW(25)
000155 e0f0      	LDI  R31,HIGH(25)
000156 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0074       if (PINA!=0)
000158 b3e9      	IN   R30,0x19
000159 30e0      	CPI  R30,0
00015a f049      	BREQ _0x7C
                 ; 0000 0075           {
                 ; 0000 0076            L1=1;L2=0;R1=1;R2=0;
00015b 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0077            delay_ms(250);
00015d 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 0078            L1=0;L2=1;R1=1;R2=0;
00015f 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 0079            delay_ms(700);
000161 940e 0dcf 	CALL SUBOPT_0x9
                 ; 0000 007A            break;
000163 c004      	RJMP _0x6B
                 ; 0000 007B           }
                 ; 0000 007C      }
                 _0x7C:
000164 01f4      	MOVW R30,R8
000165 9631      	ADIW R30,1
000166 014f      	MOVW R8,R30
000167 cfdd      	RJMP _0x6A
                 _0x6B:
                 ; 0000 007D      stop();
                 _0x20C000A:
000168 d258      	RCALL _stop
                 ; 0000 007E      //L1=0;L2=1;R1=1;R2=0;
                 ; 0000 007F      //en_chap(chap90);
                 ; 0000 0080     }
000169 9508      	RET
                 ;
                 ;int dis_j , dis_chp, dis_rp, dis_chb, dis_rb;
                 ;void ultra_sonicb (void)
                 ; 0000 0084     {
                 _ultra_sonicb:
                 ; 0000 0085     DDRD.5=1;
00016a 9a8d      	SBI  0x11,5
                 ; 0000 0086     PORTD.5=1;
00016b 9a95      	SBI  0x12,5
                 ; 0000 0087     delay_us(20);
                +
00016c e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
00016d 958a     +DEC R24
00016e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0000 0088     PORTD.5=0;
00016f 9895      	CBI  0x12,5
                 ; 0000 0089     DDRD.5=0;
000170 988d      	CBI  0x11,5
                 ; 0000 008A     while (PIND.5==0 );
                 _0x95:
000171 9b85      	SBIS 0x10,5
000172 cffe      	RJMP _0x95
                 ; 0000 008B     TCNT1=0;
000173 940e 0dd2 	CALL SUBOPT_0xA
                 ; 0000 008C     while (PIND.5==1 );
                 _0x98:
000175 9985      	SBIC 0x10,5
000176 cffe      	RJMP _0x98
                 ; 0000 008D     dis_chb= TCNT1 /58 ;
000177 940e 0dd7 	CALL SUBOPT_0xB
000179 93e0 0162 	STS  _dis_chb,R30
00017b 93f0 0163 	STS  _dis_chb+1,R31
                 ; 0000 008E     DDRC.7=1;
00017d 9aa7      	SBI  0x14,7
                 ; 0000 008F     PORTC.7=1;
00017e 9aaf      	SBI  0x15,7
                 ; 0000 0090     delay_us(20);
                +
00017f e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000180 958a     +DEC R24
000181 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0000 0091     PORTC.7=0;
000182 98af      	CBI  0x15,7
                 ; 0000 0092     DDRC.7=0;
000183 98a7      	CBI  0x14,7
                 ; 0000 0093     while (PINC.7==0 );
                 _0xA3:
000184 9b9f      	SBIS 0x13,7
000185 cffe      	RJMP _0xA3
                 ; 0000 0094     TCNT1=0;
000186 940e 0dd2 	CALL SUBOPT_0xA
                 ; 0000 0095     while (PINC.7==1 );
                 _0xA6:
000188 999f      	SBIC 0x13,7
000189 cffe      	RJMP _0xA6
                 ; 0000 0096     dis_rb= TCNT1 /58 ;
00018a 940e 0dd7 	CALL SUBOPT_0xB
00018c 93e0 0164 	STS  _dis_rb,R30
00018e 93f0 0165 	STS  _dis_rb+1,R31
                 ; 0000 0097     delay_ms(25);
000190 e1e9      	LDI  R30,LOW(25)
000191 e0f0      	LDI  R31,HIGH(25)
000192 c24c      	RJMP _0x20C0008
                 ; 0000 0098     }
                 ;
                 ;void ultra_sonic (void)
                 ; 0000 009B     {
                 _ultra_sonic:
                 ; 0000 009C      DDRD.4=1;
000193 940e 0ddf 	CALL SUBOPT_0xC
                 ; 0000 009D      PORTD.4=1;
                 ; 0000 009E      delay_us(20);
                 ; 0000 009F      PORTD.4=0;
                 ; 0000 00A0      DDRD.4=0;
                 ; 0000 00A1      while (PIND.4==0 );
                 _0xB1:
000195 9b84      	SBIS 0x10,4
000196 cffe      	RJMP _0xB1
                 ; 0000 00A2      TCNT1=0;
000197 940e 0dd2 	CALL SUBOPT_0xA
                 ; 0000 00A3      while (PIND.4==1 );
                 _0xB4:
000199 9984      	SBIC 0x10,4
00019a cffe      	RJMP _0xB4
                 ; 0000 00A4      dis_j= TCNT1 /58 ;
00019b 940e 0dd7 	CALL SUBOPT_0xB
00019d 015f      	MOVW R10,R30
                 ; 0000 00A5 
                 ; 0000 00A6      DDRD.3=1;
00019e 9a8b      	SBI  0x11,3
                 ; 0000 00A7      PORTD.3=1;
00019f 9a93      	SBI  0x12,3
                 ; 0000 00A8      delay_us(20);
                +
0001a0 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
0001a1 958a     +DEC R24
0001a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0000 00A9      PORTD.3=0;
0001a3 9893      	CBI  0x12,3
                 ; 0000 00AA      DDRD.3=0;
0001a4 988b      	CBI  0x11,3
                 ; 0000 00AB      while (PIND.3==0 );
                 _0xBF:
0001a5 9b83      	SBIS 0x10,3
0001a6 cffe      	RJMP _0xBF
                 ; 0000 00AC      TCNT1=0;
0001a7 940e 0dd2 	CALL SUBOPT_0xA
                 ; 0000 00AD      while (PIND.3==1 );
                 _0xC2:
0001a9 9983      	SBIC 0x10,3
0001aa cffe      	RJMP _0xC2
                 ; 0000 00AE      dis_chp= TCNT1 /58 ;
0001ab 940e 0dd7 	CALL SUBOPT_0xB
0001ad 016f      	MOVW R12,R30
                 ; 0000 00AF 
                 ; 0000 00B0      DDRD.2=1;
0001ae 9a8a      	SBI  0x11,2
                 ; 0000 00B1      PORTD.2=1;
0001af 9a92      	SBI  0x12,2
                 ; 0000 00B2      delay_us(20);
                +
0001b0 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
0001b1 958a     +DEC R24
0001b2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0000 00B3      PORTD.2=0;
0001b3 9892      	CBI  0x12,2
                 ; 0000 00B4      DDRD.2=0;
0001b4 988a      	CBI  0x11,2
                 ; 0000 00B5      while (PIND.2==0 );
                 _0xCD:
0001b5 9b82      	SBIS 0x10,2
0001b6 cffe      	RJMP _0xCD
                 ; 0000 00B6      TCNT1=0;
0001b7 940e 0dd2 	CALL SUBOPT_0xA
                 ; 0000 00B7      while (PIND.2==1 );
                 _0xD0:
0001b9 9982      	SBIC 0x10,2
0001ba cffe      	RJMP _0xD0
                 ; 0000 00B8      dis_rp= TCNT1 /58 ;
0001bb 940e 0dd7 	CALL SUBOPT_0xB
0001bd 93e0 0160 	STS  _dis_rp,R30
0001bf 93f0 0161 	STS  _dis_rp+1,R31
                 ; 0000 00B9      delay_ms(25);
0001c1 e1e9      	LDI  R30,LOW(25)
0001c2 e0f0      	LDI  R31,HIGH(25)
0001c3 c21b      	RJMP _0x20C0008
                 ; 0000 00BA     }
                 ;
                 ;void block (void)
                 ; 0000 00BD     {
                 _block:
                 ; 0000 00BE      DDRD.4=1;
0001c4 940e 0ddf 	CALL SUBOPT_0xC
                 ; 0000 00BF      PORTD.4=1;
                 ; 0000 00C0      delay_us(20);
                 ; 0000 00C1      PORTD.4=0;
                 ; 0000 00C2      DDRD.4=0;
                 ; 0000 00C3      while (PIND.4==0 );
                 _0xDB:
0001c6 9b84      	SBIS 0x10,4
0001c7 cffe      	RJMP _0xDB
                 ; 0000 00C4      TCNT1=0;
0001c8 940e 0dd2 	CALL SUBOPT_0xA
                 ; 0000 00C5      while (PIND.4==1 );
                 _0xDE:
0001ca 9984      	SBIC 0x10,4
0001cb cffe      	RJMP _0xDE
                 ; 0000 00C6      dis_j= TCNT1 /58 ;
0001cc 940e 0dd7 	CALL SUBOPT_0xB
0001ce 015f      	MOVW R10,R30
                 ; 0000 00C7      MOTOR;
0001cf 9ac3      	SBI  0x18,3
                 ; 0000 00C8      if(dis_j<9)
0001d0 e0e9      	LDI  R30,LOW(9)
0001d1 e0f0      	LDI  R31,HIGH(9)
0001d2 16ae      	CP   R10,R30
0001d3 06bf      	CPC  R11,R31
0001d4 f46c      	BRGE _0xE3
                 ; 0000 00C9         {
                 ; 0000 00CA          stop();
0001d5 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 00CB          L1=0;L2=1;R1=0;R2=1;
                 ; 0000 00CC          delay_ms(250);
0001d7 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 00CD 
                 ; 0000 00CE          ultra_sonic();
0001d9 dfb9      	RCALL _ultra_sonic
                 ; 0000 00CF          if(dis_chp<=dis_rp)
0001da 940e 0dee 	CALL SUBOPT_0xE
0001dc f00c      	BRLT _0xEC
                 ; 0000 00D0             {
                 ; 0000 00D1             rast_gard();
0001dd df34      	RCALL _rast_gard
                 ; 0000 00D2             }
                 ; 0000 00D3 
                 ; 0000 00D4          if(dis_chp>dis_rp)
                 _0xEC:
0001de 940e 0dee 	CALL SUBOPT_0xE
0001e0 f40c      	BRGE _0xED
                 ; 0000 00D5             {
                 ; 0000 00D6             chap_gard();
0001e1 df5d      	RCALL _chap_gard
                 ; 0000 00D7             }
                 ; 0000 00D8         }
                 _0xED:
                 ; 0000 00D9     }
                 _0xE3:
0001e2 9508      	RET
                 ;
                 ;void eslah_aghab (void)
                 ; 0000 00DC     {
                 _eslah_aghab:
0001e3 92ff      	PUSH R15
                 ; 0000 00DD     unsigned int timmer=0;
                 ; 0000 00DE     bit reach=0;    // means robot reach the wall so timmer should start
                 ; 0000 00DF     while ((KRP==1 && KRB==1) || (KCHP==1 && KCHB==1))
0001e4 931a      	ST   -Y,R17
0001e5 930a      	ST   -Y,R16
                 ;	timmer -> R16,R17
                 ;	reach -> R15.0
0001e6 24ff      	CLR  R15
                +
0001e7 e000     +LDI R16 , LOW ( 0 )
0001e8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xEE:
0001e9 9b9b      	SBIS 0x13,3
0001ea c002      	RJMP _0xF1
0001eb 999a      	SBIC 0x13,2
0001ec c005      	RJMP _0xF3
                 _0xF1:
0001ed 9b99      	SBIS 0x13,1
0001ee c002      	RJMP _0xF4
0001ef 9998      	SBIC 0x13,0
0001f0 c001      	RJMP _0xF3
                 _0xF4:
0001f1 c038      	RJMP _0xF0
                 _0xF3:
                 ; 0000 00E0         {
                 ; 0000 00E1         if (KRP==1 && KCHP==1 && KRB==1 && KCHB==1)
0001f2 9b9b      	SBIS 0x13,3
0001f3 c006      	RJMP _0xF8
0001f4 9b99      	SBIS 0x13,1
0001f5 c004      	RJMP _0xF8
0001f6 9b9a      	SBIS 0x13,2
0001f7 c002      	RJMP _0xF8
0001f8 9998      	SBIC 0x13,0
0001f9 c001      	RJMP _0xF9
                 _0xF8:
0001fa c005      	RJMP _0xF7
                 _0xF9:
                 ; 0000 00E2             {R1=0;R2=1;L1=0;L2=1;}
0001fb 98c0      	CBI  0x18,0
0001fc 9ac1      	SBI  0x18,1
0001fd 98c5      	CBI  0x18,5
0001fe 9ac4      	SBI  0x18,4
                 ; 0000 00E3         else if ((KRP==0 || KRB==0) && KCHP==1 && KCHB==1)
0001ff c021      	RJMP _0x102
                 _0xF7:
000200 e0a0      	LDI  R26,0
000201 999b      	SBIC 0x13,3
000202 e0a1      	LDI  R26,1
000203 30a0      	CPI  R26,LOW(0x0)
000204 f019      	BREQ _0x104
000205 940e 0df5 	CALL SUBOPT_0xF
000207 f421      	BRNE _0x106
                 _0x104:
000208 9b99      	SBIS 0x13,1
000209 c002      	RJMP _0x106
00020a 9998      	SBIC 0x13,0
00020b c001      	RJMP _0x107
                 _0x106:
00020c c003      	RJMP _0x103
                 _0x107:
                 ; 0000 00E4             {R1=1;R2=0;L1=0;L2=1;reach=1;}
00020d 940e 0dfa 	CALL SUBOPT_0x10
00020f c00f      	RJMP _0x40B
                 ; 0000 00E5         else if ((KCHP==0 || KCHB==0) && KRP==1 && KRB==1)
                 _0x103:
000210 e0a0      	LDI  R26,0
000211 9999      	SBIC 0x13,1
000212 e0a1      	LDI  R26,1
000213 30a0      	CPI  R26,LOW(0x0)
000214 f019      	BREQ _0x112
000215 940e 0dff 	CALL SUBOPT_0x11
000217 f421      	BRNE _0x114
                 _0x112:
000218 9b9b      	SBIS 0x13,3
000219 c002      	RJMP _0x114
00021a 999a      	SBIC 0x13,2
00021b c001      	RJMP _0x115
                 _0x114:
00021c c004      	RJMP _0x111
                 _0x115:
                 ; 0000 00E6             {R1=0;R2=1;L1=1;L2=0;reach=1;}
00021d 940e 0e04 	CALL SUBOPT_0x12
                 _0x40B:
00021f 9468      	SET
000220 f8f0      	BLD  R15,0
                 ; 0000 00E7         if(reach==1)
                 _0x111:
                 _0x102:
000221 fef0      	SBRS R15,0
000222 c002      	RJMP _0x11E
                 ; 0000 00E8             {
                 ; 0000 00E9             timmer++;
000223 940e 0e09 	CALL SUBOPT_0x13
                 ; 0000 00EA             delay_ms(1);
                 ; 0000 00EB             }
                 ; 0000 00EC         if (timmer>3000)
                 _0x11E:
                +
000225 3b09     +CPI R16 , LOW ( 3001 )
000226 e0eb     +LDI R30 , HIGH ( 3001 )
000227 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3001
000228 f408      	BRSH _0xF0
                 ; 0000 00ED             break;
                 ; 0000 00EE         }
000229 cfbf      	RJMP _0xEE
                 _0xF0:
                 ; 0000 00EF     R1=0;R2=0;L1=0;L2=0;
00022a c02d      	RJMP _0x20C0009
                 ; 0000 00F0     delay_ms(200);
                 ; 0000 00F1     }
                 ;void eslah_jelo (void)
                 ; 0000 00F3     {
                 _eslah_jelo:
00022b 92ff      	PUSH R15
                 ; 0000 00F4     unsigned int timmer=0;
                 ; 0000 00F5     bit reach=0;    // means robot reach the wall so timmer should start
                 ; 0000 00F6     while (KRB==1 || KCHB==1)
00022c 931a      	ST   -Y,R17
00022d 930a      	ST   -Y,R16
                 ;	timmer -> R16,R17
                 ;	reach -> R15.0
00022e 24ff      	CLR  R15
                +
00022f e000     +LDI R16 , LOW ( 0 )
000230 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x128:
000231 999a      	SBIC 0x13,2
000232 c002      	RJMP _0x12B
000233 9b98      	SBIS 0x13,0
000234 c023      	RJMP _0x12A
                 _0x12B:
                 ; 0000 00F7         {
                 ; 0000 00F8         if (KRB==1 && KCHB==1)
000235 9b9a      	SBIS 0x13,2
000236 c002      	RJMP _0x12E
000237 9998      	SBIC 0x13,0
000238 c001      	RJMP _0x12F
                 _0x12E:
000239 c003      	RJMP _0x12D
                 _0x12F:
                 ; 0000 00F9             {R1=1;R2=0;L1=1;L2=0;}
00023a 940e 0e0e 	CALL SUBOPT_0x14
                 ; 0000 00FA         else if (KRB==0 && KCHB==1)
00023c c013      	RJMP _0x138
                 _0x12D:
00023d 940e 0df5 	CALL SUBOPT_0xF
00023f f411      	BRNE _0x13A
000240 9998      	SBIC 0x13,0
000241 c001      	RJMP _0x13B
                 _0x13A:
000242 c003      	RJMP _0x139
                 _0x13B:
                 ; 0000 00FB             {R1=0;R2=1;L1=1;L2=0;reach=1;}
000243 940e 0e04 	CALL SUBOPT_0x12
000245 c008      	RJMP _0x40C
                 ; 0000 00FC         else if (KRB==1 && KCHB==0)
                 _0x139:
000246 9b9a      	SBIS 0x13,2
000247 c003      	RJMP _0x146
000248 940e 0dff 	CALL SUBOPT_0x11
00024a f009      	BREQ _0x147
                 _0x146:
00024b c004      	RJMP _0x145
                 _0x147:
                 ; 0000 00FD             {R1=1;R2=0;L1=0;L2=1;reach=1;}
00024c 940e 0dfa 	CALL SUBOPT_0x10
                 _0x40C:
00024e 9468      	SET
00024f f8f0      	BLD  R15,0
                 ; 0000 00FE         if(reach==1)
                 _0x145:
                 _0x138:
000250 fef0      	SBRS R15,0
000251 c002      	RJMP _0x150
                 ; 0000 00FF             {
                 ; 0000 0100             timmer++;
000252 940e 0e09 	CALL SUBOPT_0x13
                 ; 0000 0101             delay_ms(1);
                 ; 0000 0102             }
                 ; 0000 0103         if (timmer>3000)
                 _0x150:
                +
000254 3b09     +CPI R16 , LOW ( 3001 )
000255 e0eb     +LDI R30 , HIGH ( 3001 )
000256 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3001
000257 f2c8      	BRLO _0x128
                 ; 0000 0104             break;
                 ; 0000 0105         }
                 _0x12A:
                 ; 0000 0106     R1=0;R2=0;L1=0;L2=0;
                 _0x20C0009:
000258 98c0      	CBI  0x18,0
000259 98c1      	CBI  0x18,1
00025a 98c5      	CBI  0x18,5
00025b 98c4      	CBI  0x18,4
                 ; 0000 0107     delay_ms(200);
00025c ece8      	LDI  R30,LOW(200)
00025d e0f0      	LDI  R31,HIGH(200)
00025e 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0108     }
000260 9109      	LD   R16,Y+
000261 9119      	LD   R17,Y+
000262 90ff      	POP  R15
000263 9508      	RET
                 ;
                 ;//void dont_victim_hand_free (void)
                 ;//    {
                 ;//     DCL=0;DOP=1;
                 ;//     delay_ms(1000);
                 ;//     DCL=0;DOP=0;
                 ;//     ELB=1;ELP=0;
                 ;//     while(KB==1);
                 ;//     ELB=0;ELP=0;
                 ;//    }
                 ;
                 ;//int count;
                 ;//void free_victim (void)
                 ;//    {
                 ;//     L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//     delay_ms(80);
                 ;//     L1=0;L2=0;R1=0;R2=0;
                 ;//     delay_ms(200);
                 ;//
                 ;//     ELP=1;ELB=0;
                 ;//     delay_ms(1000);
                 ;//     ELP=0;ELB=0;
                 ;
                 ;//     DOP=1;DCL=0;
                 ;//     delay_ms(1000);
                 ;//     DOP=0;DCL=0;
                 ;//
                 ;//
                 ;//     delay_ms(2000);
                 ;//     L1=0;L2=1;R1=0;R2=1;
                 ;//     en_chap(80);
                 ;//     L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//     delay_ms(80);
                 ;//     L1=0;L2=0;R1=0;R2=0;
                 ;//     delay_ms(200);
                 ;//
                 ;//     LCD;
                 ;//     lcd_putsf("  END  ");
                 ;//     lcd_gotoxy(0,0);
                 ;//     lcd_gotoxy(0,1);
                 ;//     lcd_putsf(" SALAM SABZ ");
                 ;//
                 ;//
                 ;//
                 ;//     while (1);
                 ;//    }
                 ;
                 ;/*
                 ;void find_stage (void)
                 ;    {
                 ;     while (1)
                 ;         {
                 ;          eslah_aghab();
                 ;          if(KCHP==0 || KRP==0)
                 ;              free_victim();
                 ;          L1=1;L2=0;R1=1;R2=0;
                 ;          en_rast(50);
                 ;          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;          delay_ms(80);
                 ;          L1=0;L2=0;R1=0;R2=0;
                 ;          delay_ms(200);
                 ;
                 ;          L1=1;L2=0;R1=0;R2=1;
                 ;          en_rast(rast90);
                 ;
                 ;         }
                 ;    }*/
                 ;
                 ;//void find_stage (void)
                 ;//    {
                 ;//     while (1)
                 ;//         {
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=0;L2=1;R1=0;R2=1;
                 ;//          en_chap(chap90);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=1;L2=0;R1=0;R2=1;
                 ;//          en_chap(rast90);
                 ;//
                 ;//          L1=1;L2=0;R1=1;R2=0;
                 ;//          en_chap(210);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=0;L2=1;R1=1;R2=0;
                 ;//          en_chap(chap90);
                 ;//
                 ;//          L1=1;L2=0;R1=1;R2=0;
                 ;//          en_chap(150);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=1;L2=0;R1=0;R2=1;
                 ;//          en_chap(50);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//          delay_ms(1000);
                 ;//
                 ;//
                 ;//          L1=0;L2=1;R1=1;R2=0;
                 ;//          en_chap(50);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=0;L2=1;R1=0;R2=1;
                 ;//          en_chap(110);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=1;L2=0;R1=0;R2=1;
                 ;//          en_chap(rast90);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(1000);
                 ;//          L1=1;L2=0;R1=0;R2=1;
                 ;//          en_chap(rast90);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(1000);
                 ;//
                 ;//          L1=1;L2=0;R1=1;R2=0;
                 ;//          en_chap(120);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(200);
                 ;//
                 ;//          L1=0;L2=1;R1=1;R2=0;
                 ;//          en_chap(40);
                 ;//          L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//          delay_ms(80);
                 ;//          L1=0;L2=0;R1=0;R2=0;
                 ;//          delay_ms(1000);
                 ;//
                 ;//          eslah_jelo();
                 ;//          free_victim();
                 ;//
                 ;//         }
                 ;//    }
                 ;
                 ;
                 ;
                 ;//void block_redroom (void)
                 ;//    {
                 ;//     ultra_sonic();
                 ;//     if (MASDOUM==0 && dis_j<=6)
                 ;//         {L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//         delay_ms(80);
                 ;//         L1=0;L2=0;R1=0;R2=0;
                 ;//         delay_ms(200);
                 ;//         L1=0;L2=1;R1=0;R2=1;
                 ;//         en_rast(25);
                 ;//         L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//         delay_ms(80);
                 ;//         L1=0;L2=0;R1=0;R2=0;
                 ;//         delay_ms(200);
                 ;//         L1=1;L2=0;R1=0;R2=1;
                 ;//         en_rast(rast90);
                 ;//         L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//         delay_ms(80);
                 ;//         L1=0;L2=0;R1=0;R2=0;
                 ;//         delay_ms(200);
                 ;//         L1=1;L2=0;R1=1;R2=0;
                 ;//         }
                 ;//    }
                 ;
                 ;//void red_room (void)
                 ;//    {
                 ;//    L1=1;L2=0;R1=1;R2=0;
                 ;//    en_chap (180);
                 ;//    stop();
                 ;//    delay_ms(200);
                 ;//
                 ;//    L1=0;L2=1;R1=1;R2=0;
                 ;//    en_chap (chap90);
                 ;//    stop();
                 ;//
                 ;//    L1=1;L2=0;R1=1;R2=0;
                 ;//    while(MASDOUM==0);
                 ;//    L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//    delay_ms(150);
                 ;//    L1=0;L2=0;R1=0;R2=0;
                 ;//    delay_ms(200);
                 ;//
                 ;//
                 ;//    DCL=1;DOP=0;
                 ;//    delay_ms(500);
                 ;//    DCL=0;DOP=0;
                 ;//    ELP=1;ELB=0;
                 ;//    while(KP==1);
                 ;//    ELP=0;ELB=0;
                 ;//
                 ;//    DCL=1;DOP=0;
                 ;//    ELB=1;ELP=0;
                 ;//    while(KB==1);
                 ;//    ELB=0;ELP=0;
                 ;//
                 ;//    find_stage();
                 ;//    }
                 ;
                 ; void free_victim(void)
                 ; 0000 01E6     {
                 _free_victim:
                 ; 0000 01E7      stop();
000264 d15c      	RCALL _stop
                 ; 0000 01E8      DOP=1;
000265 9a91      	SBI  0x12,1
                 ; 0000 01E9      DCL=0;
000266 9890      	CBI  0x12,0
                 ; 0000 01EA      delay_ms(700);
000267 940e 0dcf 	CALL SUBOPT_0x9
                 ; 0000 01EB      LCD;
000269 940e 0e13 	CALL SUBOPT_0x15
                 ; 0000 01EC      lcd_gotoxy(0,0);
                 ; 0000 01ED      lcd_putsf(":D VICTIM on STAGE :D");
                +
00026b e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00026c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00026d 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 01EE      lcd_gotoxy(0,1);
00026f 940e 0e1d 	CALL SUBOPT_0x17
                 ; 0000 01EF      lcd_putsf("# VICTIM LIFT #");
                +
000271 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
000272 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
000273 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 01F0      delay_ms(5000);
000275 e8e8      	LDI  R30,LOW(5000)
000276 e1f3      	LDI  R31,HIGH(5000)
000277 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 01F1      lcd_clear();
000279 940e 0bf3 	CALL _lcd_clear
                 ; 0000 01F2 
                 ; 0000 01F3      MOTOR;
00027b 9ac3      	SBI  0x18,3
                 ; 0000 01F4      L1=0;L2=1;R1=0;R2=1;
00027c 98c5      	CBI  0x18,5
00027d 9ac4      	SBI  0x18,4
00027e 98c0      	CBI  0x18,0
00027f 9ac1      	SBI  0x18,1
                 ; 0000 01F5      delay_ms(3000);
000280 940e 0e23 	CALL SUBOPT_0x18
                 ; 0000 01F6      stop();
000282 940e 0e26 	CALL SUBOPT_0x19
                 ; 0000 01F7 
                 ; 0000 01F8      LCD;
                 ; 0000 01F9      lcd_gotoxy(0,0);
                 ; 0000 01FA      lcd_putsf("Z FINISH Z") ;
                +
000284 e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
000285 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
000286 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 01FB      lcd_gotoxy(0,0);
000288 940e 0e29 	CALL SUBOPT_0x1A
                 ; 0000 01FC      lcd_putsf("SALAM SABZ");
                +
00028a e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
00028b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
00028c 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 01FD      while(1);
                 _0x16C:
00028e cfff      	RJMP _0x16C
                 ; 0000 01FE     }
                 ;
                 ; void find_stage(void)
                 ; 0000 0201 {
                 _find_stage:
                 ; 0000 0202     while(1)
                 _0x16F:
                 ; 0000 0203     {
                 ; 0000 0204     L1=1;L2=0;R1=1;R2=0;
00028f 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0205     ultra_sonic();
000291 df01      	RCALL _ultra_sonic
                 ; 0000 0206     if((dis_j>15)&&(KRB==0||KCHB==0))
000292 e0ef      	LDI  R30,LOW(15)
000293 e0f0      	LDI  R31,HIGH(15)
000294 15ea      	CP   R30,R10
000295 05fb      	CPC  R31,R11
000296 f43c      	BRGE _0x17B
000297 940e 0df5 	CALL SUBOPT_0xF
000299 f019      	BREQ _0x17C
00029a 940e 0dff 	CALL SUBOPT_0x11
00029c f409      	BRNE _0x17B
                 _0x17C:
00029d c001      	RJMP _0x17E
                 _0x17B:
00029e c00d      	RJMP _0x17A
                 _0x17E:
                 ; 0000 0207         {
                 ; 0000 0208         eslah_jelo();
00029f df8b      	RCALL _eslah_jelo
                 ; 0000 0209         free_victim();
0002a0 dfc3      	RCALL _free_victim
                 ; 0000 020A         r_90(rast90);
0002a1 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 020B          if(dis_j<=15)
0002a3 e0ef      	LDI  R30,LOW(15)
0002a4 e0f0      	LDI  R31,HIGH(15)
0002a5 15ea      	CP   R30,R10
0002a6 05fb      	CPC  R31,R11
0002a7 f024      	BRLT _0x17F
                 ; 0000 020C              {
                 ; 0000 020D               L1=1;L2=0;R1=0;R2=1;
0002a8 940e 0da7 	CALL SUBOPT_0x2
                 ; 0000 020E               r_90(rast90);
0002aa 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 020F              }
                 ; 0000 0210 
                 ; 0000 0211         }
                 _0x17F:
                 ; 0000 0212     }
                 _0x17A:
0002ac cfe2      	RJMP _0x16F
                 ; 0000 0213 }
                 ;
                 ;void find_victim (void)
                 ; 0000 0216     {
                 _find_victim:
                 ; 0000 0217     ultra_sonic();
0002ad dee5      	RCALL _ultra_sonic
                 ; 0000 0218     if((KRB==0||KCHB==0||MASDOUM==1||dis_chp<=6||dis_rp<=6)&&( dis_j>7))
0002ae 940e 0df5 	CALL SUBOPT_0xF
0002b0 f081      	BREQ _0x189
0002b1 940e 0dff 	CALL SUBOPT_0x11
0002b3 f069      	BREQ _0x189
0002b4 999e      	SBIC 0x13,6
0002b5 c00b      	RJMP _0x189
0002b6 e0e6      	LDI  R30,LOW(6)
0002b7 e0f0      	LDI  R31,HIGH(6)
0002b8 15ec      	CP   R30,R12
0002b9 05fd      	CPC  R31,R13
0002ba f434      	BRGE _0x189
0002bb 91a0 0160 	LDS  R26,_dis_rp
0002bd 91b0 0161 	LDS  R27,_dis_rp+1
0002bf 9717      	SBIW R26,7
0002c0 f41c      	BRGE _0x18B
                 _0x189:
0002c1 940e 0e2e 	CALL SUBOPT_0x1B
0002c3 f00c      	BRLT _0x18C
                 _0x18B:
0002c4 c070      	RJMP _0x188
                 _0x18C:
                 ; 0000 0219         {
                 ; 0000 021A           if(KRB==0 && dis_j>7)
0002c5 940e 0df5 	CALL SUBOPT_0xF
0002c7 f419      	BRNE _0x18E
0002c8 940e 0e2e 	CALL SUBOPT_0x1B
0002ca f00c      	BRLT _0x18F
                 _0x18E:
0002cb c00d      	RJMP _0x18D
                 _0x18F:
                 ; 0000 021B             {
                 ; 0000 021C             stop();
0002cc 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 021D             L1=0;L2=1;R1=0;R2=1;
                 ; 0000 021E             delay_ms(1000);
0002ce 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 021F             stop();
0002d0 940e 0e33 	CALL SUBOPT_0x1C
                 ; 0000 0220             L1=1;L2=0;R1=0;R2=1;
                 ; 0000 0221             delay_ms(300);
0002d2 940e 0e36 	CALL SUBOPT_0x1D
                 ; 0000 0222             stop();
0002d4 940e 0e39 	CALL SUBOPT_0x1E
                 ; 0000 0223             L1=1;L2=0;R1=1;R2=0;
                 ; 0000 0224             while(MASDOUM==0);
                 _0x1A8:
0002d6 9b9e      	SBIS 0x13,6
0002d7 cffe      	RJMP _0x1A8
                 ; 0000 0225             }
                 ; 0000 0226         else if(KCHB==0 && dis_j>7)
0002d8 c05c      	RJMP _0x1AB
                 _0x18D:
0002d9 940e 0dff 	CALL SUBOPT_0x11
0002db f419      	BRNE _0x1AD
0002dc 940e 0e2e 	CALL SUBOPT_0x1B
0002de f00c      	BRLT _0x1AE
                 _0x1AD:
0002df c00e      	RJMP _0x1AC
                 _0x1AE:
                 ; 0000 0227             {
                 ; 0000 0228             stop();
0002e0 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 0229             L1=0;L2=1;R1=0;R2=1;
                 ; 0000 022A             delay_ms(1000);
0002e2 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 022B             stop();
0002e4 d0dc      	RCALL _stop
                 ; 0000 022C             L1=0;L2=1;R1=1;R2=0;
0002e5 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 022D             delay_ms(300);
0002e7 940e 0e36 	CALL SUBOPT_0x1D
                 ; 0000 022E             stop();
0002e9 940e 0e39 	CALL SUBOPT_0x1E
                 ; 0000 022F             L1=1;L2=0;R1=1;R2=0;
                 ; 0000 0230             while(MASDOUM==0);
                 _0x1C7:
0002eb 9b9e      	SBIS 0x13,6
0002ec cffe      	RJMP _0x1C7
                 ; 0000 0231             }
                 ; 0000 0232         else if(dis_chp<=6)
0002ed c047      	RJMP _0x1CA
                 _0x1AC:
0002ee e0e6      	LDI  R30,LOW(6)
0002ef e0f0      	LDI  R31,HIGH(6)
0002f0 15ec      	CP   R30,R12
0002f1 05fd      	CPC  R31,R13
0002f2 f09c      	BRLT _0x1CB
                 ; 0000 0233              {
                 ; 0000 0234             stop();
0002f3 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 0235             L1=0;L2=1;R1=0;R2=1;
                 ; 0000 0236             delay_ms(1000);
0002f5 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 0237             stop();
0002f7 d0c9      	RCALL _stop
                 ; 0000 0238             l_90(chap90);
0002f8 940e 0dc5 	CALL SUBOPT_0x8
                 ; 0000 0239             stop();
                 ; 0000 023A             L1=1;L2=0;R1=1;R2=0;
0002fa 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 023B             delay_ms(500);
0002fc 940e 0e3c 	CALL SUBOPT_0x1F
                 ; 0000 023C             stop();
0002fe d0c2      	RCALL _stop
                 ; 0000 023D             r_90(rast90);
0002ff 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 023E             stop();
000301 940e 0e39 	CALL SUBOPT_0x1E
                 ; 0000 023F             L1=1;L2=0;R1=1;R2=0;
                 ; 0000 0240             while(MASDOUM==0);
                 _0x1E4:
000303 9b9e      	SBIS 0x13,6
000304 cffe      	RJMP _0x1E4
                 ; 0000 0241             }
                 ; 0000 0242         else if(dis_rp<=6)
000305 c02f      	RJMP _0x1E7
                 _0x1CB:
000306 940e 0e3f 	CALL SUBOPT_0x20
000308 9717      	SBIW R26,7
000309 f49c      	BRGE _0x1E8
                 ; 0000 0243              {
                 ; 0000 0244              stop();
00030a 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 0245              L1=0;L2=1;R1=0;R2=1;
                 ; 0000 0246              delay_ms(1000);
00030c 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 0247              stop();
00030e d0b2      	RCALL _stop
                 ; 0000 0248              r_90(rast90);
00030f 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 0249              stop();
000311 940e 0e39 	CALL SUBOPT_0x1E
                 ; 0000 024A              L1=1;L2=0;R1=1;R2=0;
                 ; 0000 024B              delay_ms(500);
000313 940e 0e3c 	CALL SUBOPT_0x1F
                 ; 0000 024C              stop();
000315 d0ab      	RCALL _stop
                 ; 0000 024D              l_90(chap90);
000316 940e 0dc5 	CALL SUBOPT_0x8
                 ; 0000 024E              stop();
                 ; 0000 024F              L1=1;L2=0;R1=1;R2=0;
000318 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0250              while(MASDOUM==0);
                 _0x201:
00031a 9b9e      	SBIS 0x13,6
00031b cffe      	RJMP _0x201
                 ; 0000 0251              }
                 ; 0000 0252         else if(MASDOUM==1)
00031c c018      	RJMP _0x204
                 _0x1E8:
00031d 9b9e      	SBIS 0x13,6
00031e c016      	RJMP _0x205
                 ; 0000 0253              {
                 ; 0000 0254              stop();
00031f d0a1      	RCALL _stop
                 ; 0000 0255              DOP=0;
000320 9891      	CBI  0x12,1
                 ; 0000 0256              DCL=1;
000321 9a90      	SBI  0x12,0
                 ; 0000 0257              delay_ms(500);
000322 940e 0e3c 	CALL SUBOPT_0x1F
                 ; 0000 0258              DOP=0;
000324 9891      	CBI  0x12,1
                 ; 0000 0259              DCL=0;
000325 9890      	CBI  0x12,0
                 ; 0000 025A              ELP=1;
000326 9ac7      	SBI  0x18,7
                 ; 0000 025B              ELB=0;
000327 98c6      	CBI  0x18,6
                 ; 0000 025C              while(KP==1);
                 _0x212:
000328 999d      	SBIC 0x13,5
000329 cffe      	RJMP _0x212
                 ; 0000 025D              ELP=0;ELB=0;
00032a 98c7      	CBI  0x18,7
00032b 98c6      	CBI  0x18,6
                 ; 0000 025E              DCL=1;
00032c 9a90      	SBI  0x12,0
                 ; 0000 025F              DOP=0;
00032d 9891      	CBI  0x12,1
                 ; 0000 0260              ELB=1;
00032e 9ac6      	SBI  0x18,6
                 ; 0000 0261              ELP=0;
00032f 98c7      	CBI  0x18,7
                 ; 0000 0262              while(KB==1);
                 _0x221:
000330 999c      	SBIC 0x13,4
000331 cffe      	RJMP _0x221
                 ; 0000 0263              ELP=0;ELB=0;
000332 98c7      	CBI  0x18,7
000333 98c6      	CBI  0x18,6
                 ; 0000 0264              find_stage();
000334 df5a      	RCALL _find_stage
                 ; 0000 0265              }
                 ; 0000 0266         }
                 _0x205:
                 _0x204:
                 _0x1E7:
                 _0x1CA:
                 _0x1AB:
                 ; 0000 0267    }
                 _0x188:
000335 9508      	RET
                 ;
                 ;void red_room(void)
                 ; 0000 026A     {
                 _red_room:
                 ; 0000 026B      while(1)
                 _0x228:
                 ; 0000 026C         {
                 ; 0000 026D          L1=1;L2=0;R1=1;R2=0;
000336 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 026E          ultra_sonic();
000338 de5a      	RCALL _ultra_sonic
                 ; 0000 026F          while(dis_j>=8)
                 _0x233:
000339 e0e8      	LDI  R30,LOW(8)
00033a e0f0      	LDI  R31,HIGH(8)
00033b 16ae      	CP   R10,R30
00033c 06bf      	CPC  R11,R31
00033d f414      	BRGE PC+3
00033e 940c 0388 	JMP _0x235
                 ; 0000 0270              {
                 ; 0000 0271               find_victim();
000340 df6c      	RCALL _find_victim
                 ; 0000 0272               ultra_sonic();
000341 de51      	RCALL _ultra_sonic
                 ; 0000 0273               delay_ms(50);
000342 e3e2      	LDI  R30,LOW(50)
000343 e0f0      	LDI  R31,HIGH(50)
000344 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0274               ultra_sonicb();  //ba in dastour ultra sonicaye balaye fa'al mishan baraye tashkhise mane az masdoum
000346 de23      	RCALL _ultra_sonicb
                 ; 0000 0275               if((dis_rp+dis_chp<65) && (dis_rb+dis_chb>=65)) //age faseleye sensoraye paein kamtar az 65 shod va faseleye balayea bishtar az 65 shod yani masdoume
000347 01f6      	MOVW R30,R12
000348 940e 0e3f 	CALL SUBOPT_0x20
00034a 0fae      	ADD  R26,R30
00034b 1fbf      	ADC  R27,R31
00034c 34a1      	CPI  R26,LOW(0x41)
00034d e0e0      	LDI  R30,HIGH(0x41)
00034e 07be      	CPC  R27,R30
00034f f474      	BRGE _0x237
000350 91e0 0162 	LDS  R30,_dis_chb
000352 91f0 0163 	LDS  R31,_dis_chb+1
000354 91a0 0164 	LDS  R26,_dis_rb
000356 91b0 0165 	LDS  R27,_dis_rb+1
000358 0fae      	ADD  R26,R30
000359 1fbf      	ADC  R27,R31
00035a 34a1      	CPI  R26,LOW(0x41)
00035b e0e0      	LDI  R30,HIGH(0x41)
00035c 07be      	CPC  R27,R30
00035d f40c      	BRGE _0x238
                 _0x237:
00035e c028      	RJMP _0x236
                 _0x238:
                 ; 0000 0276                  {
                 ; 0000 0277                   if(dis_rp<dis_chp)
00035f 940e 0e3f 	CALL SUBOPT_0x20
000361 15ac      	CP   R26,R12
000362 05bd      	CPC  R27,R13
000363 f484      	BRGE _0x239
                 ; 0000 0278                       {
                 ; 0000 0279                       stop();
000364 940e 0e26 	CALL SUBOPT_0x19
                 ; 0000 027A                       LCD;
                 ; 0000 027B                       lcd_gotoxy(0,0);
                 ; 0000 027C                       lcd_putsf(" VICTIM ");
                +
000366 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 60 ) )
000367 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 60 ) )
                 	__POINTW1FN _0x0,60
000368 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 027D                       delay_ms(2000);
00036a 940e 0d9b 	CALL SUBOPT_0x0
                 ; 0000 027E                       lcd_clear();
00036c 940e 0bf3 	CALL _lcd_clear
                 ; 0000 027F                       MOTOR;
00036e 9ac3      	SBI  0x18,3
                 ; 0000 0280                       L1=1;L2=0;R1=0;R2=1;
00036f 940e 0da7 	CALL SUBOPT_0x2
                 ; 0000 0281                       r_90(rast90);
000371 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 0282                       stop();
000373 c00f      	RJMP _0x40D
                 ; 0000 0283                       L1=1;L2=0;R1=1;R2=0;
                 ; 0000 0284                       find_victim();
                 ; 0000 0285                       }
                 ; 0000 0286                   else
                 _0x239:
                 ; 0000 0287                      {
                 ; 0000 0288                       stop();
000374 940e 0e26 	CALL SUBOPT_0x19
                 ; 0000 0289                       LCD;
                 ; 0000 028A                       lcd_gotoxy(0,0);
                 ; 0000 028B                       lcd_putsf(" VICTIM ");
                +
000376 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 60 ) )
000377 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 60 ) )
                 	__POINTW1FN _0x0,60
000378 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 028C                       delay_ms(2000);
00037a 940e 0d9b 	CALL SUBOPT_0x0
                 ; 0000 028D                       lcd_clear();
00037c 940e 0bf3 	CALL _lcd_clear
                 ; 0000 028E                       MOTOR;
00037e 9ac3      	SBI  0x18,3
                 ; 0000 028F                       L1=0;L2=1;R1=1;R2=0;
00037f 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 0290                       l_90(chap90);
000381 940e 0e44 	CALL SUBOPT_0x21
                 ; 0000 0291                       stop();
                 _0x40D:
000383 d03d      	RCALL _stop
                 ; 0000 0292                       L1=1;L2=0;R1=1;R2=0;
000384 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0293                       find_victim();
000386 df26      	RCALL _find_victim
                 ; 0000 0294                      }
                 ; 0000 0295                  }
                 ; 0000 0296              }
                 _0x236:
000387 cfb1      	RJMP _0x233
                 _0x235:
                 ; 0000 0297          eslah_jelo();
000388 dea2      	RCALL _eslah_jelo
                 ; 0000 0298          stop();
000389 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 0299          L1=0;L2=1;R1=0;R2=1;
                 ; 0000 029A          delay_ms(1000);
00038b 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 029B          stop();
00038d 940e 0e33 	CALL SUBOPT_0x1C
                 ; 0000 029C          L1=1;L2=0;R1=0;R2=1;
                 ; 0000 029D          r_90(rast90);
00038f 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 029E          stop();
000391 940e 0e33 	CALL SUBOPT_0x1C
                 ; 0000 029F          L1=1;L2=0;R1=0;R2=1;
                 ; 0000 02A0          r_90(rast90);
000393 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 02A1          stop();
000395 940e 0e4c 	CALL SUBOPT_0x22
                 ; 0000 02A2          eslah_aghab();
                 ; 0000 02A3          L1=1;L2=0;R1=1;R2=0;
000397 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 02A4          delay_ms(3000);
000399 940e 0e23 	CALL SUBOPT_0x18
                 ; 0000 02A5          stop();
00039b d025      	RCALL _stop
                 ; 0000 02A6 
                 ; 0000 02A7          ultra_sonic();
00039c ddf6      	RCALL _ultra_sonic
                 ; 0000 02A8          if(dis_rp+dis_chp>90)
00039d 01f6      	MOVW R30,R12
00039e 940e 0e3f 	CALL SUBOPT_0x20
0003a0 0fae      	ADD  R26,R30
0003a1 1fbf      	ADC  R27,R31
0003a2 35ab      	CPI  R26,LOW(0x5B)
0003a3 e0e0      	LDI  R30,HIGH(0x5B)
0003a4 07be      	CPC  R27,R30
0003a5 f09c      	BRLT _0x283
                 ; 0000 02A9              {
                 ; 0000 02AA               if(dis_rp<dis_chp)
0003a6 940e 0e3f 	CALL SUBOPT_0x20
0003a8 15ac      	CP   R26,R12
0003a9 05bd      	CPC  R27,R13
0003aa f42c      	BRGE _0x284
                 ; 0000 02AB                  {
                 ; 0000 02AC                   L1=1;L2=0;R1=0;R2=1;
0003ab 940e 0da7 	CALL SUBOPT_0x2
                 ; 0000 02AD                   r_90(rast90);
0003ad 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 02AE                   stop();
0003af c004      	RJMP _0x40E
                 ; 0000 02AF                  }
                 ; 0000 02B0               else
                 _0x284:
                 ; 0000 02B1                  {
                 ; 0000 02B2                   L1=0;L2=1;R1=1;R2=0;
0003b0 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 02B3                   l_90(chap90);
0003b2 940e 0e44 	CALL SUBOPT_0x21
                 ; 0000 02B4                   stop();
                 _0x40E:
0003b4 d00c      	RCALL _stop
                 ; 0000 02B5                  }
                 ; 0000 02B6               L1=1;L2=0;R1=1;R2=0;
0003b5 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 02B7               l_90(chap90);
0003b7 940e 0dc5 	CALL SUBOPT_0x8
                 ; 0000 02B8               stop();
                 ; 0000 02B9              }
                 ; 0000 02BA          L1=1;L2=0;R1=1;R2=0;
                 _0x283:
0003b9 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 02BB          delay_ms(4000);
0003bb eae0      	LDI  R30,LOW(4000)
0003bc e0ff      	LDI  R31,HIGH(4000)
0003bd 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 02BC          stop();
0003bf d001      	RCALL _stop
                 ; 0000 02BD         }
0003c0 cf75      	RJMP _0x228
                 ; 0000 02BE     }
                 ;
                 ;char text[40];
                 ;float S0,S1,S2,S3,S4,S5,S6,S7;
                 ;//char silver;
                 ;//void silver_lent (void)
                 ;//    {
                 ;//     S0=read_adc(0);
                 ;//     S0=S0*5/1023;
                 ;//     S1=read_adc(1);
                 ;//     S1=S1*5/1023;
                 ;//     S2=read_adc(2);
                 ;//     S2=S2*5/1023;
                 ;//     S3=read_adc(3);
                 ;//     S3=S3*5/1023;
                 ;//     S4=read_adc(4);
                 ;//     S4=S4*5/1023;
                 ;//     S5=read_adc(5);
                 ;//     S5=S5*5/1023;
                 ;//     S6=read_adc(6);
                 ;//     S6=S6*5/1023;
                 ;//     S7=read_adc(7);
                 ;//     S7=S7*5/1023;
                 ;//
                 ;//     if(S0<0.3)  silver++;
                 ;//     if(S1<0.3)  silver++;
                 ;//     if(S2<0.3)  silver++;
                 ;//     if(S3<0.3)  silver++;
                 ;//     if(S4<0.3)  silver++;
                 ;//     if(S5<0.3)  silver++;
                 ;//     if(S6<0.3)  silver++;
                 ;//     if(S7<0.3)  silver++;
                 ;
                 ;//     if(silver>3)
                 ;//     {
                 ;//      LCD;
                 ;//      lcd_putsf("red_room");
                 ;//      delay_ms(1000);
                 ;//      lcd_clear();
                 ;//      MOTOR;
                 ;//      L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//      delay_ms(200);
                 ;//      L1=0;L2=0;R1=0;R2=0;
                 ;//      delay_ms(200);
                 ;//      eslah_aghab();
                 ;//
                 ;//      L1=1;L2=0;R1=1;R2=0;
                 ;//      en_rast(150);
                 ;//      L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//      delay_ms(200);
                 ;//      L1=0;L2=0;R1=0;R2=0;
                 ;//      delay_ms(200);
                 ;//
                 ;//      L1=1;L2=0;R1=0;R2=1;
                 ;//      en_rast(92);
                 ;//      L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//      delay_ms(200);
                 ;//      L1=0;L2=0;R1=0;R2=0;
                 ;//      delay_ms(200);
                 ;//      eslah_aghab();
                 ;//
                 ;//      L1=1;L2=0;R1=1;R2=0;
                 ;//      en_rast(150);
                 ;//      L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//      delay_ms(200);
                 ;//      L1=0;L2=0;R1=0;R2=0;
                 ;//      delay_ms(200);
                 ;//
                 ;//      L1=0;L2=1;R1=1;R2=0;
                 ;//      en_rast(82);
                 ;//      L1=~L1;L2=~L2;R1=~R1;R2=~R2;
                 ;//      delay_ms(200);
                 ;//      L1=0;L2=0;R1=0;R2=0;
                 ;//      delay_ms(200);
                 ;//      eslah_aghab();
                 ;//      red_room();
                 ;//     }
                 ;//    }
                 ;
                 ;void stop (void)
                 ; 0000 030E     {
                 _stop:
                 ; 0000 030F      L1=~L1;L2=~L2;R1=~R1;R2=~R2;
0003c1 9bc5      	SBIS 0x18,5
0003c2 c002      	RJMP _0x2A6
0003c3 98c5      	CBI  0x18,5
0003c4 c001      	RJMP _0x2A7
                 _0x2A6:
0003c5 9ac5      	SBI  0x18,5
                 _0x2A7:
0003c6 9bc4      	SBIS 0x18,4
0003c7 c002      	RJMP _0x2A8
0003c8 98c4      	CBI  0x18,4
0003c9 c001      	RJMP _0x2A9
                 _0x2A8:
0003ca 9ac4      	SBI  0x18,4
                 _0x2A9:
0003cb 9bc0      	SBIS 0x18,0
0003cc c002      	RJMP _0x2AA
0003cd 98c0      	CBI  0x18,0
0003ce c001      	RJMP _0x2AB
                 _0x2AA:
0003cf 9ac0      	SBI  0x18,0
                 _0x2AB:
0003d0 9bc1      	SBIS 0x18,1
0003d1 c002      	RJMP _0x2AC
0003d2 98c1      	CBI  0x18,1
0003d3 c001      	RJMP _0x2AD
                 _0x2AC:
0003d4 9ac1      	SBI  0x18,1
                 _0x2AD:
                 ; 0000 0310      delay_ms(80);
0003d5 e5e0      	LDI  R30,LOW(80)
0003d6 e0f0      	LDI  R31,HIGH(80)
0003d7 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 0311      L1=0;L2=0;R1=0;R2=0;
0003d9 98c5      	CBI  0x18,5
0003da 98c4      	CBI  0x18,4
0003db 98c0      	CBI  0x18,0
0003dc 98c1      	CBI  0x18,1
                 ; 0000 0312      delay_ms(100);
0003dd e6e4      	LDI  R30,LOW(100)
0003de e0f0      	LDI  R31,HIGH(100)
                 _0x20C0008:
0003df 93fa      	ST   -Y,R31
0003e0 93ea      	ST   -Y,R30
0003e1 940e 0faa 	CALL _delay_ms
                 ; 0000 0313     }
0003e3 9508      	RET
                 ;
                 ;void sathe_shibdar (void)
                 ; 0000 0316     {
                 _sathe_shibdar:
                 ; 0000 0317      if(PINA==0)
0003e4 b3e9      	IN   R30,0x19
0003e5 30e0      	CPI  R30,0
0003e6 f439      	BRNE _0x2B6
                 ; 0000 0318          {
                 ; 0000 0319           timer++;
0003e7 01f2      	MOVW R30,R4
0003e8 9631      	ADIW R30,1
0003e9 012f      	MOVW R4,R30
                 ; 0000 031A           delay_ms(1);
0003ea e0e1      	LDI  R30,LOW(1)
0003eb e0f0      	LDI  R31,HIGH(1)
0003ec 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 031B          }
                 ; 0000 031C 
                 ; 0000 031D      if(PINA!=0)
                 _0x2B6:
0003ee b3e9      	IN   R30,0x19
0003ef 30e0      	CPI  R30,0
0003f0 f011      	BREQ _0x2B7
                 ; 0000 031E           timer=0;
0003f1 2444      	CLR  R4
0003f2 2455      	CLR  R5
                 ; 0000 031F      if(timer>=3000)
                 _0x2B7:
0003f3 ebe8      	LDI  R30,LOW(3000)
0003f4 e0fb      	LDI  R31,HIGH(3000)
0003f5 164e      	CP   R4,R30
0003f6 065f      	CPC  R5,R31
0003f7 f410      	BRSH PC+3
0003f8 940c 0446 	JMP _0x2B8
                 ; 0000 0320         {
                 ; 0000 0321         L1=1;L2=0;R1=1;R2=0;
0003fa 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0322         ultra_sonic();
0003fc dd96      	RCALL _ultra_sonic
                 ; 0000 0323         while ((dis_j>8) && (KRB==1 && KCHB==1))
                 _0x2C1:
0003fd e0e8      	LDI  R30,LOW(8)
0003fe e0f0      	LDI  R31,HIGH(8)
0003ff 15ea      	CP   R30,R10
000400 05fb      	CPC  R31,R11
000401 f434      	BRGE _0x2C4
000402 9b9a      	SBIS 0x13,2
000403 c002      	RJMP _0x2C5
000404 9998      	SBIC 0x13,0
000405 c001      	RJMP _0x2C6
                 _0x2C5:
000406 c001      	RJMP _0x2C4
                 _0x2C6:
000407 c001      	RJMP _0x2C7
                 _0x2C4:
000408 c002      	RJMP _0x2C3
                 _0x2C7:
                 ; 0000 0324                ultra_sonic();
000409 dd89      	RCALL _ultra_sonic
00040a cff2      	RJMP _0x2C1
                 _0x2C3:
                 ; 0000 0326 eslah_jelo();
00040b de1f      	RCALL _eslah_jelo
                 ; 0000 0327         stop();
00040c 940e 0de7 	CALL SUBOPT_0xD
                 ; 0000 0328         L1=0;L2=1;R1=0;R2=1;
                 ; 0000 0329         delay_ms(700);
00040e 940e 0dcf 	CALL SUBOPT_0x9
                 ; 0000 032A         stop();
000410 940e 0e33 	CALL SUBOPT_0x1C
                 ; 0000 032B         L1=1;L2=0;R1=0;R2=1;
                 ; 0000 032C         r_90(rast90);
000412 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 032D         stop();
000414 940e 0e4c 	CALL SUBOPT_0x22
                 ; 0000 032E         eslah_aghab();
                 ; 0000 032F         delay_ms(500);
000416 940e 0e3c 	CALL SUBOPT_0x1F
                 ; 0000 0330         eslah_aghab();
000418 ddca      	RCALL _eslah_aghab
                 ; 0000 0331 
                 ; 0000 0332         L1=1;L2=0;R1=1;R2=0;
000419 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 0333         delay_ms(1000);
00041b 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 0334         stop();
00041d dfa3      	RCALL _stop
                 ; 0000 0335 
                 ; 0000 0336         LCD;
00041e 98c3      	CBI  0x18,3
                 ; 0000 0337         lcd_putsf("  RED ROOM  ");
                +
00041f e9eb     +LDI R30 , LOW ( 2 * _0x0 + ( 69 ) )
000420 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 69 ) )
                 	__POINTW1FN _0x0,69
000421 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 0338         lcd_gotoxy(0,0);
000423 940e 0e29 	CALL SUBOPT_0x1A
                 ; 0000 0339         delay_ms(1000);
000425 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 033A         lcd_clear();
000427 940e 0bf3 	CALL _lcd_clear
                 ; 0000 033B 
                 ; 0000 033C         MOTOR;
000429 9ac3      	SBI  0x18,3
                 ; 0000 033D         L1=1;L2=0;R1=1;R2=0;
00042a 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 033E         delay_ms(1000);
00042c 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 033F         stop();
00042e 940e 0e33 	CALL SUBOPT_0x1C
                 ; 0000 0340 
                 ; 0000 0341         L1=1;L2=0;R1=0;R2=1;
                 ; 0000 0342         r_90(rast90);
000430 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 0343         stop();
000432 940e 0e4c 	CALL SUBOPT_0x22
                 ; 0000 0344         eslah_aghab();
                 ; 0000 0345         delay_ms(500);
000434 940e 0e3c 	CALL SUBOPT_0x1F
                 ; 0000 0346         eslah_aghab();
000436 ddac      	RCALL _eslah_aghab
                 ; 0000 0347         delay_ms(1000);
000437 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 0348 
                 ; 0000 0349         L1=1;L2=0;R1=1;R2=0;
000439 940e 0dbd 	CALL SUBOPT_0x6
                 ; 0000 034A         delay_ms(3000);
00043b 940e 0e23 	CALL SUBOPT_0x18
                 ; 0000 034B         stop();
00043d df83      	RCALL _stop
                 ; 0000 034C 
                 ; 0000 034D         L1=0;L2=1;R1=1;R2=0;
00043e 940e 0dac 	CALL SUBOPT_0x3
                 ; 0000 034E         l_90(chap90);
000440 940e 0dc5 	CALL SUBOPT_0x8
                 ; 0000 034F         stop();
                 ; 0000 0350         eslah_aghab();
000442 dda0      	RCALL _eslah_aghab
                 ; 0000 0351         delay_ms(1000);
000443 940e 0da1 	CALL SUBOPT_0x1
                 ; 0000 0352         red_room();
000445 def0      	RCALL _red_room
                 ; 0000 0353         }
                 ; 0000 0354 
                 ; 0000 0355     }
                 _0x2B8:
000446 9508      	RET
                 ;
                 ;
                 ;void path_finder (void)
                 ; 0000 0359     {
                 _path_finder:
                 ; 0000 035A      if (PINA==0b00010000 || PINA==0b00001000 || PINA==0b00011000 || PINA==0b00110000 || PINA==0b00001100 )
000447 b3e9      	IN   R30,0x19
000448 31e0      	CPI  R30,LOW(0x10)
000449 f061      	BREQ _0x305
00044a b3e9      	IN   R30,0x19
00044b 30e8      	CPI  R30,LOW(0x8)
00044c f049      	BREQ _0x305
00044d b3e9      	IN   R30,0x19
00044e 31e8      	CPI  R30,LOW(0x18)
00044f f031      	BREQ _0x305
000450 b3e9      	IN   R30,0x19
000451 33e0      	CPI  R30,LOW(0x30)
000452 f019      	BREQ _0x305
000453 b3e9      	IN   R30,0x19
000454 30ec      	CPI  R30,LOW(0xC)
000455 f409      	BRNE _0x304
                 _0x305:
                 ; 0000 035B         {R1=1;R2=0;L1=1;L2=0;}
000456 c0fa      	RJMP _0x40F
                 ; 0000 035C 
                 ; 0000 035D      else if (PINA==0b00000001 || PINA==0b00000011 || PINA==0b00000010 || PINA==0b00000110 ||
                 _0x304:
                 ; 0000 035E           PINA==0b00000111 || PINA==0b00001110 || PINA==0b00011100 || PINA==0b00001111 )
000457 b3e9      	IN   R30,0x19
000458 30e1      	CPI  R30,LOW(0x1)
000459 f0a9      	BREQ _0x311
00045a b3e9      	IN   R30,0x19
00045b 30e3      	CPI  R30,LOW(0x3)
00045c f091      	BREQ _0x311
00045d b3e9      	IN   R30,0x19
00045e 30e2      	CPI  R30,LOW(0x2)
00045f f079      	BREQ _0x311
000460 b3e9      	IN   R30,0x19
000461 30e6      	CPI  R30,LOW(0x6)
000462 f061      	BREQ _0x311
000463 b3e9      	IN   R30,0x19
000464 30e7      	CPI  R30,LOW(0x7)
000465 f049      	BREQ _0x311
000466 b3e9      	IN   R30,0x19
000467 30ee      	CPI  R30,LOW(0xE)
000468 f031      	BREQ _0x311
000469 b3e9      	IN   R30,0x19
00046a 31ec      	CPI  R30,LOW(0x1C)
00046b f019      	BREQ _0x311
00046c b3e9      	IN   R30,0x19
00046d 30ef      	CPI  R30,LOW(0xF)
00046e f419      	BRNE _0x310
                 _0x311:
                 ; 0000 035F         {R1=1;R2=0;L1=0;L2=1;}
00046f 940e 0dfa 	CALL SUBOPT_0x10
                 ; 0000 0360 
                 ; 0000 0361      else if (PINA==0b00000100)    // baraye inke avale boridegi robot dor nazane
000471 c0e3      	RJMP _0x31B
                 _0x310:
000472 b3e9      	IN   R30,0x19
000473 30e4      	CPI  R30,LOW(0x4)
000474 f419      	BRNE _0x31C
                 ; 0000 0362                 {
                 ; 0000 0363                 {R1=1;R2=0;L1=0;L2=1;}
000475 940e 0dfa 	CALL SUBOPT_0x10
                 ; 0000 0364 //                while (PINA==0b00000100);
                 ; 0000 0365 //                {R1=1;R2=0;L1=1;L2=0;};
                 ; 0000 0366                 }
                 ; 0000 0367      else if (PINA==0b00001001 || PINA==0b00001011 || PINA==0b00001010 || PINA==0b00001110 || PINA==0b00001101
000477 c0dd      	RJMP _0x325
                 _0x31C:
                 ; 0000 0368           || PINA==0b00010001 || PINA==0b00010011 || PINA==0b00010010 || PINA==0b00010110
                 ; 0000 0369           || PINA==0b00011001 || PINA==0b00011011 || PINA==0b00011010 || PINA==0b00011110
                 ; 0000 036A           || PINA==0b00110001 || PINA==0b00110011 || PINA==0b00110010 || PINA==0b00110110 )
000478 b3e9      	IN   R30,0x19
000479 30e9      	CPI  R30,LOW(0x9)
00047a f181      	BREQ _0x327
00047b b3e9      	IN   R30,0x19
00047c 30eb      	CPI  R30,LOW(0xB)
00047d f169      	BREQ _0x327
00047e b3e9      	IN   R30,0x19
00047f 30ea      	CPI  R30,LOW(0xA)
000480 f151      	BREQ _0x327
000481 b3e9      	IN   R30,0x19
000482 30ee      	CPI  R30,LOW(0xE)
000483 f139      	BREQ _0x327
000484 b3e9      	IN   R30,0x19
000485 30ed      	CPI  R30,LOW(0xD)
000486 f121      	BREQ _0x327
000487 b3e9      	IN   R30,0x19
000488 31e1      	CPI  R30,LOW(0x11)
000489 f109      	BREQ _0x327
00048a b3e9      	IN   R30,0x19
00048b 31e3      	CPI  R30,LOW(0x13)
00048c f0f1      	BREQ _0x327
00048d b3e9      	IN   R30,0x19
00048e 31e2      	CPI  R30,LOW(0x12)
00048f f0d9      	BREQ _0x327
000490 b3e9      	IN   R30,0x19
000491 31e6      	CPI  R30,LOW(0x16)
000492 f0c1      	BREQ _0x327
000493 b3e9      	IN   R30,0x19
000494 31e9      	CPI  R30,LOW(0x19)
000495 f0a9      	BREQ _0x327
000496 b3e9      	IN   R30,0x19
000497 31eb      	CPI  R30,LOW(0x1B)
000498 f091      	BREQ _0x327
000499 b3e9      	IN   R30,0x19
00049a 31ea      	CPI  R30,LOW(0x1A)
00049b f079      	BREQ _0x327
00049c b3e9      	IN   R30,0x19
00049d 31ee      	CPI  R30,LOW(0x1E)
00049e f061      	BREQ _0x327
00049f b3e9      	IN   R30,0x19
0004a0 33e1      	CPI  R30,LOW(0x31)
0004a1 f049      	BREQ _0x327
0004a2 b3e9      	IN   R30,0x19
0004a3 33e3      	CPI  R30,LOW(0x33)
0004a4 f031      	BREQ _0x327
0004a5 b3e9      	IN   R30,0x19
0004a6 33e2      	CPI  R30,LOW(0x32)
0004a7 f019      	BREQ _0x327
0004a8 b3e9      	IN   R30,0x19
0004a9 33e6      	CPI  R30,LOW(0x36)
0004aa f481      	BRNE _0x326
                 _0x327:
                 ; 0000 036B                 {
                 ; 0000 036C                 stop();
0004ab 940e 0e50 	CALL SUBOPT_0x23
                 ; 0000 036D                 LCD;
                 ; 0000 036E                 delay_ms(10);
                 ; 0000 036F                 MOTOR;
0004ad 9ac3      	SBI  0x18,3
                 ; 0000 0370                 {R1=1;R2=0;L1=1;L2=0;};
0004ae 940e 0e0e 	CALL SUBOPT_0x14
                 ; 0000 0371                 // bayad sorat kam beshe inja
                 ; 0000 0372                 while (PINA!=0);
                 _0x335:
0004b0 b3e9      	IN   R30,0x19
0004b1 30e0      	CPI  R30,0
0004b2 f7e9      	BRNE _0x335
                 ; 0000 0373                 stop();
0004b3 940e 0e50 	CALL SUBOPT_0x23
                 ; 0000 0374                 LCD;
                 ; 0000 0375                 delay_ms(10);
                 ; 0000 0376                 MOTOR;
0004b5 9ac3      	SBI  0x18,3
                 ; 0000 0377                 {R1=1;R2=0;L1=0;L2=1;}
0004b6 940e 0dfa 	CALL SUBOPT_0x10
                 ; 0000 0378                 while (PINA.0==0);
                 _0x344:
0004b8 9bc8      	SBIS 0x19,0
0004b9 cffe      	RJMP _0x344
                 ; 0000 0379                 }
                 ; 0000 037A 
                 ; 0000 037B      else if (PINA==0b01000001 || PINA==0b01100001 || PINA==0b00100001 || PINA==0b00110001
0004ba c09a      	RJMP _0x347
                 _0x326:
                 ; 0000 037C           || PINA==0b00100010 || PINA==0b00110010 || PINA==0b01000110 )
0004bb b3e9      	IN   R30,0x19
0004bc 34e1      	CPI  R30,LOW(0x41)
0004bd f091      	BREQ _0x349
0004be b3e9      	IN   R30,0x19
0004bf 36e1      	CPI  R30,LOW(0x61)
0004c0 f079      	BREQ _0x349
0004c1 b3e9      	IN   R30,0x19
0004c2 32e1      	CPI  R30,LOW(0x21)
0004c3 f061      	BREQ _0x349
0004c4 b3e9      	IN   R30,0x19
0004c5 33e1      	CPI  R30,LOW(0x31)
0004c6 f049      	BREQ _0x349
0004c7 b3e9      	IN   R30,0x19
0004c8 32e2      	CPI  R30,LOW(0x22)
0004c9 f031      	BREQ _0x349
0004ca b3e9      	IN   R30,0x19
0004cb 33e2      	CPI  R30,LOW(0x32)
0004cc f019      	BREQ _0x349
0004cd b3e9      	IN   R30,0x19
0004ce 34e6      	CPI  R30,LOW(0x46)
0004cf f409      	BRNE _0x348
                 _0x349:
                 ; 0000 037D 
                 ; 0000 037E         {R1=1;R2=0;L1=1;L2=0;}
0004d0 c080      	RJMP _0x40F
                 ; 0000 037F 
                 ; 0000 0380      else if (PINA==0b10000000 || PINA==0b11000000 || PINA==0b01000000 || PINA==0b01100000 || PINA==0b00110000
                 _0x348:
                 ; 0000 0381           || PINA==0b11100000 || PINA==0b01110000 || PINA==0b00111000 || PINA==0b11110000 )
0004d1 b3e9      	IN   R30,0x19
0004d2 38e0      	CPI  R30,LOW(0x80)
0004d3 f0c1      	BREQ _0x355
0004d4 b3e9      	IN   R30,0x19
0004d5 3ce0      	CPI  R30,LOW(0xC0)
0004d6 f0a9      	BREQ _0x355
0004d7 b3e9      	IN   R30,0x19
0004d8 34e0      	CPI  R30,LOW(0x40)
0004d9 f091      	BREQ _0x355
0004da b3e9      	IN   R30,0x19
0004db 36e0      	CPI  R30,LOW(0x60)
0004dc f079      	BREQ _0x355
0004dd b3e9      	IN   R30,0x19
0004de 33e0      	CPI  R30,LOW(0x30)
0004df f061      	BREQ _0x355
0004e0 b3e9      	IN   R30,0x19
0004e1 3ee0      	CPI  R30,LOW(0xE0)
0004e2 f049      	BREQ _0x355
0004e3 b3e9      	IN   R30,0x19
0004e4 37e0      	CPI  R30,LOW(0x70)
0004e5 f031      	BREQ _0x355
0004e6 b3e9      	IN   R30,0x19
0004e7 33e8      	CPI  R30,LOW(0x38)
0004e8 f019      	BREQ _0x355
0004e9 b3e9      	IN   R30,0x19
0004ea 3fe0      	CPI  R30,LOW(0xF0)
0004eb f419      	BRNE _0x354
                 _0x355:
                 ; 0000 0382         {R1=0;R2=1;L1=1;L2=0;}
0004ec 98c0      	CBI  0x18,0
0004ed 9ac1      	SBI  0x18,1
0004ee c064      	RJMP _0x410
                 ; 0000 0383 
                 ; 0000 0384      else if (PINA==0b00100000)    // baraye inke avale boridegi robot dor nazane
                 _0x354:
0004ef b3e9      	IN   R30,0x19
0004f0 32e0      	CPI  R30,LOW(0x20)
0004f1 f419      	BRNE _0x360
                 ; 0000 0385                 {
                 ; 0000 0386                 {R1=0;R2=1;L1=1;L2=0;}
0004f2 98c0      	CBI  0x18,0
0004f3 9ac1      	SBI  0x18,1
0004f4 c05e      	RJMP _0x410
                 ; 0000 0387 //                while (PINA==0b00100000);
                 ; 0000 0388 //                {R1=1;R2=0;L1=1;L2=0;};
                 ; 0000 0389                 }
                 ; 0000 038A 
                 ; 0000 038B      else if (PINA==0b10010000 || PINA==0b11010000 || PINA==0b01010000 || PINA==0b01110000 || PINA==0b10110000
                 _0x360:
                 ; 0000 038C           || PINA==0b10001000 || PINA==0b11001000 || PINA==0b01001000 || PINA==0b01101000
                 ; 0000 038D           || PINA==0b10011000 || PINA==0b11011000 || PINA==0b01011000 || PINA==0b01111000
                 ; 0000 038E           || PINA==0b10001100 || PINA==0b11001100 || PINA==0b01001100 || PINA==0b01101100 )
0004f5 b3e9      	IN   R30,0x19
0004f6 39e0      	CPI  R30,LOW(0x90)
0004f7 f181      	BREQ _0x36B
0004f8 b3e9      	IN   R30,0x19
0004f9 3de0      	CPI  R30,LOW(0xD0)
0004fa f169      	BREQ _0x36B
0004fb b3e9      	IN   R30,0x19
0004fc 35e0      	CPI  R30,LOW(0x50)
0004fd f151      	BREQ _0x36B
0004fe b3e9      	IN   R30,0x19
0004ff 37e0      	CPI  R30,LOW(0x70)
000500 f139      	BREQ _0x36B
000501 b3e9      	IN   R30,0x19
000502 3be0      	CPI  R30,LOW(0xB0)
000503 f121      	BREQ _0x36B
000504 b3e9      	IN   R30,0x19
000505 38e8      	CPI  R30,LOW(0x88)
000506 f109      	BREQ _0x36B
000507 b3e9      	IN   R30,0x19
000508 3ce8      	CPI  R30,LOW(0xC8)
000509 f0f1      	BREQ _0x36B
00050a b3e9      	IN   R30,0x19
00050b 34e8      	CPI  R30,LOW(0x48)
00050c f0d9      	BREQ _0x36B
00050d b3e9      	IN   R30,0x19
00050e 36e8      	CPI  R30,LOW(0x68)
00050f f0c1      	BREQ _0x36B
000510 b3e9      	IN   R30,0x19
000511 39e8      	CPI  R30,LOW(0x98)
000512 f0a9      	BREQ _0x36B
000513 b3e9      	IN   R30,0x19
000514 3de8      	CPI  R30,LOW(0xD8)
000515 f091      	BREQ _0x36B
000516 b3e9      	IN   R30,0x19
000517 35e8      	CPI  R30,LOW(0x58)
000518 f079      	BREQ _0x36B
000519 b3e9      	IN   R30,0x19
00051a 37e8      	CPI  R30,LOW(0x78)
00051b f061      	BREQ _0x36B
00051c b3e9      	IN   R30,0x19
00051d 38ec      	CPI  R30,LOW(0x8C)
00051e f049      	BREQ _0x36B
00051f b3e9      	IN   R30,0x19
000520 3cec      	CPI  R30,LOW(0xCC)
000521 f031      	BREQ _0x36B
000522 b3e9      	IN   R30,0x19
000523 34ec      	CPI  R30,LOW(0x4C)
000524 f019      	BREQ _0x36B
000525 b3e9      	IN   R30,0x19
000526 36ec      	CPI  R30,LOW(0x6C)
000527 f481      	BRNE _0x36A
                 _0x36B:
                 ; 0000 038F                 {
                 ; 0000 0390                 stop();
000528 940e 0e50 	CALL SUBOPT_0x23
                 ; 0000 0391                 LCD;
                 ; 0000 0392                 delay_ms(10);
                 ; 0000 0393                 MOTOR;
00052a 9ac3      	SBI  0x18,3
                 ; 0000 0394                 {R1=1;R2=0;L1=1;L2=0;};
00052b 940e 0e0e 	CALL SUBOPT_0x14
                 ; 0000 0395                 // bayad sorat kam beshe inja
                 ; 0000 0396                 while (PINA!=0);
                 _0x379:
00052d b3e9      	IN   R30,0x19
00052e 30e0      	CPI  R30,0
00052f f7e9      	BRNE _0x379
                 ; 0000 0397                 stop();
000530 940e 0e50 	CALL SUBOPT_0x23
                 ; 0000 0398                 LCD;
                 ; 0000 0399                 delay_ms(10);
                 ; 0000 039A                 MOTOR;
000532 9ac3      	SBI  0x18,3
                 ; 0000 039B                 {R1=0;R2=1;L1=1;L2=0;}
000533 940e 0e04 	CALL SUBOPT_0x12
                 ; 0000 039C                 while (PINA.7==0);
                 _0x388:
000535 9bcf      	SBIS 0x19,7
000536 cffe      	RJMP _0x388
                 ; 0000 039D                 }
                 ; 0000 039E      else if (PINA==0b10000010 || PINA==0b10000110 || PINA==0b10000100 || PINA==0b10001100 || PINA==0b01000100 || PINA==0b01001100 || PINA==0b01100010 )
000537 c01d      	RJMP _0x38B
                 _0x36A:
000538 b3e9      	IN   R30,0x19
000539 38e2      	CPI  R30,LOW(0x82)
00053a f091      	BREQ _0x38D
00053b b3e9      	IN   R30,0x19
00053c 38e6      	CPI  R30,LOW(0x86)
00053d f079      	BREQ _0x38D
00053e b3e9      	IN   R30,0x19
00053f 38e4      	CPI  R30,LOW(0x84)
000540 f061      	BREQ _0x38D
000541 b3e9      	IN   R30,0x19
000542 38ec      	CPI  R30,LOW(0x8C)
000543 f049      	BREQ _0x38D
000544 b3e9      	IN   R30,0x19
000545 34e4      	CPI  R30,LOW(0x44)
000546 f031      	BREQ _0x38D
000547 b3e9      	IN   R30,0x19
000548 34ec      	CPI  R30,LOW(0x4C)
000549 f019      	BREQ _0x38D
00054a b3e9      	IN   R30,0x19
00054b 36e2      	CPI  R30,LOW(0x62)
00054c f409      	BRNE _0x38C
                 _0x38D:
                 ; 0000 039F         {R1=1;R2=0;L1=1;L2=0;}
00054d c003      	RJMP _0x40F
                 ; 0000 03A0 
                 ; 0000 03A1      else if(PINA==0);
                 _0x38C:
00054e b3e9      	IN   R30,0x19
00054f 30e0      	CPI  R30,0
000550 f021      	BREQ _0x399
                 ; 0000 03A2      else {R1=1;R2=0;L1=1;L2=0;}
                 _0x40F:
000551 9ac0      	SBI  0x18,0
000552 98c1      	CBI  0x18,1
                 _0x410:
000553 9ac5      	SBI  0x18,5
000554 98c4      	CBI  0x18,4
                 _0x399:
                 _0x38B:
                 _0x347:
                 _0x325:
                 _0x31B:
                 ; 0000 03A3      sathe_shibdar();
000555 de8e      	RCALL _sathe_shibdar
                 ; 0000 03A4 
                 ; 0000 03A5     }
000556 9508      	RET
                 ;
                 ;void right90(void)
                 ; 0000 03A8     {
                 _right90:
                 ; 0000 03A9     lcd_clear();
000557 940e 0bf3 	CALL _lcd_clear
                 ; 0000 03AA     while (1)
                 _0x3A2:
                 ; 0000 03AB         {
                 ; 0000 03AC         LCD;
000559 940e 0e56 	CALL SUBOPT_0x24
                 ; 0000 03AD         sprintf(text," 90 rast=%4d ",rast90);
                +
00055b eae8     +LDI R30 , LOW ( 2 * _0x0 + ( 82 ) )
00055c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 82 ) )
                 	__POINTW1FN _0x0,82
00055d 93fa      	ST   -Y,R31
00055e 93ea      	ST   -Y,R30
00055f 940e 0e5c 	CALL SUBOPT_0x25
000561 940e 0e61 	CALL SUBOPT_0x26
                 ; 0000 03AE         lcd_gotoxy(0,0);
                 ; 0000 03AF         lcd_puts(text);
000563 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 03B0 
                 ; 0000 03B1         if (KRB==0)
000565 999a      	SBIC 0x13,2
000566 c009      	RJMP _0x3A7
                 ; 0000 03B2             {
                 ; 0000 03B3              rast90+=100;
000567 940e 0e5c 	CALL SUBOPT_0x25
000569 59ec      	SUBI R30,LOW(-100)
00056a 4fff      	SBCI R31,HIGH(-100)
00056b 940e 0e70 	CALL SUBOPT_0x28
                 ; 0000 03B4              delay_ms(250);
00056d 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03B5             }
                 ; 0000 03B6         else if (KRP==0)
00056f c029      	RJMP _0x3A8
                 _0x3A7:
000570 999b      	SBIC 0x13,3
000571 c008      	RJMP _0x3A9
                 ; 0000 03B7             {
                 ; 0000 03B8             delay_ms(250);
000572 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03B9             rast90+=10;
000574 940e 0e5c 	CALL SUBOPT_0x25
000576 963a      	ADIW R30,10
000577 940e 0e70 	CALL SUBOPT_0x28
                 ; 0000 03BA             }
                 ; 0000 03BB         else if (KCHB==0)
000579 c01f      	RJMP _0x3AA
                 _0x3A9:
00057a 9998      	SBIC 0x13,0
00057b c009      	RJMP _0x3AB
                 ; 0000 03BC             {
                 ; 0000 03BD             rast90-=100;
00057c 940e 0e5c 	CALL SUBOPT_0x25
00057e 56e4      	SUBI R30,LOW(100)
00057f 40f0      	SBCI R31,HIGH(100)
000580 940e 0e70 	CALL SUBOPT_0x28
                 ; 0000 03BE             delay_ms(250);
000582 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03BF             }
                 ; 0000 03C0         else if (KCHP==0)
000584 c014      	RJMP _0x3AC
                 _0x3AB:
000585 9999      	SBIC 0x13,1
000586 c008      	RJMP _0x3AD
                 ; 0000 03C1             {
                 ; 0000 03C2             rast90-=10;
000587 940e 0e5c 	CALL SUBOPT_0x25
000589 973a      	SBIW R30,10
00058a 940e 0e70 	CALL SUBOPT_0x28
                 ; 0000 03C3             delay_ms(250);
00058c 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03C4             }
                 ; 0000 03C5         else if (MASDOUM==1)
00058e c00a      	RJMP _0x3AE
                 _0x3AD:
00058f 9b9e      	SBIS 0x13,6
000590 c008      	RJMP _0x3AF
                 ; 0000 03C6             {
                 ; 0000 03C7             while (MASDOUM==1);
                 _0x3B0:
000591 999e      	SBIC 0x13,6
000592 cffe      	RJMP _0x3B0
                 ; 0000 03C8             delay_ms(300);
000593 940e 0e36 	CALL SUBOPT_0x1D
                 ; 0000 03C9             MOTOR;
000595 9ac3      	SBI  0x18,3
                 ; 0000 03CA             //R1=0;R2=1;L1=1;L2=0;ELB=0;ELP=0;
                 ; 0000 03CB             r_90(rast90);
000596 940e 0db5 	CALL SUBOPT_0x5
                 ; 0000 03CC             stop();
000598 de28      	RCALL _stop
                 ; 0000 03CD             }
                 ; 0000 03CE 
                 ; 0000 03CF         if (rast90<10)
                 _0x3AF:
                 _0x3AE:
                 _0x3AC:
                 _0x3AA:
                 _0x3A8:
000599 940e 0e5c 	CALL SUBOPT_0x25
00059b 973a      	SBIW R30,10
00059c f434      	BRGE _0x3B5
                 ; 0000 03D0             rast90=10;
00059d e0a0      	LDI  R26,LOW(_rast90)
00059e e0b0      	LDI  R27,HIGH(_rast90)
00059f e0ea      	LDI  R30,LOW(10)
0005a0 e0f0      	LDI  R31,HIGH(10)
0005a1 940e 1218 	CALL __EEPROMWRW
                 ; 0000 03D1         }
                 _0x3B5:
0005a3 cfb5      	RJMP _0x3A2
                 ; 0000 03D2     }
                 ;
                 ;void chap_90(void)
                 ; 0000 03D5     {
                 _chap_90:
                 ; 0000 03D6     lcd_clear();
0005a4 940e 0bf3 	CALL _lcd_clear
                 ; 0000 03D7     while (1)
                 _0x3B6:
                 ; 0000 03D8         {
                 ; 0000 03D9         LCD;
0005a6 940e 0e56 	CALL SUBOPT_0x24
                 ; 0000 03DA         sprintf(text," 90 chap=%4d ",chap90);
                +
0005a8 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 96 ) )
0005a9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 96 ) )
                 	__POINTW1FN _0x0,96
0005aa 93fa      	ST   -Y,R31
0005ab 93ea      	ST   -Y,R30
0005ac 940e 0e75 	CALL SUBOPT_0x29
0005ae 940e 0e61 	CALL SUBOPT_0x26
                 ; 0000 03DB         lcd_gotoxy(0,0);
                 ; 0000 03DC         lcd_puts(text);
0005b0 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 03DD 
                 ; 0000 03DE         if (KRB==0)
0005b2 999a      	SBIC 0x13,2
0005b3 c009      	RJMP _0x3BB
                 ; 0000 03DF             {
                 ; 0000 03E0             chap90+=100;
0005b4 940e 0e75 	CALL SUBOPT_0x29
0005b6 59ec      	SUBI R30,LOW(-100)
0005b7 4fff      	SBCI R31,HIGH(-100)
0005b8 940e 0e7a 	CALL SUBOPT_0x2A
                 ; 0000 03E1             delay_ms(250);
0005ba 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03E2             }
                 ; 0000 03E3         else if (KRP==0)
0005bc c028      	RJMP _0x3BC
                 _0x3BB:
0005bd 999b      	SBIC 0x13,3
0005be c008      	RJMP _0x3BD
                 ; 0000 03E4             {
                 ; 0000 03E5             delay_ms(250);
0005bf 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03E6             chap90+=10;
0005c1 940e 0e75 	CALL SUBOPT_0x29
0005c3 963a      	ADIW R30,10
0005c4 940e 0e7a 	CALL SUBOPT_0x2A
                 ; 0000 03E7             }
                 ; 0000 03E8         else if (KCHB==0)
0005c6 c01e      	RJMP _0x3BE
                 _0x3BD:
0005c7 9998      	SBIC 0x13,0
0005c8 c009      	RJMP _0x3BF
                 ; 0000 03E9             {
                 ; 0000 03EA             chap90-=100;
0005c9 940e 0e75 	CALL SUBOPT_0x29
0005cb 56e4      	SUBI R30,LOW(100)
0005cc 40f0      	SBCI R31,HIGH(100)
0005cd 940e 0e7a 	CALL SUBOPT_0x2A
                 ; 0000 03EB             delay_ms(250);
0005cf 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03EC             }
                 ; 0000 03ED         else if (KCHP==0)
0005d1 c013      	RJMP _0x3C0
                 _0x3BF:
0005d2 9999      	SBIC 0x13,1
0005d3 c008      	RJMP _0x3C1
                 ; 0000 03EE             {
                 ; 0000 03EF             chap90-=10;
0005d4 940e 0e75 	CALL SUBOPT_0x29
0005d6 973a      	SBIW R30,10
0005d7 940e 0e7a 	CALL SUBOPT_0x2A
                 ; 0000 03F0             delay_ms(250);
0005d9 940e 0dc2 	CALL SUBOPT_0x7
                 ; 0000 03F1             }
                 ; 0000 03F2         else if (MASDOUM==1)
0005db c009      	RJMP _0x3C2
                 _0x3C1:
0005dc 9b9e      	SBIS 0x13,6
0005dd c007      	RJMP _0x3C3
                 ; 0000 03F3             {
                 ; 0000 03F4             while (MASDOUM==1);
                 _0x3C4:
0005de 999e      	SBIC 0x13,6
0005df cffe      	RJMP _0x3C4
                 ; 0000 03F5             delay_ms(300);
0005e0 940e 0e36 	CALL SUBOPT_0x1D
                 ; 0000 03F6             MOTOR;
0005e2 9ac3      	SBI  0x18,3
                 ; 0000 03F7             //R1=1;R2=0;L1=0;L2=1;ELB=0;ELP=0;
                 ; 0000 03F8             l_90(chap90);
0005e3 940e 0dc5 	CALL SUBOPT_0x8
                 ; 0000 03F9             stop();
                 ; 0000 03FA             }
                 ; 0000 03FB 
                 ; 0000 03FC         if (chap90<10)
                 _0x3C3:
                 _0x3C2:
                 _0x3C0:
                 _0x3BE:
                 _0x3BC:
0005e5 940e 0e75 	CALL SUBOPT_0x29
0005e7 973a      	SBIW R30,10
0005e8 f434      	BRGE _0x3C9
                 ; 0000 03FD             chap90=10;
0005e9 e0a2      	LDI  R26,LOW(_chap90)
0005ea e0b0      	LDI  R27,HIGH(_chap90)
0005eb e0ea      	LDI  R30,LOW(10)
0005ec e0f0      	LDI  R31,HIGH(10)
0005ed 940e 1218 	CALL __EEPROMWRW
                 ; 0000 03FE         }
                 _0x3C9:
0005ef cfb6      	RJMP _0x3B6
                 ; 0000 03FF     }
                 ;
                 ;
                 ;void tanzimat (void)
                 ; 0000 0403   {
                 _tanzimat:
                 ; 0000 0404    while (1)
                 _0x3CA:
                 ; 0000 0405        {
                 ; 0000 0406         LCD;
0005f0 940e 0e13 	CALL SUBOPT_0x15
                 ; 0000 0407         lcd_gotoxy(0,0);
                 ; 0000 0408         sprintf(text,"%d%d%d%d %d%d%d%d",PINA.0,PINA.1,PINA.2,PINA.3,PINA.4,PINA.5,PINA.6,PINA.7);
0005f2 940e 0e7f 	CALL SUBOPT_0x2B
                +
0005f4 ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 110 ) )
0005f5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 110 ) )
                 	__POINTW1FN _0x0,110
0005f6 93fa      	ST   -Y,R31
0005f7 93ea      	ST   -Y,R30
0005f8 e0e0      	LDI  R30,0
0005f9 99c8      	SBIC 0x19,0
0005fa e0e1      	LDI  R30,1
0005fb 940e 0e84 	CALL SUBOPT_0x2C
0005fd e0e0      	LDI  R30,0
0005fe 99c9      	SBIC 0x19,1
0005ff e0e1      	LDI  R30,1
000600 940e 0e84 	CALL SUBOPT_0x2C
000602 e0e0      	LDI  R30,0
000603 99ca      	SBIC 0x19,2
000604 e0e1      	LDI  R30,1
000605 940e 0e84 	CALL SUBOPT_0x2C
000607 e0e0      	LDI  R30,0
000608 99cb      	SBIC 0x19,3
000609 e0e1      	LDI  R30,1
00060a 940e 0e84 	CALL SUBOPT_0x2C
00060c e0e0      	LDI  R30,0
00060d 99cc      	SBIC 0x19,4
00060e e0e1      	LDI  R30,1
00060f 940e 0e84 	CALL SUBOPT_0x2C
000611 e0e0      	LDI  R30,0
000612 99cd      	SBIC 0x19,5
000613 e0e1      	LDI  R30,1
000614 940e 0e84 	CALL SUBOPT_0x2C
000616 e0e0      	LDI  R30,0
000617 99ce      	SBIC 0x19,6
000618 e0e1      	LDI  R30,1
000619 940e 0e84 	CALL SUBOPT_0x2C
00061b e0e0      	LDI  R30,0
00061c 99cf      	SBIC 0x19,7
00061d e0e1      	LDI  R30,1
00061e 940e 0e84 	CALL SUBOPT_0x2C
000620 e280      	LDI  R24,32
000621 940e 0b6a 	CALL _sprintf
000623 96a4      	ADIW R28,36
                 ; 0000 0409         lcd_puts(text);
000624 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 040A         lcd_gotoxy(0,1);
000626 940e 0e1d 	CALL SUBOPT_0x17
                 ; 0000 040B         sprintf(text,"Victim=%d ",MASDOUM);
000628 940e 0e7f 	CALL SUBOPT_0x2B
                +
00062a ede6     +LDI R30 , LOW ( 2 * _0x0 + ( 128 ) )
00062b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 128 ) )
                 	__POINTW1FN _0x0,128
00062c 93fa      	ST   -Y,R31
00062d 93ea      	ST   -Y,R30
00062e e0e0      	LDI  R30,0
00062f 999e      	SBIC 0x13,6
000630 e0e1      	LDI  R30,1
000631 940e 0e84 	CALL SUBOPT_0x2C
000633 e084      	LDI  R24,4
000634 940e 0b6a 	CALL _sprintf
000636 9628      	ADIW R28,8
                 ; 0000 040C         lcd_puts(text);
000637 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 040D         delay_ms(100);
000639 e6e4      	LDI  R30,LOW(100)
00063a e0f0      	LDI  R31,HIGH(100)
00063b 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 040E         if(KRP==0)
00063d 999b      	SBIC 0x13,3
00063e c003      	RJMP _0x3CF
                 ; 0000 040F             {
                 ; 0000 0410              while(KRP==0);
                 _0x3D0:
00063f 9b9b      	SBIS 0x13,3
000640 cffe      	RJMP _0x3D0
                 ; 0000 0411              break;
000641 c001      	RJMP _0x3CC
                 ; 0000 0412             }
                 ; 0000 0413        }
                 _0x3CF:
000642 cfad      	RJMP _0x3CA
                 _0x3CC:
                 ; 0000 0414        lcd_clear();
000643 940e 0bf3 	CALL _lcd_clear
                 ; 0000 0415 
                 ; 0000 0416    while (1)
                 _0x3D3:
                 ; 0000 0417        {
                 ; 0000 0418         LCD;
000645 940e 0e13 	CALL SUBOPT_0x15
                 ; 0000 0419         lcd_gotoxy(0,0);
                 ; 0000 041A         lcd_putsf("LU LD RU RD D U");
                +
000647 eee1     +LDI R30 , LOW ( 2 * _0x0 + ( 139 ) )
000648 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 139 ) )
                 	__POINTW1FN _0x0,139
000649 940e 0e19 	CALL SUBOPT_0x16
                 ; 0000 041B         lcd_gotoxy(0,1);
00064b 940e 0e1d 	CALL SUBOPT_0x17
                 ; 0000 041C         sprintf(text,"%d %d %d %d %d %d",KCHB,KCHP,KRB,KRP,KP,KB);
00064d 940e 0e7f 	CALL SUBOPT_0x2B
                +
00064f efe1     +LDI R30 , LOW ( 2 * _0x0 + ( 155 ) )
000650 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 155 ) )
                 	__POINTW1FN _0x0,155
000651 93fa      	ST   -Y,R31
000652 93ea      	ST   -Y,R30
000653 e0e0      	LDI  R30,0
000654 9998      	SBIC 0x13,0
000655 e0e1      	LDI  R30,1
000656 940e 0e84 	CALL SUBOPT_0x2C
000658 e0e0      	LDI  R30,0
000659 9999      	SBIC 0x13,1
00065a e0e1      	LDI  R30,1
00065b 940e 0e84 	CALL SUBOPT_0x2C
00065d e0e0      	LDI  R30,0
00065e 999a      	SBIC 0x13,2
00065f e0e1      	LDI  R30,1
000660 940e 0e84 	CALL SUBOPT_0x2C
000662 e0e0      	LDI  R30,0
000663 999b      	SBIC 0x13,3
000664 e0e1      	LDI  R30,1
000665 940e 0e84 	CALL SUBOPT_0x2C
000667 e0e0      	LDI  R30,0
000668 999d      	SBIC 0x13,5
000669 e0e1      	LDI  R30,1
00066a 940e 0e84 	CALL SUBOPT_0x2C
00066c e0e0      	LDI  R30,0
00066d 999c      	SBIC 0x13,4
00066e e0e1      	LDI  R30,1
00066f 940e 0e84 	CALL SUBOPT_0x2C
000671 e188      	LDI  R24,24
000672 940e 0b6a 	CALL _sprintf
000674 966c      	ADIW R28,28
                 ; 0000 041D         lcd_puts(text);
000675 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 041E         delay_ms(100);
000677 e6e4      	LDI  R30,LOW(100)
000678 e0f0      	LDI  R31,HIGH(100)
000679 940e 0db1 	CALL SUBOPT_0x4
                 ; 0000 041F         if(KRP==0)
00067b 999b      	SBIC 0x13,3
00067c c003      	RJMP _0x3D8
                 ; 0000 0420             {
                 ; 0000 0421              while(KRP==0);
                 _0x3D9:
00067d 9b9b      	SBIS 0x13,3
00067e cffe      	RJMP _0x3D9
                 ; 0000 0422              break;
00067f c001      	RJMP _0x3D5
                 ; 0000 0423             }
                 ; 0000 0424        }
                 _0x3D8:
000680 cfc4      	RJMP _0x3D3
                 _0x3D5:
                 ; 0000 0425        lcd_clear();
000681 940e 0bf3 	CALL _lcd_clear
                 ; 0000 0426 
                 ; 0000 0427    while (1)
                 _0x3DC:
                 ; 0000 0428      {
                 ; 0000 0429       LCD;
000683 98c3      	CBI  0x18,3
                 ; 0000 042A       ultra_sonic();
000684 db0e      	RCALL _ultra_sonic
                 ; 0000 042B       lcd_gotoxy(0,0);
000685 940e 0e29 	CALL SUBOPT_0x1A
                 ; 0000 042C       sprintf(text," %3d %3d %3d ",dis_rp,dis_j,dis_chp);
000687 940e 0e7f 	CALL SUBOPT_0x2B
                +
000689 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 173 ) )
00068a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 173 ) )
                 	__POINTW1FN _0x0,173
00068b 93fa      	ST   -Y,R31
00068c 93ea      	ST   -Y,R30
00068d 91e0 0160 	LDS  R30,_dis_rp
00068f 91f0 0161 	LDS  R31,_dis_rp+1
000691 940e 0e8a 	CALL SUBOPT_0x2D
000693 01f5      	MOVW R30,R10
000694 940e 0e8a 	CALL SUBOPT_0x2D
000696 01f6      	MOVW R30,R12
000697 940e 0e8a 	CALL SUBOPT_0x2D
000699 e08c      	LDI  R24,12
00069a 940e 0b6a 	CALL _sprintf
00069c 9660      	ADIW R28,16
                 ; 0000 042D       lcd_puts(text);
00069d 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 042E      //lcd_gotoxy(0,1);
                 ; 0000 042F      //sprintf(text,"%3d %3d",dis_chb,dis_chp);
                 ; 0000 0430      //lcd_puts(text);
                 ; 0000 0431      //delay_ms(100);
                 ; 0000 0432       if(KRP==0)
00069f 999b      	SBIC 0x13,3
0006a0 c003      	RJMP _0x3E1
                 ; 0000 0433           {
                 ; 0000 0434            while(KRP==0);
                 _0x3E2:
0006a1 9b9b      	SBIS 0x13,3
0006a2 cffe      	RJMP _0x3E2
                 ; 0000 0435            break;
0006a3 c001      	RJMP _0x3DE
                 ; 0000 0436           }
                 ; 0000 0437      }
                 _0x3E1:
0006a4 cfde      	RJMP _0x3DC
                 _0x3DE:
                 ; 0000 0438      lcd_clear();
0006a5 940e 0bf3 	CALL _lcd_clear
                 ; 0000 0439 
                 ; 0000 043A      while(1)   //in tabe marbut be tanzimate adc e ke faghat tanzim mishe too barname estefade nashode azash
                 _0x3E5:
                 ; 0000 043B          {
                 ; 0000 043C           S0=read_adc(0);
0006a7 e0e0      	LDI  R30,LOW(0)
0006a8 93ea      	ST   -Y,R30
0006a9 da3b      	RCALL _read_adc
0006aa e8ae      	LDI  R26,LOW(_S0)
0006ab e0b1      	LDI  R27,HIGH(_S0)
0006ac 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 043D           S0=S0*5/1023;
0006ae 91a0 018e 	LDS  R26,_S0
0006b0 91b0 018f 	LDS  R27,_S0+1
0006b2 9180 0190 	LDS  R24,_S0+2
0006b4 9190 0191 	LDS  R25,_S0+3
0006b6 940e 0e96 	CALL SUBOPT_0x2F
0006b8 93e0 018e 	STS  _S0,R30
0006ba 93f0 018f 	STS  _S0+1,R31
0006bc 9360 0190 	STS  _S0+2,R22
0006be 9370 0191 	STS  _S0+3,R23
                 ; 0000 043E           S1=read_adc(1);
0006c0 e0e1      	LDI  R30,LOW(1)
0006c1 93ea      	ST   -Y,R30
0006c2 da22      	RCALL _read_adc
0006c3 e9a2      	LDI  R26,LOW(_S1)
0006c4 e0b1      	LDI  R27,HIGH(_S1)
0006c5 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 043F           S1=S1*5/1023;
0006c7 91a0 0192 	LDS  R26,_S1
0006c9 91b0 0193 	LDS  R27,_S1+1
0006cb 9180 0194 	LDS  R24,_S1+2
0006cd 9190 0195 	LDS  R25,_S1+3
0006cf 940e 0e96 	CALL SUBOPT_0x2F
0006d1 93e0 0192 	STS  _S1,R30
0006d3 93f0 0193 	STS  _S1+1,R31
0006d5 9360 0194 	STS  _S1+2,R22
0006d7 9370 0195 	STS  _S1+3,R23
                 ; 0000 0440           S2=read_adc(2);
0006d9 e0e2      	LDI  R30,LOW(2)
0006da 93ea      	ST   -Y,R30
0006db da09      	RCALL _read_adc
0006dc e9a6      	LDI  R26,LOW(_S2)
0006dd e0b1      	LDI  R27,HIGH(_S2)
0006de 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 0441           S2=S2*5/1023;
0006e0 91a0 0196 	LDS  R26,_S2
0006e2 91b0 0197 	LDS  R27,_S2+1
0006e4 9180 0198 	LDS  R24,_S2+2
0006e6 9190 0199 	LDS  R25,_S2+3
0006e8 940e 0e96 	CALL SUBOPT_0x2F
0006ea 93e0 0196 	STS  _S2,R30
0006ec 93f0 0197 	STS  _S2+1,R31
0006ee 9360 0198 	STS  _S2+2,R22
0006f0 9370 0199 	STS  _S2+3,R23
                 ; 0000 0442           S3=read_adc(3);
0006f2 e0e3      	LDI  R30,LOW(3)
0006f3 93ea      	ST   -Y,R30
0006f4 d9f0      	RCALL _read_adc
0006f5 e9aa      	LDI  R26,LOW(_S3)
0006f6 e0b1      	LDI  R27,HIGH(_S3)
0006f7 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 0443           S3=S3*5/1023;
0006f9 91a0 019a 	LDS  R26,_S3
0006fb 91b0 019b 	LDS  R27,_S3+1
0006fd 9180 019c 	LDS  R24,_S3+2
0006ff 9190 019d 	LDS  R25,_S3+3
000701 940e 0e96 	CALL SUBOPT_0x2F
000703 93e0 019a 	STS  _S3,R30
000705 93f0 019b 	STS  _S3+1,R31
000707 9360 019c 	STS  _S3+2,R22
000709 9370 019d 	STS  _S3+3,R23
                 ; 0000 0444           S4=read_adc(4);
00070b e0e4      	LDI  R30,LOW(4)
00070c 93ea      	ST   -Y,R30
00070d d9d7      	RCALL _read_adc
00070e e9ae      	LDI  R26,LOW(_S4)
00070f e0b1      	LDI  R27,HIGH(_S4)
000710 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 0445           S4=S4*5/1023;
000712 91a0 019e 	LDS  R26,_S4
000714 91b0 019f 	LDS  R27,_S4+1
000716 9180 01a0 	LDS  R24,_S4+2
000718 9190 01a1 	LDS  R25,_S4+3
00071a 940e 0e96 	CALL SUBOPT_0x2F
00071c 93e0 019e 	STS  _S4,R30
00071e 93f0 019f 	STS  _S4+1,R31
000720 9360 01a0 	STS  _S4+2,R22
000722 9370 01a1 	STS  _S4+3,R23
                 ; 0000 0446           S5=read_adc(5);
000724 e0e5      	LDI  R30,LOW(5)
000725 93ea      	ST   -Y,R30
000726 d9be      	RCALL _read_adc
000727 eaa2      	LDI  R26,LOW(_S5)
000728 e0b1      	LDI  R27,HIGH(_S5)
000729 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 0447           S5=S5*5/1023;
00072b 91a0 01a2 	LDS  R26,_S5
00072d 91b0 01a3 	LDS  R27,_S5+1
00072f 9180 01a4 	LDS  R24,_S5+2
000731 9190 01a5 	LDS  R25,_S5+3
000733 940e 0e96 	CALL SUBOPT_0x2F
000735 93e0 01a2 	STS  _S5,R30
000737 93f0 01a3 	STS  _S5+1,R31
000739 9360 01a4 	STS  _S5+2,R22
00073b 9370 01a5 	STS  _S5+3,R23
                 ; 0000 0448           S6=read_adc(6);
00073d e0e6      	LDI  R30,LOW(6)
00073e 93ea      	ST   -Y,R30
00073f d9a5      	RCALL _read_adc
000740 eaa6      	LDI  R26,LOW(_S6)
000741 e0b1      	LDI  R27,HIGH(_S6)
000742 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 0449           S6=S6*5/1023;
000744 91a0 01a6 	LDS  R26,_S6
000746 91b0 01a7 	LDS  R27,_S6+1
000748 9180 01a8 	LDS  R24,_S6+2
00074a 9190 01a9 	LDS  R25,_S6+3
00074c 940e 0e96 	CALL SUBOPT_0x2F
00074e 93e0 01a6 	STS  _S6,R30
000750 93f0 01a7 	STS  _S6+1,R31
000752 9360 01a8 	STS  _S6+2,R22
000754 9370 01a9 	STS  _S6+3,R23
                 ; 0000 044A           S7=read_adc(7);
000756 e0e7      	LDI  R30,LOW(7)
000757 93ea      	ST   -Y,R30
000758 d98c      	RCALL _read_adc
000759 eaaa      	LDI  R26,LOW(_S7)
00075a e0b1      	LDI  R27,HIGH(_S7)
00075b 940e 0e8f 	CALL SUBOPT_0x2E
                 ; 0000 044B           S7=S7*5/1023;
00075d 91a0 01aa 	LDS  R26,_S7
00075f 91b0 01ab 	LDS  R27,_S7+1
000761 9180 01ac 	LDS  R24,_S7+2
000763 9190 01ad 	LDS  R25,_S7+3
000765 940e 0e96 	CALL SUBOPT_0x2F
000767 93e0 01aa 	STS  _S7,R30
000769 93f0 01ab 	STS  _S7+1,R31
00076b 9360 01ac 	STS  _S7+2,R22
00076d 9370 01ad 	STS  _S7+3,R23
                 ; 0000 044C           LCD;
00076f 940e 0e56 	CALL SUBOPT_0x24
                 ; 0000 044D           sprintf(text,"%1.1f %1.1f %1.1f %1.1f %1.1f %1.1f %1.1f %1.1f",S0,S1,S2,S3,S4,S5,S6,S7);
                +
000771 e1e1     +LDI R30 , LOW ( 2 * _0x0 + ( 187 ) )
000772 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 187 ) )
                 	__POINTW1FN _0x0,187
000773 93fa      	ST   -Y,R31
000774 93ea      	ST   -Y,R30
000775 91e0 018e 	LDS  R30,_S0
000777 91f0 018f 	LDS  R31,_S0+1
000779 9160 0190 	LDS  R22,_S0+2
00077b 9170 0191 	LDS  R23,_S0+3
00077d 940e 11f6 	CALL __PUTPARD1
00077f 91e0 0192 	LDS  R30,_S1
000781 91f0 0193 	LDS  R31,_S1+1
000783 9160 0194 	LDS  R22,_S1+2
000785 9170 0195 	LDS  R23,_S1+3
000787 940e 11f6 	CALL __PUTPARD1
000789 91e0 0196 	LDS  R30,_S2
00078b 91f0 0197 	LDS  R31,_S2+1
00078d 9160 0198 	LDS  R22,_S2+2
00078f 9170 0199 	LDS  R23,_S2+3
000791 940e 11f6 	CALL __PUTPARD1
000793 91e0 019a 	LDS  R30,_S3
000795 91f0 019b 	LDS  R31,_S3+1
000797 9160 019c 	LDS  R22,_S3+2
000799 9170 019d 	LDS  R23,_S3+3
00079b 940e 11f6 	CALL __PUTPARD1
00079d 91e0 019e 	LDS  R30,_S4
00079f 91f0 019f 	LDS  R31,_S4+1
0007a1 9160 01a0 	LDS  R22,_S4+2
0007a3 9170 01a1 	LDS  R23,_S4+3
0007a5 940e 11f6 	CALL __PUTPARD1
0007a7 91e0 01a2 	LDS  R30,_S5
0007a9 91f0 01a3 	LDS  R31,_S5+1
0007ab 9160 01a4 	LDS  R22,_S5+2
0007ad 9170 01a5 	LDS  R23,_S5+3
0007af 940e 11f6 	CALL __PUTPARD1
0007b1 91e0 01a6 	LDS  R30,_S6
0007b3 91f0 01a7 	LDS  R31,_S6+1
0007b5 9160 01a8 	LDS  R22,_S6+2
0007b7 9170 01a9 	LDS  R23,_S6+3
0007b9 940e 11f6 	CALL __PUTPARD1
0007bb 91e0 01aa 	LDS  R30,_S7
0007bd 91f0 01ab 	LDS  R31,_S7+1
0007bf 9160 01ac 	LDS  R22,_S7+2
0007c1 9170 01ad 	LDS  R23,_S7+3
0007c3 940e 11f6 	CALL __PUTPARD1
0007c5 e280      	LDI  R24,32
0007c6 940e 0b6a 	CALL _sprintf
0007c8 96a4      	ADIW R28,36
                 ; 0000 044E           lcd_gotoxy(0,0);
0007c9 940e 0e29 	CALL SUBOPT_0x1A
                 ; 0000 044F           lcd_puts(text);
0007cb 940e 0e6a 	CALL SUBOPT_0x27
                 ; 0000 0450           if(KRP==0)
0007cd 999b      	SBIC 0x13,3
0007ce c003      	RJMP _0x3EA
                 ; 0000 0451               {
                 ; 0000 0452                while(KRP==0);
                 _0x3EB:
0007cf 9b9b      	SBIS 0x13,3
0007d0 cffe      	RJMP _0x3EB
                 ; 0000 0453                break;
0007d1 c001      	RJMP _0x3E7
                 ; 0000 0454               }
                 ; 0000 0455          }
                 _0x3EA:
0007d2 ced4      	RJMP _0x3E5
                 _0x3E7:
                 ; 0000 0456      lcd_clear();
0007d3 940e 0bf3 	CALL _lcd_clear
                 ; 0000 0457   }
0007d5 9508      	RET
                 ;
                 ;int cntr=0;
                 ;
                 ;void main(void)
                 ; 0000 045C {
                 _main:
                 ; 0000 045D // Declare your local variables here
                 ; 0000 045E PORTA=0x00;
0007d6 e0e0      	LDI  R30,LOW(0)
0007d7 bbeb      	OUT  0x1B,R30
                 ; 0000 045F DDRA=0x00;
0007d8 bbea      	OUT  0x1A,R30
                 ; 0000 0460 
                 ; 0000 0461 PORTB=0xFF;
0007d9 efef      	LDI  R30,LOW(255)
0007da bbe8      	OUT  0x18,R30
                 ; 0000 0462 DDRB=0xFF;
0007db bbe7      	OUT  0x17,R30
                 ; 0000 0463 
                 ; 0000 0464 PORTC=0xFF;
0007dc bbe5      	OUT  0x15,R30
                 ; 0000 0465 DDRC=0x00;
0007dd e0e0      	LDI  R30,LOW(0)
0007de bbe4      	OUT  0x14,R30
                 ; 0000 0466 
                 ; 0000 0467 PORTD=0x00;
0007df bbe2      	OUT  0x12,R30
                 ; 0000 0468 DDRD=0x00;
0007e0 bbe1      	OUT  0x11,R30
                 ; 0000 0469 
                 ; 0000 046A TCCR1A=0x00;
0007e1 bdef      	OUT  0x2F,R30
                 ; 0000 046B TCCR1B=0x02;
0007e2 e0e2      	LDI  R30,LOW(2)
0007e3 bdee      	OUT  0x2E,R30
                 ; 0000 046C TCNT1H=0x00;
0007e4 e0e0      	LDI  R30,LOW(0)
0007e5 bded      	OUT  0x2D,R30
                 ; 0000 046D TCNT1L=0x00;
0007e6 bdec      	OUT  0x2C,R30
                 ; 0000 046E ICR1H=0x00;
0007e7 bde7      	OUT  0x27,R30
                 ; 0000 046F ICR1L=0x00;
0007e8 bde6      	OUT  0x26,R30
                 ; 0000 0470 OCR1AH=0x00;
0007e9 bdeb      	OUT  0x2B,R30
                 ; 0000 0471 OCR1AL=0x00;
0007ea bdea      	OUT  0x2A,R30
                 ; 0000 0472 OCR1BH=0x00;
0007eb bde9      	OUT  0x29,R30
                 ; 0000 0473 OCR1BL=0x00;
0007ec bde8      	OUT  0x28,R30
                 ; 0000 0474 
                 ; 0000 0475 TIMSK=0x00;
0007ed bfe9      	OUT  0x39,R30
                 ; 0000 0476 ACSR=0x80;
0007ee e8e0      	LDI  R30,LOW(128)
0007ef b9e8      	OUT  0x8,R30
                 ; 0000 0477 SFIOR=0x00;
0007f0 e0e0      	LDI  R30,LOW(0)
0007f1 bfe0      	OUT  0x30,R30
                 ; 0000 0478 ADMUX=ADC_VREF_TYPE & 0xff;
0007f2 b9e7      	OUT  0x7,R30
                 ; 0000 0479 ADCSRA=0x83;
0007f3 e8e3      	LDI  R30,LOW(131)
0007f4 b9e6      	OUT  0x6,R30
                 ; 0000 047A 
                 ; 0000 047B LCD;
0007f5 98c3      	CBI  0x18,3
                 ; 0000 047C lcd_init(16);
0007f6 e1e0      	LDI  R30,LOW(16)
0007f7 93ea      	ST   -Y,R30
0007f8 940e 0c60 	CALL _lcd_init
                 ; 0000 047D PORTB=0xFF;
0007fa efef      	LDI  R30,LOW(255)
0007fb bbe8      	OUT  0x18,R30
                 ; 0000 047E MOTOR;
0007fc 9ac3      	SBI  0x18,3
                 ; 0000 047F 
                 ; 0000 0480 if(chap90==-1)
0007fd 940e 0e75 	CALL SUBOPT_0x29
0007ff 3fef      	CPI  R30,LOW(0xFFFF)
000800 efaf      	LDI  R26,HIGH(0xFFFF)
000801 07fa      	CPC  R31,R26
000802 f431      	BRNE _0x3F2
                 ; 0000 0481    chap90=580;
000803 e0a2      	LDI  R26,LOW(_chap90)
000804 e0b0      	LDI  R27,HIGH(_chap90)
000805 e4e4      	LDI  R30,LOW(580)
000806 e0f2      	LDI  R31,HIGH(580)
000807 940e 1218 	CALL __EEPROMWRW
                 ; 0000 0482 
                 ; 0000 0483 if (rast90==-1)
                 _0x3F2:
000809 940e 0e5c 	CALL SUBOPT_0x25
00080b 3fef      	CPI  R30,LOW(0xFFFF)
00080c efaf      	LDI  R26,HIGH(0xFFFF)
00080d 07fa      	CPC  R31,R26
00080e f431      	BRNE _0x3F3
                 ; 0000 0484     rast90=570;
00080f e0a0      	LDI  R26,LOW(_rast90)
000810 e0b0      	LDI  R27,HIGH(_rast90)
000811 e3ea      	LDI  R30,LOW(570)
000812 e0f2      	LDI  R31,HIGH(570)
000813 940e 1218 	CALL __EEPROMWRW
                 ; 0000 0485 
                 ; 0000 0486 if (KCHB==0)
                 _0x3F3:
000815 9998      	SBIC 0x13,0
000816 c003      	RJMP _0x3F4
                 ; 0000 0487     {
                 ; 0000 0488      while(KCHB==0);
                 _0x3F5:
000817 9b98      	SBIS 0x13,0
000818 cffe      	RJMP _0x3F5
                 ; 0000 0489      tanzimat();
000819 ddd6      	RCALL _tanzimat
                 ; 0000 048A     }
                 ; 0000 048B 
                 ; 0000 048C if (KRP==0)
                 _0x3F4:
00081a 999b      	SBIC 0x13,3
00081b c003      	RJMP _0x3F8
                 ; 0000 048D     {
                 ; 0000 048E      while(KRP==0);
                 _0x3F9:
00081c 9b9b      	SBIS 0x13,3
00081d cffe      	RJMP _0x3F9
                 ; 0000 048F      right90();
00081e dd38      	RCALL _right90
                 ; 0000 0490     }
                 ; 0000 0491 
                 ; 0000 0492 if (KRB==0)
                 _0x3F8:
00081f 999a      	SBIC 0x13,2
000820 c003      	RJMP _0x3FC
                 ; 0000 0493     {
                 ; 0000 0494      while(KRB==0);
                 _0x3FD:
000821 9b9a      	SBIS 0x13,2
000822 cffe      	RJMP _0x3FD
                 ; 0000 0495      bazoo();
000823 d8ce      	RCALL _bazoo
                 ; 0000 0496     }
                 ; 0000 0497 
                 ; 0000 0498 if (KCHP==0)
                 _0x3FC:
000824 9999      	SBIC 0x13,1
000825 c003      	RJMP _0x400
                 ; 0000 0499     {
                 ; 0000 049A      while(KCHP==0);
                 _0x401:
000826 9b99      	SBIS 0x13,1
000827 cffe      	RJMP _0x401
                 ; 0000 049B      chap_90();
000828 dd7b      	RCALL _chap_90
                 ; 0000 049C     }
                 ; 0000 049D 
                 ; 0000 049E //MOTOR;
                 ; 0000 049F //r_90(10000);
                 ; 0000 04A0 //bazoo();
                 ; 0000 04A1 //red_room();
                 ; 0000 04A2 
                 ; 0000 04A3 while (1)
                 _0x400:
                 _0x404:
                 ; 0000 04A4       {
                 ; 0000 04A5        for(cntr=0;cntr<8000;cntr++)
000829 e0e0      	LDI  R30,LOW(0)
00082a 93e0 01ae 	STS  _cntr,R30
00082c 93e0 01af 	STS  _cntr+1,R30
                 _0x408:
00082e 91a0 01ae 	LDS  R26,_cntr
000830 91b0 01af 	LDS  R27,_cntr+1
000832 34a0      	CPI  R26,LOW(0x1F40)
000833 e1ef      	LDI  R30,HIGH(0x1F40)
000834 07be      	CPC  R27,R30
000835 f434      	BRGE _0x409
                 ; 0000 04A6             {
                 ; 0000 04A7             path_finder();
000836 dc10      	RCALL _path_finder
                 ; 0000 04A8             }
000837 eaae      	LDI  R26,LOW(_cntr)
000838 e0b1      	LDI  R27,HIGH(_cntr)
000839 940e 0ea5 	CALL SUBOPT_0x30
00083b cff2      	RJMP _0x408
                 _0x409:
                 ; 0000 04A9        block();
00083c d987      	RCALL _block
                 ; 0000 04AA 
                 ; 0000 04AB 
                 ; 0000 04AC 
                 ; 0000 04AD       };
00083d cfeb      	RJMP _0x404
                 ; 0000 04AE }
                 _0x40A:
00083e cfff      	RJMP _0x40A
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
00083f 931a      	ST   -Y,R17
000840 930a      	ST   -Y,R16
000841 81aa      	LDD  R26,Y+2
000842 81bb      	LDD  R27,Y+2+1
000843 9612      	ADIW R26,2
000844 940e 11dd 	CALL __GETW1P
000846 9730      	SBIW R30,0
000847 f129      	BREQ _0x2000010
000848 81aa      	LDD  R26,Y+2
000849 81bb      	LDD  R27,Y+2+1
00084a 9614      	ADIW R26,4
00084b 940e 11dd 	CALL __GETW1P
00084d 018f      	MOVW R16,R30
00084e 9730      	SBIW R30,0
00084f f061      	BREQ _0x2000012
                +
000850 3002     +CPI R16 , LOW ( 2 )
000851 e0e0     +LDI R30 , HIGH ( 2 )
000852 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000853 f0c0      	BRLO _0x2000013
000854 01f8      	MOVW R30,R16
000855 9731      	SBIW R30,1
000856 018f      	MOVW R16,R30
                +
000857 81aa     +LDD R26 , Y + 2
000858 81bb     +LDD R27 , Y + 2 + 1
000859 9614     +ADIW R26 , 4
00085a 93ed     +ST X + , R30
00085b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00085c 81aa      	LDD  R26,Y+2
00085d 81bb      	LDD  R27,Y+2+1
00085e 9612      	ADIW R26,2
00085f 940e 0ea5 	CALL SUBOPT_0x30
000861 9731      	SBIW R30,1
000862 81ac      	LDD  R26,Y+4
000863 83a0      	STD  Z+0,R26
000864 81aa      	LDD  R26,Y+2
000865 81bb      	LDD  R27,Y+2+1
000866 940e 11dd 	CALL __GETW1P
000868 23ff      	TST  R31
000869 f012      	BRMI _0x2000014
00086a 940e 0ea5 	CALL SUBOPT_0x30
                 _0x2000014:
                 _0x2000013:
00086c c006      	RJMP _0x2000015
                 _0x2000010:
00086d 81aa      	LDD  R26,Y+2
00086e 81bb      	LDD  R27,Y+2+1
00086f efef      	LDI  R30,LOW(65535)
000870 efff      	LDI  R31,HIGH(65535)
000871 93ed      	ST   X+,R30
000872 93fc      	ST   X,R31
                 _0x2000015:
000873 8119      	LDD  R17,Y+1
000874 8108      	LDD  R16,Y+0
000875 9625      	ADIW R28,5
000876 9508      	RET
                 __ftoe_G100:
000877 9724      	SBIW R28,4
000878 e0e0      	LDI  R30,LOW(0)
000879 83e8      	ST   Y,R30
00087a 83e9      	STD  Y+1,R30
00087b e8e0      	LDI  R30,LOW(128)
00087c 83ea      	STD  Y+2,R30
00087d e3ef      	LDI  R30,LOW(63)
00087e 83eb      	STD  Y+3,R30
00087f 940e 1237 	CALL __SAVELOCR4
000881 85ee      	LDD  R30,Y+14
000882 85ff      	LDD  R31,Y+14+1
000883 3fef      	CPI  R30,LOW(0xFFFF)
000884 efaf      	LDI  R26,HIGH(0xFFFF)
000885 07fa      	CPC  R31,R26
000886 f449      	BRNE _0x2000019
000887 85e8      	LDD  R30,Y+8
000888 85f9      	LDD  R31,Y+8+1
000889 93fa      	ST   -Y,R31
00088a 93ea      	ST   -Y,R30
                +
00088b e4e2     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00088c e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00088d 940e 0eab 	CALL SUBOPT_0x31
00088f c0b8      	RJMP _0x20C0007
                 _0x2000019:
000890 3fef      	CPI  R30,LOW(0x7FFF)
000891 e7af      	LDI  R26,HIGH(0x7FFF)
000892 07fa      	CPC  R31,R26
000893 f449      	BRNE _0x2000018
000894 85e8      	LDD  R30,Y+8
000895 85f9      	LDD  R31,Y+8+1
000896 93fa      	ST   -Y,R31
000897 93ea      	ST   -Y,R30
                +
000898 e4e3     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000899 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00089a 940e 0eab 	CALL SUBOPT_0x31
00089c c0ab      	RJMP _0x20C0007
                 _0x2000018:
00089d 85ab      	LDD  R26,Y+11
00089e 30a7      	CPI  R26,LOW(0x7)
00089f f010      	BRLO _0x200001B
0008a0 e0e6      	LDI  R30,LOW(6)
0008a1 87eb      	STD  Y+11,R30
                 _0x200001B:
0008a2 851b      	LDD  R17,Y+11
                 _0x200001C:
0008a3 2fe1      	MOV  R30,R17
0008a4 5011      	SUBI R17,1
0008a5 30e0      	CPI  R30,0
0008a6 f019      	BREQ _0x200001E
0008a7 940e 0eaf 	CALL SUBOPT_0x32
0008a9 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0008aa 85ec     +LDD R30 , Y + 12
0008ab 85fd     +LDD R31 , Y + 12 + 1
0008ac 856e     +LDD R22 , Y + 12 + 2
0008ad 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0008ae 940e 1231 	CALL __CPD10
0008b0 f421      	BRNE _0x200001F
0008b1 e030      	LDI  R19,LOW(0)
0008b2 940e 0eaf 	CALL SUBOPT_0x32
0008b4 c02e      	RJMP _0x2000020
                 _0x200001F:
0008b5 853b      	LDD  R19,Y+11
0008b6 940e 0ebe 	CALL SUBOPT_0x33
0008b8 f009      	BREQ PC+2
0008b9 f410      	BRCC PC+3
0008ba 940c 08c7 	JMP  _0x2000021
0008bc 940e 0eaf 	CALL SUBOPT_0x32
                 _0x2000022:
0008be 940e 0ebe 	CALL SUBOPT_0x33
0008c0 f028      	BRLO _0x2000024
0008c1 940e 0ec9 	CALL SUBOPT_0x34
0008c3 940e 0ece 	CALL SUBOPT_0x35
0008c5 cff8      	RJMP _0x2000022
                 _0x2000024:
0008c6 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0008c7 940e 0ebe 	CALL SUBOPT_0x33
0008c9 f440      	BRSH _0x2000028
0008ca 940e 0ec9 	CALL SUBOPT_0x34
0008cc 940e 0eda 	CALL SUBOPT_0x36
0008ce 940e 0ee1 	CALL SUBOPT_0x37
0008d0 5031      	SUBI R19,LOW(1)
0008d1 cff5      	RJMP _0x2000026
                 _0x2000028:
0008d2 940e 0eaf 	CALL SUBOPT_0x32
                 _0x2000025:
                +
0008d4 85ec     +LDD R30 , Y + 12
0008d5 85fd     +LDD R31 , Y + 12 + 1
0008d6 856e     +LDD R22 , Y + 12 + 2
0008d7 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0008d8 940e 0ee6 	CALL SUBOPT_0x38
0008da 940e 0ee1 	CALL SUBOPT_0x37
0008dc 940e 0ebe 	CALL SUBOPT_0x33
0008de f020      	BRLO _0x2000029
0008df 940e 0ec9 	CALL SUBOPT_0x34
0008e1 940e 0ece 	CALL SUBOPT_0x35
                 _0x2000029:
                 _0x2000020:
0008e3 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0008e4 85eb      	LDD  R30,Y+11
0008e5 17e1      	CP   R30,R17
0008e6 f1a8      	BRLO _0x200002C
                +
0008e7 81ac     +LDD R26 , Y + 4
0008e8 81bd     +LDD R27 , Y + 4 + 1
0008e9 818e     +LDD R24 , Y + 4 + 2
0008ea 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0008eb 940e 0eed 	CALL SUBOPT_0x39
0008ed 940e 0ee6 	CALL SUBOPT_0x38
0008ef 940e 11f6 	CALL __PUTPARD1
0008f1 940e 0ce4 	CALL _floor
                +
0008f3 83ec     +STD Y + 4 , R30
0008f4 83fd     +STD Y + 4 + 1 , R31
0008f5 836e     +STD Y + 4 + 2 , R22
0008f6 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0008f7 940e 0ec9 	CALL SUBOPT_0x34
0008f9 940e 10fa 	CALL __DIVF21
0008fb 940e 0fe9 	CALL __CFD1U
0008fd 2f0e      	MOV  R16,R30
0008fe 940e 0ef4 	CALL SUBOPT_0x3A
000900 940e 0efb 	CALL SUBOPT_0x3B
000902 27ff      	CLR  R31
000903 2766      	CLR  R22
000904 2777      	CLR  R23
000905 940e 1022 	CALL __CDF1
                +
000907 81ac     +LDD R26 , Y + 4
000908 81bd     +LDD R27 , Y + 4 + 1
000909 818e     +LDD R24 , Y + 4 + 2
00090a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00090b 940e 10ac 	CALL __MULF12
00090d 940e 0ec9 	CALL SUBOPT_0x34
00090f 940e 0f00 	CALL SUBOPT_0x3C
000911 940e 0ee1 	CALL SUBOPT_0x37
000913 2fe1      	MOV  R30,R17
000914 5f1f      	SUBI R17,-1
000915 30e0      	CPI  R30,0
000916 f669      	BRNE _0x200002A
000917 940e 0ef4 	CALL SUBOPT_0x3A
000919 e2ee      	LDI  R30,LOW(46)
00091a 93ec      	ST   X,R30
00091b cfc8      	RJMP _0x200002A
                 _0x200002C:
00091c 940e 0f05 	CALL SUBOPT_0x3D
00091e 9731      	SBIW R30,1
00091f 85aa      	LDD  R26,Y+10
000920 83a0      	STD  Z+0,R26
000921 3030      	CPI  R19,0
000922 f42c      	BRGE _0x200002E
000923 9531      	NEG  R19
000924 85a8      	LDD  R26,Y+8
000925 85b9      	LDD  R27,Y+8+1
000926 e2ed      	LDI  R30,LOW(45)
000927 c003      	RJMP _0x200010E
                 _0x200002E:
000928 85a8      	LDD  R26,Y+8
000929 85b9      	LDD  R27,Y+8+1
00092a e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
00092b 93ec      	ST   X,R30
00092c 940e 0f05 	CALL SUBOPT_0x3D
00092e 940e 0f05 	CALL SUBOPT_0x3D
000930 9731      	SBIW R30,1
000931 01bf      	MOVW R22,R30
000932 2fa3      	MOV  R26,R19
000933 e0ea      	LDI  R30,LOW(10)
000934 940e 1184 	CALL __DIVB21
000936 5de0      	SUBI R30,-LOW(48)
000937 01db      	MOVW R26,R22
000938 93ec      	ST   X,R30
000939 940e 0f05 	CALL SUBOPT_0x3D
00093b 9731      	SBIW R30,1
00093c 01bf      	MOVW R22,R30
00093d 2fa3      	MOV  R26,R19
00093e e0ea      	LDI  R30,LOW(10)
00093f 940e 11c1 	CALL __MODB21
000941 5de0      	SUBI R30,-LOW(48)
000942 01db      	MOVW R26,R22
000943 93ec      	ST   X,R30
000944 85a8      	LDD  R26,Y+8
000945 85b9      	LDD  R27,Y+8+1
000946 e0e0      	LDI  R30,LOW(0)
000947 93ec      	ST   X,R30
                 _0x20C0007:
000948 940e 123e 	CALL __LOADLOCR4
00094a 9660      	ADIW R28,16
00094b 9508      	RET
                 __print_G100:
00094c 97ef      	SBIW R28,63
00094d 9761      	SBIW R28,17
00094e 940e 1235 	CALL __SAVELOCR6
000950 e010      	LDI  R17,0
                +
000951 01fe     +MOVW R30 , R28
000952 5ae8     +SUBI R30 , LOW ( - 88 )
000953 4fff     +SBCI R31 , HIGH ( - 88 )
000954 9001     +LD R0 , Z +
000955 81f0     +LD R31 , Z
000956 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000957 87e8      	STD  Y+8,R30
000958 87f9      	STD  Y+8+1,R31
                +
000959 01fe     +MOVW R30 , R28
00095a 5aea     +SUBI R30 , LOW ( - 86 )
00095b 4fff     +SBCI R31 , HIGH ( - 86 )
00095c 9001     +LD R0 , Z +
00095d 81f0     +LD R31 , Z
00095e 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00095f 83ee      	STD  Y+6,R30
000960 83ff      	STD  Y+6+1,R31
000961 81ae      	LDD  R26,Y+6
000962 81bf      	LDD  R27,Y+6+1
000963 e0e0      	LDI  R30,LOW(0)
000964 e0f0      	LDI  R31,HIGH(0)
000965 93ed      	ST   X+,R30
000966 93fc      	ST   X,R31
                 _0x2000030:
000967 01de      	MOVW R26,R28
000968 5aa4      	SUBI R26,LOW(-(92))
000969 4fbf      	SBCI R27,HIGH(-(92))
00096a 940e 0ea5 	CALL SUBOPT_0x30
00096c 9731      	SBIW R30,1
00096d 91e4      	LPM  R30,Z
00096e 2f2e      	MOV  R18,R30
00096f 30e0      	CPI  R30,0
000970 f411      	BRNE PC+3
000971 940c 0b61 	JMP _0x2000032
000973 2fe1      	MOV  R30,R17
000974 30e0      	CPI  R30,0
000975 f439      	BRNE _0x2000036
000976 3225      	CPI  R18,37
000977 f411      	BRNE _0x2000037
000978 e011      	LDI  R17,LOW(1)
000979 c002      	RJMP _0x2000038
                 _0x2000037:
00097a 940e 0f0b 	CALL SUBOPT_0x3E
                 _0x2000038:
00097c c1e3      	RJMP _0x2000035
                 _0x2000036:
00097d 30e1      	CPI  R30,LOW(0x1)
00097e f4c1      	BRNE _0x2000039
00097f 3225      	CPI  R18,37
000980 f419      	BRNE _0x200003A
000981 940e 0f0b 	CALL SUBOPT_0x3E
000983 c1db      	RJMP _0x200010F
                 _0x200003A:
000984 e012      	LDI  R17,LOW(2)
000985 e0e0      	LDI  R30,LOW(0)
000986 8bed      	STD  Y+21,R30
000987 e000      	LDI  R16,LOW(0)
000988 322d      	CPI  R18,45
000989 f411      	BRNE _0x200003B
00098a e001      	LDI  R16,LOW(1)
00098b c1d4      	RJMP _0x2000035
                 _0x200003B:
00098c 322b      	CPI  R18,43
00098d f419      	BRNE _0x200003C
00098e e2eb      	LDI  R30,LOW(43)
00098f 8bed      	STD  Y+21,R30
000990 c1cf      	RJMP _0x2000035
                 _0x200003C:
000991 3220      	CPI  R18,32
000992 f419      	BRNE _0x200003D
000993 e2e0      	LDI  R30,LOW(32)
000994 8bed      	STD  Y+21,R30
000995 c1ca      	RJMP _0x2000035
                 _0x200003D:
000996 c002      	RJMP _0x200003E
                 _0x2000039:
000997 30e2      	CPI  R30,LOW(0x2)
000998 f439      	BRNE _0x200003F
                 _0x200003E:
000999 e050      	LDI  R21,LOW(0)
00099a e013      	LDI  R17,LOW(3)
00099b 3320      	CPI  R18,48
00099c f411      	BRNE _0x2000040
00099d 6800      	ORI  R16,LOW(128)
00099e c1c1      	RJMP _0x2000035
                 _0x2000040:
00099f c002      	RJMP _0x2000041
                 _0x200003F:
0009a0 30e3      	CPI  R30,LOW(0x3)
0009a1 f491      	BRNE _0x2000042
                 _0x2000041:
0009a2 3320      	CPI  R18,48
0009a3 f010      	BRLO _0x2000044
0009a4 332a      	CPI  R18,58
0009a5 f008      	BRLO _0x2000045
                 _0x2000044:
0009a6 c007      	RJMP _0x2000043
                 _0x2000045:
0009a7 e0aa      	LDI  R26,LOW(10)
0009a8 9f5a      	MUL  R21,R26
0009a9 2d50      	MOV  R21,R0
0009aa 2fe2      	MOV  R30,R18
0009ab 53e0      	SUBI R30,LOW(48)
0009ac 0f5e      	ADD  R21,R30
0009ad c1b2      	RJMP _0x2000035
                 _0x2000043:
0009ae e040      	LDI  R20,LOW(0)
0009af 322e      	CPI  R18,46
0009b0 f411      	BRNE _0x2000046
0009b1 e014      	LDI  R17,LOW(4)
0009b2 c1ad      	RJMP _0x2000035
                 _0x2000046:
0009b3 c00f      	RJMP _0x2000047
                 _0x2000042:
0009b4 30e4      	CPI  R30,LOW(0x4)
0009b5 f499      	BRNE _0x2000049
0009b6 3320      	CPI  R18,48
0009b7 f010      	BRLO _0x200004B
0009b8 332a      	CPI  R18,58
0009b9 f008      	BRLO _0x200004C
                 _0x200004B:
0009ba c008      	RJMP _0x200004A
                 _0x200004C:
0009bb 6200      	ORI  R16,LOW(32)
0009bc e0aa      	LDI  R26,LOW(10)
0009bd 9f4a      	MUL  R20,R26
0009be 2d40      	MOV  R20,R0
0009bf 2fe2      	MOV  R30,R18
0009c0 53e0      	SUBI R30,LOW(48)
0009c1 0f4e      	ADD  R20,R30
0009c2 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0009c3 362c      	CPI  R18,108
0009c4 f419      	BRNE _0x200004D
0009c5 6002      	ORI  R16,LOW(2)
0009c6 e015      	LDI  R17,LOW(5)
0009c7 c198      	RJMP _0x2000035
                 _0x200004D:
0009c8 c004      	RJMP _0x200004E
                 _0x2000049:
0009c9 30e5      	CPI  R30,LOW(0x5)
0009ca f011      	BREQ PC+3
0009cb 940c 0b60 	JMP _0x2000035
                 _0x200004E:
0009cd 2fe2      	MOV  R30,R18
0009ce 36e3      	CPI  R30,LOW(0x63)
0009cf f459      	BRNE _0x2000053
0009d0 940e 0f14 	CALL SUBOPT_0x3F
0009d2 940e 0f1b 	CALL SUBOPT_0x40
0009d4 940e 0f14 	CALL SUBOPT_0x3F
0009d6 81a4      	LDD  R26,Z+4
0009d7 93aa      	ST   -Y,R26
0009d8 940e 0f22 	CALL SUBOPT_0x41
0009da c184      	RJMP _0x2000054
                 _0x2000053:
0009db 34e5      	CPI  R30,LOW(0x45)
0009dc f011      	BREQ _0x2000057
0009dd 36e5      	CPI  R30,LOW(0x65)
0009de f409      	BRNE _0x2000058
                 _0x2000057:
0009df c004      	RJMP _0x2000059
                 _0x2000058:
0009e0 36e6      	CPI  R30,LOW(0x66)
0009e1 f011      	BREQ PC+3
0009e2 940c 0a2e 	JMP _0x200005A
                 _0x2000059:
0009e4 01fe      	MOVW R30,R28
0009e5 9676      	ADIW R30,22
0009e6 87ee      	STD  Y+14,R30
0009e7 87ff      	STD  Y+14+1,R31
0009e8 940e 0f2a 	CALL SUBOPT_0x42
0009ea 940e 11e1 	CALL __GETD1P
0009ec 940e 0f31 	CALL SUBOPT_0x43
0009ee 940e 0f36 	CALL SUBOPT_0x44
0009f0 85ad      	LDD  R26,Y+13
0009f1 23aa      	TST  R26
0009f2 f022      	BRMI _0x200005B
0009f3 89ad      	LDD  R26,Y+21
0009f4 32ab      	CPI  R26,LOW(0x2B)
0009f5 f049      	BREQ _0x200005D
0009f6 c017      	RJMP _0x200005E
                 _0x200005B:
0009f7 940e 0f38 	CALL SUBOPT_0x45
0009f9 940e 0fb6 	CALL __ANEGF1
0009fb 940e 0f31 	CALL SUBOPT_0x43
0009fd e2ed      	LDI  R30,LOW(45)
0009fe 8bed      	STD  Y+21,R30
                 _0x200005D:
0009ff ff07      	SBRS R16,7
000a00 c005      	RJMP _0x200005F
000a01 89ed      	LDD  R30,Y+21
000a02 93ea      	ST   -Y,R30
000a03 940e 0f22 	CALL SUBOPT_0x41
000a05 c008      	RJMP _0x2000060
                 _0x200005F:
000a06 85ee      	LDD  R30,Y+14
000a07 85ff      	LDD  R31,Y+14+1
000a08 9631      	ADIW R30,1
000a09 87ee      	STD  Y+14,R30
000a0a 87ff      	STD  Y+14+1,R31
000a0b 9731      	SBIW R30,1
000a0c 89ad      	LDD  R26,Y+21
000a0d 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000a0e ff05      	SBRS R16,5
000a0f e046      	LDI  R20,LOW(6)
000a10 3626      	CPI  R18,102
000a11 f461      	BRNE _0x2000062
000a12 940e 0f38 	CALL SUBOPT_0x45
000a14 940e 11f6 	CALL __PUTPARD1
000a16 934a      	ST   -Y,R20
000a17 89eb      	LDD  R30,Y+19
000a18 89fc      	LDD  R31,Y+19+1
000a19 93fa      	ST   -Y,R31
000a1a 93ea      	ST   -Y,R30
000a1b 940e 0cfb 	CALL _ftoa
000a1d c00b      	RJMP _0x2000063
                 _0x2000062:
000a1e 940e 0f38 	CALL SUBOPT_0x45
000a20 940e 11f6 	CALL __PUTPARD1
000a22 934a      	ST   -Y,R20
000a23 932a      	ST   -Y,R18
000a24 89ec      	LDD  R30,Y+20
000a25 89fd      	LDD  R31,Y+20+1
000a26 93fa      	ST   -Y,R31
000a27 93ea      	ST   -Y,R30
000a28 de4e      	RCALL __ftoe_G100
                 _0x2000063:
000a29 01fe      	MOVW R30,R28
000a2a 9676      	ADIW R30,22
000a2b 940e 0f3d 	CALL SUBOPT_0x46
000a2d c01e      	RJMP _0x2000064
                 _0x200005A:
000a2e 37e3      	CPI  R30,LOW(0x73)
000a2f f439      	BRNE _0x2000066
000a30 940e 0f36 	CALL SUBOPT_0x44
000a32 940e 0f45 	CALL SUBOPT_0x47
000a34 940e 0f3d 	CALL SUBOPT_0x46
000a36 c00e      	RJMP _0x2000067
                 _0x2000066:
000a37 37e0      	CPI  R30,LOW(0x70)
000a38 f4c1      	BRNE _0x2000069
000a39 940e 0f36 	CALL SUBOPT_0x44
000a3b 940e 0f45 	CALL SUBOPT_0x47
000a3d 87ee      	STD  Y+14,R30
000a3e 87ff      	STD  Y+14+1,R31
000a3f 93fa      	ST   -Y,R31
000a40 93ea      	ST   -Y,R30
000a41 940e 0caa 	CALL _strlenf
000a43 2f1e      	MOV  R17,R30
000a44 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000a45 770f      	ANDI R16,LOW(127)
000a46 3040      	CPI  R20,0
000a47 f011      	BREQ _0x200006B
000a48 1741      	CP   R20,R17
000a49 f008      	BRLO _0x200006C
                 _0x200006B:
000a4a c001      	RJMP _0x200006A
                 _0x200006C:
000a4b 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000a4c e040      	LDI  R20,LOW(0)
000a4d e0e0      	LDI  R30,LOW(0)
000a4e 8bec      	STD  Y+20,R30
000a4f e030      	LDI  R19,LOW(0)
000a50 c06e      	RJMP _0x200006D
                 _0x2000069:
000a51 36e4      	CPI  R30,LOW(0x64)
000a52 f011      	BREQ _0x2000070
000a53 36e9      	CPI  R30,LOW(0x69)
000a54 f411      	BRNE _0x2000071
                 _0x2000070:
000a55 6004      	ORI  R16,LOW(4)
000a56 c002      	RJMP _0x2000072
                 _0x2000071:
000a57 37e5      	CPI  R30,LOW(0x75)
000a58 f4a1      	BRNE _0x2000073
                 _0x2000072:
000a59 e0ea      	LDI  R30,LOW(10)
000a5a 8bec      	STD  Y+20,R30
000a5b ff01      	SBRS R16,1
000a5c c008      	RJMP _0x2000074
                +
000a5d e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000a5e ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000a5f e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000a60 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000a61 940e 0f4a 	CALL SUBOPT_0x48
000a63 e01a      	LDI  R17,LOW(10)
000a64 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000a65 e1e0     +LDI R30 , LOW ( 0x2710 )
000a66 e2f7     +LDI R31 , HIGH ( 0x2710 )
000a67 e060     +LDI R22 , BYTE3 ( 0x2710 )
000a68 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000a69 940e 0f4a 	CALL SUBOPT_0x48
000a6b e015      	LDI  R17,LOW(5)
000a6c c01b      	RJMP _0x2000075
                 _0x2000073:
000a6d 35e8      	CPI  R30,LOW(0x58)
000a6e f411      	BRNE _0x2000077
000a6f 6008      	ORI  R16,LOW(8)
000a70 c004      	RJMP _0x2000078
                 _0x2000077:
000a71 37e8      	CPI  R30,LOW(0x78)
000a72 f011      	BREQ PC+3
000a73 940c 0b5f 	JMP _0x20000B6
                 _0x2000078:
000a75 e1e0      	LDI  R30,LOW(16)
000a76 8bec      	STD  Y+20,R30
000a77 ff01      	SBRS R16,1
000a78 c008      	RJMP _0x200007A
                +
000a79 e0e0     +LDI R30 , LOW ( 0x10000000 )
000a7a e0f0     +LDI R31 , HIGH ( 0x10000000 )
000a7b e060     +LDI R22 , BYTE3 ( 0x10000000 )
000a7c e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000a7d 940e 0f4a 	CALL SUBOPT_0x48
000a7f e018      	LDI  R17,LOW(8)
000a80 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000a81 e0e0     +LDI R30 , LOW ( 0x1000 )
000a82 e1f0     +LDI R31 , HIGH ( 0x1000 )
000a83 e060     +LDI R22 , BYTE3 ( 0x1000 )
000a84 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000a85 940e 0f4a 	CALL SUBOPT_0x48
000a87 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000a88 3040      	CPI  R20,0
000a89 f011      	BREQ _0x200007B
000a8a 770f      	ANDI R16,LOW(127)
000a8b c001      	RJMP _0x200007C
                 _0x200007B:
000a8c e041      	LDI  R20,LOW(1)
                 _0x200007C:
000a8d ff01      	SBRS R16,1
000a8e c008      	RJMP _0x200007D
000a8f 940e 0f36 	CALL SUBOPT_0x44
000a91 940e 0f2a 	CALL SUBOPT_0x42
000a93 9614      	ADIW R26,4
000a94 940e 11e1 	CALL __GETD1P
000a96 c00f      	RJMP _0x2000110
                 _0x200007D:
000a97 ff02      	SBRS R16,2
000a98 c007      	RJMP _0x200007F
000a99 940e 0f36 	CALL SUBOPT_0x44
000a9b 940e 0f45 	CALL SUBOPT_0x47
000a9d 940e 1171 	CALL __CWD1
000a9f c006      	RJMP _0x2000110
                 _0x200007F:
000aa0 940e 0f36 	CALL SUBOPT_0x44
000aa2 940e 0f45 	CALL SUBOPT_0x47
000aa4 2766      	CLR  R22
000aa5 2777      	CLR  R23
                 _0x2000110:
                +
000aa6 87ea     +STD Y + 10 , R30
000aa7 87fb     +STD Y + 10 + 1 , R31
000aa8 876c     +STD Y + 10 + 2 , R22
000aa9 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000aaa ff02      	SBRS R16,2
000aab c012      	RJMP _0x2000081
000aac 85ad      	LDD  R26,Y+13
000aad 23aa      	TST  R26
000aae f442      	BRPL _0x2000082
000aaf 940e 0f38 	CALL SUBOPT_0x45
000ab1 940e 1163 	CALL __ANEGD1
000ab3 940e 0f31 	CALL SUBOPT_0x43
000ab5 e2ed      	LDI  R30,LOW(45)
000ab6 8bed      	STD  Y+21,R30
                 _0x2000082:
000ab7 89ed      	LDD  R30,Y+21
000ab8 30e0      	CPI  R30,0
000ab9 f019      	BREQ _0x2000083
000aba 5f1f      	SUBI R17,-LOW(1)
000abb 5f4f      	SUBI R20,-LOW(1)
000abc c001      	RJMP _0x2000084
                 _0x2000083:
000abd 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000abe 2f34      	MOV  R19,R20
                 _0x200006D:
000abf fd00      	SBRC R16,0
000ac0 c014      	RJMP _0x2000085
                 _0x2000086:
000ac1 1715      	CP   R17,R21
000ac2 f410      	BRSH _0x2000089
000ac3 1735      	CP   R19,R21
000ac4 f008      	BRLO _0x200008A
                 _0x2000089:
000ac5 c00f      	RJMP _0x2000088
                 _0x200008A:
000ac6 ff07      	SBRS R16,7
000ac7 c008      	RJMP _0x200008B
000ac8 ff02      	SBRS R16,2
000ac9 c004      	RJMP _0x200008C
000aca 7f0b      	ANDI R16,LOW(251)
000acb 892d      	LDD  R18,Y+21
000acc 5011      	SUBI R17,LOW(1)
000acd c001      	RJMP _0x200008D
                 _0x200008C:
000ace e320      	LDI  R18,LOW(48)
                 _0x200008D:
000acf c001      	RJMP _0x200008E
                 _0x200008B:
000ad0 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000ad1 940e 0f0b 	CALL SUBOPT_0x3E
000ad3 5051      	SUBI R21,LOW(1)
000ad4 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000ad5 1714      	CP   R17,R20
000ad6 f490      	BRSH _0x2000091
000ad7 6100      	ORI  R16,LOW(16)
000ad8 ff02      	SBRS R16,2
000ad9 c006      	RJMP _0x2000092
000ada 940e 0f4f 	CALL SUBOPT_0x49
000adc f009      	BREQ _0x2000093
000add 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000ade 5011      	SUBI R17,LOW(1)
000adf 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000ae0 e3e0      	LDI  R30,LOW(48)
000ae1 93ea      	ST   -Y,R30
000ae2 940e 0f22 	CALL SUBOPT_0x41
000ae4 3050      	CPI  R21,0
000ae5 f009      	BREQ _0x2000094
000ae6 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000ae7 5041      	SUBI R20,LOW(1)
000ae8 cfec      	RJMP _0x200008F
                 _0x2000091:
000ae9 2f31      	MOV  R19,R17
000aea 89ec      	LDD  R30,Y+20
000aeb 30e0      	CPI  R30,0
000aec f4b9      	BRNE _0x2000095
                 _0x2000096:
000aed 3030      	CPI  R19,0
000aee f0a1      	BREQ _0x2000098
000aef ff03      	SBRS R16,3
000af0 c006      	RJMP _0x2000099
000af1 85ee      	LDD  R30,Y+14
000af2 85ff      	LDD  R31,Y+14+1
000af3 9125      	LPM  R18,Z+
000af4 87ee      	STD  Y+14,R30
000af5 87ff      	STD  Y+14+1,R31
000af6 c005      	RJMP _0x200009A
                 _0x2000099:
000af7 85ae      	LDD  R26,Y+14
000af8 85bf      	LDD  R27,Y+14+1
000af9 912d      	LD   R18,X+
000afa 87ae      	STD  Y+14,R26
000afb 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000afc 940e 0f0b 	CALL SUBOPT_0x3E
000afe 3050      	CPI  R21,0
000aff f009      	BREQ _0x200009B
000b00 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000b01 5031      	SUBI R19,LOW(1)
000b02 cfea      	RJMP _0x2000096
                 _0x2000098:
000b03 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000b04 940e 0f63 	CALL SUBOPT_0x4A
000b06 940e 119c 	CALL __DIVD21U
000b08 2f2e      	MOV  R18,R30
000b09 302a      	CPI  R18,10
000b0a f030      	BRLO _0x20000A0
000b0b ff03      	SBRS R16,3
000b0c c002      	RJMP _0x20000A1
000b0d 5c29      	SUBI R18,-LOW(55)
000b0e c001      	RJMP _0x20000A2
                 _0x20000A1:
000b0f 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000b10 c001      	RJMP _0x20000A3
                 _0x20000A0:
000b11 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000b12 fd04      	SBRC R16,4
000b13 c021      	RJMP _0x20000A5
000b14 3321      	CPI  R18,49
000b15 f460      	BRSH _0x20000A7
                +
000b16 89a8     +LDD R26 , Y + 16
000b17 89b9     +LDD R27 , Y + 16 + 1
000b18 898a     +LDD R24 , Y + 16 + 2
000b19 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000b1a 30a1     +CPI R26 , LOW ( 0x1 )
000b1b e0e0     +LDI R30 , HIGH ( 0x1 )
000b1c 07be     +CPC R27 , R30
000b1d e0e0     +LDI R30 , BYTE3 ( 0x1 )
000b1e 078e     +CPC R24 , R30
000b1f e0e0     +LDI R30 , BYTE4 ( 0x1 )
000b20 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000b21 f409      	BRNE _0x20000A6
                 _0x20000A7:
000b22 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000b23 1743      	CP   R20,R19
000b24 f440      	BRSH _0x2000111
000b25 1753      	CP   R21,R19
000b26 f010      	BRLO _0x20000AC
000b27 ff00      	SBRS R16,0
000b28 c001      	RJMP _0x20000AD
                 _0x20000AC:
000b29 c010      	RJMP _0x20000AB
                 _0x20000AD:
000b2a e220      	LDI  R18,LOW(32)
000b2b ff07      	SBRS R16,7
000b2c c008      	RJMP _0x20000AE
                 _0x2000111:
000b2d e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000b2e 6100      	ORI  R16,LOW(16)
000b2f ff02      	SBRS R16,2
000b30 c004      	RJMP _0x20000AF
000b31 940e 0f4f 	CALL SUBOPT_0x49
000b33 f009      	BREQ _0x20000B0
000b34 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000b35 940e 0f0b 	CALL SUBOPT_0x3E
000b37 3050      	CPI  R21,0
000b38 f009      	BREQ _0x20000B1
000b39 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000b3a 5031      	SUBI R19,LOW(1)
000b3b 940e 0f63 	CALL SUBOPT_0x4A
000b3d 940e 11cd 	CALL __MODD21U
000b3f 940e 0f31 	CALL SUBOPT_0x43
000b41 89ec      	LDD  R30,Y+20
                +
000b42 89a8     +LDD R26 , Y + 16
000b43 89b9     +LDD R27 , Y + 16 + 1
000b44 898a     +LDD R24 , Y + 16 + 2
000b45 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000b46 27ff      	CLR  R31
000b47 2766      	CLR  R22
000b48 2777      	CLR  R23
000b49 940e 119c 	CALL __DIVD21U
000b4b 940e 0f4a 	CALL SUBOPT_0x48
                +
000b4d 89e8     +LDD R30 , Y + 16
000b4e 89f9     +LDD R31 , Y + 16 + 1
000b4f 896a     +LDD R22 , Y + 16 + 2
000b50 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000b51 940e 1231 	CALL __CPD10
000b53 f009      	BREQ _0x200009F
000b54 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000b55 ff00      	SBRS R16,0
000b56 c008      	RJMP _0x20000B2
                 _0x20000B3:
000b57 3050      	CPI  R21,0
000b58 f031      	BREQ _0x20000B5
000b59 5051      	SUBI R21,LOW(1)
000b5a e2e0      	LDI  R30,LOW(32)
000b5b 93ea      	ST   -Y,R30
000b5c 940e 0f22 	CALL SUBOPT_0x41
000b5e cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000b5f e010      	LDI  R17,LOW(0)
                 _0x2000035:
000b60 ce06      	RJMP _0x2000030
                 _0x2000032:
000b61 81ae      	LDD  R26,Y+6
000b62 81bf      	LDD  R27,Y+6+1
000b63 940e 11dd 	CALL __GETW1P
000b65 940e 123c 	CALL __LOADLOCR6
000b67 96ef      	ADIW R28,63
000b68 966f      	ADIW R28,31
000b69 9508      	RET
                 _sprintf:
000b6a 92ff      	PUSH R15
000b6b 2ef8      	MOV  R15,R24
000b6c 9726      	SBIW R28,6
000b6d 940e 1237 	CALL __SAVELOCR4
000b6f 940e 0f6c 	CALL SUBOPT_0x4B
000b71 9730      	SBIW R30,0
000b72 f419      	BRNE _0x20000B7
000b73 efef      	LDI  R30,LOW(65535)
000b74 efff      	LDI  R31,HIGH(65535)
000b75 c025      	RJMP _0x20C0006
                 _0x20000B7:
000b76 01de      	MOVW R26,R28
000b77 9616      	ADIW R26,6
000b78 940e 115f 	CALL __ADDW2R15
000b7a 018d      	MOVW R16,R26
000b7b 940e 0f6c 	CALL SUBOPT_0x4B
000b7d 83ee      	STD  Y+6,R30
000b7e 83ff      	STD  Y+6+1,R31
000b7f e0e0      	LDI  R30,LOW(0)
000b80 87e8      	STD  Y+8,R30
000b81 87e9      	STD  Y+8+1,R30
000b82 01de      	MOVW R26,R28
000b83 961a      	ADIW R26,10
000b84 940e 115f 	CALL __ADDW2R15
000b86 940e 11dd 	CALL __GETW1P
000b88 93fa      	ST   -Y,R31
000b89 93ea      	ST   -Y,R30
000b8a 931a      	ST   -Y,R17
000b8b 930a      	ST   -Y,R16
000b8c e3ef      	LDI  R30,LOW(_put_buff_G100)
000b8d e0f8      	LDI  R31,HIGH(_put_buff_G100)
000b8e 93fa      	ST   -Y,R31
000b8f 93ea      	ST   -Y,R30
000b90 01fe      	MOVW R30,R28
000b91 963a      	ADIW R30,10
000b92 93fa      	ST   -Y,R31
000b93 93ea      	ST   -Y,R30
000b94 ddb7      	RCALL __print_G100
000b95 019f      	MOVW R18,R30
000b96 81ae      	LDD  R26,Y+6
000b97 81bf      	LDD  R27,Y+6+1
000b98 e0e0      	LDI  R30,LOW(0)
000b99 93ec      	ST   X,R30
000b9a 01f9      	MOVW R30,R18
                 _0x20C0006:
000b9b 940e 123e 	CALL __LOADLOCR4
000b9d 962a      	ADIW R28,10
000b9e 90ff      	POP  R15
000b9f 9508      	RET
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
000ba0 e0ff          ldi   r31,15
                 __lcd_delay0:
000ba1 95fa          dec   r31
000ba2 f7f1          brne  __lcd_delay0
000ba3 9508      	RET
                 __lcd_ready:
000ba4 b3a7          in    r26,__lcd_direction
000ba5 70af          andi  r26,0xf                 ;set as input
000ba6 bba7          out   __lcd_direction,r26
000ba7 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000ba8 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000ba9 dff6      	RCALL __lcd_delay_G101
000baa 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000bab dff4      	RCALL __lcd_delay_G101
000bac b3a6          in    r26,__lcd_pin
000bad 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000bae dff1      	RCALL __lcd_delay_G101
000baf 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000bb0 dfef      	RCALL __lcd_delay_G101
000bb1 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000bb2 fda7          sbrc  r26,__lcd_busy_flag
000bb3 cff5          rjmp  __lcd_busy
000bb4 9508      	RET
                 __lcd_write_nibble_G101:
000bb5 7fa0          andi  r26,0xf0
000bb6 2bab          or    r26,r27
000bb7 bba8          out   __lcd_port,r26          ;write
000bb8 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000bb9 940e 0ba0 	CALL __lcd_delay_G101
000bbb 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000bbc 940e 0ba0 	CALL __lcd_delay_G101
000bbe 9508      	RET
                 __lcd_write_data:
000bbf 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000bc0 b3a7          in    r26,__lcd_direction
000bc1 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000bc2 bba7          out   __lcd_direction,r26
000bc3 b3b8          in    r27,__lcd_port
000bc4 70bf          andi  r27,0xf
000bc5 81a8          ld    r26,y
000bc6 dfee      	RCALL __lcd_write_nibble_G101
000bc7 81a8          ld    r26,y
000bc8 95a2          swap  r26
000bc9 dfeb      	RCALL __lcd_write_nibble_G101
000bca 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000bcb 940c 0c93 	JMP  _0x20C0004
                 __lcd_read_nibble_G101:
000bcd 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000bce 940e 0ba0 	CALL __lcd_delay_G101
000bd0 b3e6          in    r30,__lcd_pin           ;read
000bd1 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000bd2 940e 0ba0 	CALL __lcd_delay_G101
000bd4 7fe0          andi  r30,0xf0
000bd5 9508      	RET
                 _lcd_read_byte0_G101:
000bd6 940e 0ba0 	CALL __lcd_delay_G101
000bd8 dff4      	RCALL __lcd_read_nibble_G101
000bd9 2fae          mov   r26,r30
000bda dff2      	RCALL __lcd_read_nibble_G101
000bdb 98c1          cbi   __lcd_port,__lcd_rd     ;RD=0
000bdc 95e2          swap  r30
000bdd 2bea          or    r30,r26
000bde 9508      	RET
                 _lcd_gotoxy:
000bdf 940e 0ba4 	CALL __lcd_ready
000be1 81e8      	LD   R30,Y
000be2 e0f0      	LDI  R31,0
000be3 55e0      	SUBI R30,LOW(-__base_y_G101)
000be4 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000be5 81e0      	LD   R30,Z
000be6 81a9      	LDD  R26,Y+1
000be7 0fea      	ADD  R30,R26
000be8 93ea      	ST   -Y,R30
000be9 940e 0bbf 	CALL __lcd_write_data
000beb 81e9      	LDD  R30,Y+1
000bec 93e0 01b4 	STS  __lcd_x,R30
000bee 81e8      	LD   R30,Y
000bef 93e0 01b5 	STS  __lcd_y,R30
000bf1 9622      	ADIW R28,2
000bf2 9508      	RET
                 _lcd_clear:
000bf3 940e 0ba4 	CALL __lcd_ready
000bf5 e0e2      	LDI  R30,LOW(2)
000bf6 93ea      	ST   -Y,R30
000bf7 940e 0bbf 	CALL __lcd_write_data
000bf9 940e 0ba4 	CALL __lcd_ready
000bfb e0ec      	LDI  R30,LOW(12)
000bfc 93ea      	ST   -Y,R30
000bfd 940e 0bbf 	CALL __lcd_write_data
000bff 940e 0ba4 	CALL __lcd_ready
000c01 e0e1      	LDI  R30,LOW(1)
000c02 93ea      	ST   -Y,R30
000c03 940e 0bbf 	CALL __lcd_write_data
000c05 e0e0      	LDI  R30,LOW(0)
000c06 93e0 01b5 	STS  __lcd_y,R30
000c08 93e0 01b4 	STS  __lcd_x,R30
000c0a 9508      	RET
                 _lcd_putchar:
000c0b 93ef          push r30
000c0c 93ff          push r31
000c0d 81a8          ld   r26,y
000c0e 9468          set
000c0f 30aa          cpi  r26,10
000c10 f039          breq __lcd_putchar1
000c11 94e8          clt
000c12 91e0 01b6 	LDS  R30,__lcd_maxx
000c14 91a0 01b4 	LDS  R26,__lcd_x
000c16 17ae      	CP   R26,R30
000c17 f060      	BRLO _0x2020004
                 	__lcd_putchar1:
000c18 91e0 01b5 	LDS  R30,__lcd_y
000c1a 5fef      	SUBI R30,-LOW(1)
000c1b 93e0 01b5 	STS  __lcd_y,R30
000c1d e0e0      	LDI  R30,LOW(0)
000c1e 93ea      	ST   -Y,R30
000c1f 91e0 01b5 	LDS  R30,__lcd_y
000c21 93ea      	ST   -Y,R30
000c22 dfbc      	RCALL _lcd_gotoxy
000c23 f056      	brts __lcd_putchar0
                 _0x2020004:
000c24 91e0 01b4 	LDS  R30,__lcd_x
000c26 5fef      	SUBI R30,-LOW(1)
000c27 93e0 01b4 	STS  __lcd_x,R30
000c29 df7a          rcall __lcd_ready
000c2a 9ac0          sbi  __lcd_port,__lcd_rs ;RS=1
000c2b 81a8          ld   r26,y
000c2c 93aa          st   -y,r26
000c2d df91          rcall __lcd_write_data
                 __lcd_putchar0:
000c2e 91ff          pop  r31
000c2f 91ef          pop  r30
000c30 940c 0c93 	JMP  _0x20C0004
                 _lcd_puts:
000c32 931a      	ST   -Y,R17
                 _0x2020005:
000c33 81a9      	LDD  R26,Y+1
000c34 81ba      	LDD  R27,Y+1+1
000c35 91ed      	LD   R30,X+
000c36 83a9      	STD  Y+1,R26
000c37 83ba      	STD  Y+1+1,R27
000c38 2f1e      	MOV  R17,R30
000c39 30e0      	CPI  R30,0
000c3a f019      	BREQ _0x2020007
000c3b 931a      	ST   -Y,R17
000c3c dfce      	RCALL _lcd_putchar
000c3d cff5      	RJMP _0x2020005
                 _0x2020007:
000c3e c00e      	RJMP _0x20C0005
                 _lcd_putsf:
000c3f 931a      	ST   -Y,R17
                 _0x2020008:
000c40 81e9      	LDD  R30,Y+1
000c41 81fa      	LDD  R31,Y+1+1
000c42 9631      	ADIW R30,1
000c43 83e9      	STD  Y+1,R30
000c44 83fa      	STD  Y+1+1,R31
000c45 9731      	SBIW R30,1
000c46 91e4      	LPM  R30,Z
000c47 2f1e      	MOV  R17,R30
000c48 30e0      	CPI  R30,0
000c49 f019      	BREQ _0x202000A
000c4a 931a      	ST   -Y,R17
000c4b dfbf      	RCALL _lcd_putchar
000c4c cff3      	RJMP _0x2020008
                 _0x202000A:
                 _0x20C0005:
000c4d 8118      	LDD  R17,Y+0
000c4e 9623      	ADIW R28,3
000c4f 9508      	RET
                 __long_delay_G101:
000c50 27aa          clr   r26
000c51 27bb          clr   r27
                 __long_delay0:
000c52 9711          sbiw  r26,1         ;2 cycles
000c53 f7f1          brne  __long_delay0 ;2 cycles
000c54 9508      	RET
                 __lcd_init_write_G101:
000c55 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000c56 b3a7          in    r26,__lcd_direction
000c57 6fa7          ori   r26,0xf7                ;set as output
000c58 bba7          out   __lcd_direction,r26
000c59 b3b8          in    r27,__lcd_port
000c5a 70bf          andi  r27,0xf
000c5b 81a8          ld    r26,y
000c5c 940e 0bb5 	CALL __lcd_write_nibble_G101
000c5e 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000c5f c033      	RJMP _0x20C0004
                 _lcd_init:
000c60 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000c61 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
000c62 81e8      	LD   R30,Y
000c63 93e0 01b6 	STS  __lcd_maxx,R30
000c65 58e0      	SUBI R30,-LOW(128)
                +
000c66 93e0 01b2+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000c68 81e8      	LD   R30,Y
000c69 54e0      	SUBI R30,-LOW(192)
                +
000c6a 93e0 01b3+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000c6c 940e 0f73 	CALL SUBOPT_0x4C
000c6e 940e 0f73 	CALL SUBOPT_0x4C
000c70 940e 0f73 	CALL SUBOPT_0x4C
000c72 dfdd      	RCALL __long_delay_G101
000c73 e2e0      	LDI  R30,LOW(32)
000c74 93ea      	ST   -Y,R30
000c75 dfdf      	RCALL __lcd_init_write_G101
000c76 dfd9      	RCALL __long_delay_G101
000c77 e2e8      	LDI  R30,LOW(40)
000c78 940e 0f79 	CALL SUBOPT_0x4D
000c7a e0e4      	LDI  R30,LOW(4)
000c7b 940e 0f79 	CALL SUBOPT_0x4D
000c7d e8e5      	LDI  R30,LOW(133)
000c7e 940e 0f79 	CALL SUBOPT_0x4D
000c80 b3a7          in    r26,__lcd_direction
000c81 70af          andi  r26,0xf                 ;set as input
000c82 bba7          out   __lcd_direction,r26
000c83 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000c84 940e 0bd6 	CALL _lcd_read_byte0_G101
000c86 30e5      	CPI  R30,LOW(0x5)
000c87 f011      	BREQ _0x202000B
000c88 e0e0      	LDI  R30,LOW(0)
000c89 c009      	RJMP _0x20C0004
                 _0x202000B:
000c8a 940e 0ba4 	CALL __lcd_ready
000c8c e0e6      	LDI  R30,LOW(6)
000c8d 93ea      	ST   -Y,R30
000c8e 940e 0bbf 	CALL __lcd_write_data
000c90 940e 0bf3 	CALL _lcd_clear
000c92 e0e1      	LDI  R30,LOW(1)
                 _0x20C0004:
000c93 9621      	ADIW R28,1
000c94 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
000c95 91e9          ld   r30,y+
000c96 91f9          ld   r31,y+
000c97 91a9          ld   r26,y+
000c98 91b9          ld   r27,y+
000c99 01cd          movw r24,r26
                 strcpyf0:
000c9a 9005      	lpm  r0,z+
000c9b 920d          st   x+,r0
000c9c 2000          tst  r0
000c9d f7e1          brne strcpyf0
000c9e 01fc          movw r30,r24
000c9f 9508          ret
                 _strlen:
000ca0 91a9          ld   r26,y+
000ca1 91b9          ld   r27,y+
000ca2 27ee          clr  r30
000ca3 27ff          clr  r31
                 strlen0:
000ca4 916d          ld   r22,x+
000ca5 2366          tst  r22
000ca6 f011          breq strlen1
000ca7 9631          adiw r30,1
000ca8 cffb          rjmp strlen0
                 strlen1:
000ca9 9508          ret
                 _strlenf:
000caa 27aa          clr  r26
000cab 27bb          clr  r27
000cac 91e9          ld   r30,y+
000cad 91f9          ld   r31,y+
                 strlenf0:
000cae 9005      	lpm  r0,z+
000caf 2000          tst  r0
000cb0 f011          breq strlenf1
000cb1 9611          adiw r26,1
000cb2 cffb          rjmp strlenf0
                 strlenf1:
000cb3 01fd          movw r30,r26
000cb4 9508          ret
                 
                 	.CSEG
                 _ftrunc:
000cb5 817b         ldd  r23,y+3
000cb6 816a         ldd  r22,y+2
000cb7 81f9         ldd  r31,y+1
000cb8 81e8         ld   r30,y
000cb9 fb77         bst  r23,7
000cba 0f77         lsl  r23
000cbb fd67         sbrc r22,7
000cbc 6071         sbr  r23,1
000cbd 2f97         mov  r25,r23
000cbe 579e         subi r25,0x7e
000cbf f081         breq __ftrunc0
000cc0 f078         brcs __ftrunc0
000cc1 3198         cpi  r25,24
000cc2 f490         brsh __ftrunc1
000cc3 27aa         clr  r26
000cc4 27bb         clr  r27
000cc5 2788         clr  r24
                 __ftrunc2:
000cc6 9408         sec
000cc7 9587         ror  r24
000cc8 95b7         ror  r27
000cc9 95a7         ror  r26
000cca 959a         dec  r25
000ccb f7d1         brne __ftrunc2
000ccc 23ea         and  r30,r26
000ccd 23fb         and  r31,r27
000cce 2368         and  r22,r24
000ccf c005         rjmp __ftrunc1
                 __ftrunc0:
000cd0 94e8         clt
000cd1 2777         clr  r23
000cd2 27ee         clr  r30
000cd3 27ff         clr  r31
000cd4 2766         clr  r22
                 __ftrunc1:
000cd5 776f         cbr  r22,0x80
000cd6 9576         lsr  r23
000cd7 f408         brcc __ftrunc3
000cd8 6860         sbr  r22,0x80
                 __ftrunc3:
000cd9 f977         bld  r23,7
000cda 91a9         ld   r26,y+
000cdb 91b9         ld   r27,y+
000cdc 9189         ld   r24,y+
000cdd 9199         ld   r25,y+
000cde 17ea         cp   r30,r26
000cdf 07fb         cpc  r31,r27
000ce0 0768         cpc  r22,r24
000ce1 0779         cpc  r23,r25
000ce2 fb97         bst  r25,7
000ce3 9508         ret
                 _floor:
000ce4 940e 0f7e 	CALL SUBOPT_0x4E
000ce6 940e 11f6 	CALL __PUTPARD1
000ce8 940e 0cb5 	CALL _ftrunc
000cea 940e 11f1 	CALL __PUTD1S0
000cec f419          brne __floor1
                 __floor0:
000ced 940e 0f7e 	CALL SUBOPT_0x4E
000cef c009      	RJMP _0x20C0003
                 __floor1:
000cf0 f7e6          brtc __floor0
000cf1 940e 0f7e 	CALL SUBOPT_0x4E
                +
000cf3 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000cf4 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000cf5 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000cf6 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000cf7 940e 1055 	CALL __SUBF12
                 _0x20C0003:
000cf9 9624      	ADIW R28,4
000cfa 9508      	RET
                 
                 	.CSEG
                 _ftoa:
000cfb 9724      	SBIW R28,4
000cfc e0e0      	LDI  R30,LOW(0)
000cfd 83e8      	ST   Y,R30
000cfe 83e9      	STD  Y+1,R30
000cff 83ea      	STD  Y+2,R30
000d00 e3ef      	LDI  R30,LOW(63)
000d01 83eb      	STD  Y+3,R30
000d02 931a      	ST   -Y,R17
000d03 930a      	ST   -Y,R16
000d04 85eb      	LDD  R30,Y+11
000d05 85fc      	LDD  R31,Y+11+1
000d06 3fef      	CPI  R30,LOW(0xFFFF)
000d07 efaf      	LDI  R26,HIGH(0xFFFF)
000d08 07fa      	CPC  R31,R26
000d09 f429      	BRNE _0x20A000D
000d0a d276      	RCALL SUBOPT_0x4F
                +
000d0b e4ec     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000d0c e0f1     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW1FN _0x20A0000,0
000d0d d19d      	RCALL SUBOPT_0x31
000d0e c088      	RJMP _0x20C0002
                 _0x20A000D:
000d0f 3fef      	CPI  R30,LOW(0x7FFF)
000d10 e7af      	LDI  R26,HIGH(0x7FFF)
000d11 07fa      	CPC  R31,R26
000d12 f429      	BRNE _0x20A000C
000d13 d26d      	RCALL SUBOPT_0x4F
                +
000d14 e4ed     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000d15 e0f1     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW1FN _0x20A0000,1
000d16 d194      	RCALL SUBOPT_0x31
000d17 c07f      	RJMP _0x20C0002
                 _0x20A000C:
000d18 85ac      	LDD  R26,Y+12
000d19 23aa      	TST  R26
000d1a f452      	BRPL _0x20A000F
                +
000d1b 85e9     +LDD R30 , Y + 9
000d1c 85fa     +LDD R31 , Y + 9 + 1
000d1d 856b     +LDD R22 , Y + 9 + 2
000d1e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d1f 940e 0fb6 	CALL __ANEGF1
000d21 d264      	RCALL SUBOPT_0x50
000d22 d268      	RCALL SUBOPT_0x51
000d23 e2ed      	LDI  R30,LOW(45)
000d24 93ec      	ST   X,R30
                 _0x20A000F:
000d25 85a8      	LDD  R26,Y+8
000d26 30a7      	CPI  R26,LOW(0x7)
000d27 f010      	BRLO _0x20A0010
000d28 e0e6      	LDI  R30,LOW(6)
000d29 87e8      	STD  Y+8,R30
                 _0x20A0010:
000d2a 8518      	LDD  R17,Y+8
                 _0x20A0011:
000d2b 2fe1      	MOV  R30,R17
000d2c 5011      	SUBI R17,1
000d2d 30e0      	CPI  R30,0
000d2e f021      	BREQ _0x20A0013
000d2f d262      	RCALL SUBOPT_0x52
000d30 d1bc      	RCALL SUBOPT_0x39
000d31 d265      	RCALL SUBOPT_0x53
000d32 cff8      	RJMP _0x20A0011
                 _0x20A0013:
000d33 d268      	RCALL SUBOPT_0x54
000d34 940e 105c 	CALL __ADDF12
000d36 d24f      	RCALL SUBOPT_0x50
000d37 e010      	LDI  R17,LOW(0)
                +
000d38 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000d39 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000d3a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000d3b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000d3c d25a      	RCALL SUBOPT_0x53
                 _0x20A0014:
000d3d d25e      	RCALL SUBOPT_0x54
000d3e 940e 113f 	CALL __CMPF12
000d40 f060      	BRLO _0x20A0016
000d41 d250      	RCALL SUBOPT_0x52
000d42 d197      	RCALL SUBOPT_0x36
000d43 d253      	RCALL SUBOPT_0x53
000d44 5f1f      	SUBI R17,-LOW(1)
000d45 3217      	CPI  R17,39
000d46 f028      	BRLO _0x20A0017
000d47 d239      	RCALL SUBOPT_0x4F
                +
000d48 e5e1     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000d49 e0f1     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW1FN _0x20A0000,5
000d4a d160      	RCALL SUBOPT_0x31
000d4b c04b      	RJMP _0x20C0002
                 _0x20A0017:
000d4c cff0      	RJMP _0x20A0014
                 _0x20A0016:
000d4d 3010      	CPI  R17,0
000d4e f421      	BRNE _0x20A0018
000d4f d23b      	RCALL SUBOPT_0x51
000d50 e3e0      	LDI  R30,LOW(48)
000d51 93ec      	ST   X,R30
000d52 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000d53 2fe1      	MOV  R30,R17
000d54 5011      	SUBI R17,1
000d55 30e0      	CPI  R30,0
000d56 f0e1      	BREQ _0x20A001C
000d57 d23a      	RCALL SUBOPT_0x52
000d58 d194      	RCALL SUBOPT_0x39
000d59 d18c      	RCALL SUBOPT_0x38
000d5a 940e 11f6 	CALL __PUTPARD1
000d5c 940e 0ce4 	CALL _floor
000d5e d238      	RCALL SUBOPT_0x53
000d5f d23c      	RCALL SUBOPT_0x54
000d60 940e 10fa 	CALL __DIVF21
000d62 940e 0fe9 	CALL __CFD1U
000d64 2f0e      	MOV  R16,R30
000d65 d225      	RCALL SUBOPT_0x51
000d66 d194      	RCALL SUBOPT_0x3B
000d67 e0f0      	LDI  R31,0
000d68 d229      	RCALL SUBOPT_0x52
000d69 940e 1171 	CALL __CWD1
000d6b 940e 1022 	CALL __CDF1
000d6d 940e 10ac 	CALL __MULF12
000d6f d235      	RCALL SUBOPT_0x55
000d70 d18f      	RCALL SUBOPT_0x3C
000d71 d214      	RCALL SUBOPT_0x50
000d72 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000d73 85e8      	LDD  R30,Y+8
000d74 30e0      	CPI  R30,0
000d75 f0e9      	BREQ _0x20C0001
000d76 d214      	RCALL SUBOPT_0x51
000d77 e2ee      	LDI  R30,LOW(46)
000d78 93ec      	ST   X,R30
                 _0x20A001E:
000d79 85e8      	LDD  R30,Y+8
000d7a 50e1      	SUBI R30,LOW(1)
000d7b 87e8      	STD  Y+8,R30
000d7c 5fef      	SUBI R30,-LOW(1)
000d7d f0a9      	BREQ _0x20A0020
000d7e d226      	RCALL SUBOPT_0x55
000d7f d15a      	RCALL SUBOPT_0x36
000d80 d205      	RCALL SUBOPT_0x50
                +
000d81 85e9     +LDD R30 , Y + 9
000d82 85fa     +LDD R31 , Y + 9 + 1
000d83 856b     +LDD R22 , Y + 9 + 2
000d84 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d85 940e 0fe9 	CALL __CFD1U
000d87 2f0e      	MOV  R16,R30
000d88 d202      	RCALL SUBOPT_0x51
000d89 d171      	RCALL SUBOPT_0x3B
000d8a e0f0      	LDI  R31,0
000d8b d219      	RCALL SUBOPT_0x55
000d8c 940e 1171 	CALL __CWD1
000d8e 940e 1022 	CALL __CDF1
000d90 d16f      	RCALL SUBOPT_0x3C
000d91 d1f4      	RCALL SUBOPT_0x50
000d92 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000d93 81ae      	LDD  R26,Y+6
000d94 81bf      	LDD  R27,Y+6+1
000d95 e0e0      	LDI  R30,LOW(0)
000d96 93ec      	ST   X,R30
                 _0x20C0002:
000d97 8119      	LDD  R17,Y+1
000d98 8108      	LDD  R16,Y+0
000d99 962d      	ADIW R28,13
000d9a 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.ESEG
                 _rast90:
000000           	.BYTE 0x2
                 _chap90:
000002           	.BYTE 0x2
                 
                 	.DSEG
                 _dis_rp:
000160           	.BYTE 0x2
                 _dis_chb:
000162           	.BYTE 0x2
                 _dis_rb:
000164           	.BYTE 0x2
                 _text:
000166           	.BYTE 0x28
                 _S0:
00018e           	.BYTE 0x4
                 _S1:
000192           	.BYTE 0x4
                 _S2:
000196           	.BYTE 0x4
                 _S3:
00019a           	.BYTE 0x4
                 _S4:
00019e           	.BYTE 0x4
                 _S5:
0001a2           	.BYTE 0x4
                 _S6:
0001a6           	.BYTE 0x4
                 _S7:
0001aa           	.BYTE 0x4
                 _cntr:
0001ae           	.BYTE 0x2
                 __base_y_G101:
0001b0           	.BYTE 0x4
                 __lcd_x:
0001b4           	.BYTE 0x1
                 __lcd_y:
0001b5           	.BYTE 0x1
                 __lcd_maxx:
0001b6           	.BYTE 0x1
                 __seed_G105:
0001b7           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000d9b ede0      	LDI  R30,LOW(2000)
000d9c e0f7      	LDI  R31,HIGH(2000)
000d9d 93fa      	ST   -Y,R31
000d9e 93ea      	ST   -Y,R30
000d9f 940c 0faa 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x1:
000da1 eee8      	LDI  R30,LOW(1000)
000da2 e0f3      	LDI  R31,HIGH(1000)
000da3 93fa      	ST   -Y,R31
000da4 93ea      	ST   -Y,R30
000da5 940c 0faa 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2:
000da7 9ac5      	SBI  0x18,5
000da8 98c4      	CBI  0x18,4
000da9 98c0      	CBI  0x18,0
000daa 9ac1      	SBI  0x18,1
000dab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000dac 98c5      	CBI  0x18,5
000dad 9ac4      	SBI  0x18,4
000dae 9ac0      	SBI  0x18,0
000daf 98c1      	CBI  0x18,1
000db0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 46 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x4:
000db1 93fa      	ST   -Y,R31
000db2 93ea      	ST   -Y,R30
000db3 940c 0faa 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x5:
000db5 e0a0      	LDI  R26,LOW(_rast90)
000db6 e0b0      	LDI  R27,HIGH(_rast90)
000db7 940e 1208 	CALL __EEPROMRDW
000db9 93fa      	ST   -Y,R31
000dba 93ea      	ST   -Y,R30
000dbb 940c 0105 	JMP  _r_90
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x6:
000dbd 9ac5      	SBI  0x18,5
000dbe 98c4      	CBI  0x18,4
000dbf 9ac0      	SBI  0x18,0
000dc0 98c1      	CBI  0x18,1
000dc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x7:
000dc2 efea      	LDI  R30,LOW(250)
000dc3 e0f0      	LDI  R31,HIGH(250)
000dc4 cfec      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8:
000dc5 e0a2      	LDI  R26,LOW(_chap90)
000dc6 e0b0      	LDI  R27,HIGH(_chap90)
000dc7 940e 1208 	CALL __EEPROMRDW
000dc9 93fa      	ST   -Y,R31
000dca 93ea      	ST   -Y,R30
000dcb 940e 0109 	CALL _l_90
000dcd 940c 03c1 	JMP  _stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000dcf ebec      	LDI  R30,LOW(700)
000dd0 e0f2      	LDI  R31,HIGH(700)
000dd1 cfdf      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
000dd2 e0e0      	LDI  R30,LOW(0)
000dd3 e0f0      	LDI  R31,HIGH(0)
000dd4 bdfd      	OUT  0x2C+1,R31
000dd5 bdec      	OUT  0x2C,R30
000dd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xB:
000dd7 b5ec      	IN   R30,0x2C
000dd8 b5fd      	IN   R31,0x2C+1
000dd9 01df      	MOVW R26,R30
000dda e3ea      	LDI  R30,LOW(58)
000ddb e0f0      	LDI  R31,HIGH(58)
000ddc 940e 1189 	CALL __DIVW21U
000dde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
000ddf 9a8c      	SBI  0x11,4
000de0 9a94      	SBI  0x12,4
                +
000de1 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000de2 958a     +DEC R24
000de3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
000de4 9894      	CBI  0x12,4
000de5 988c      	CBI  0x11,4
000de6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xD:
000de7 940e 03c1 	CALL _stop
000de9 98c5      	CBI  0x18,5
000dea 9ac4      	SBI  0x18,4
000deb 98c0      	CBI  0x18,0
000dec 9ac1      	SBI  0x18,1
000ded 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000dee 91e0 0160 	LDS  R30,_dis_rp
000df0 91f0 0161 	LDS  R31,_dis_rp+1
000df2 15ec      	CP   R30,R12
000df3 05fd      	CPC  R31,R13
000df4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
000df5 e0a0      	LDI  R26,0
000df6 999a      	SBIC 0x13,2
000df7 e0a1      	LDI  R26,1
000df8 30a0      	CPI  R26,LOW(0x0)
000df9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000dfa 9ac0      	SBI  0x18,0
000dfb 98c1      	CBI  0x18,1
000dfc 98c5      	CBI  0x18,5
000dfd 9ac4      	SBI  0x18,4
000dfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
000dff e0a0      	LDI  R26,0
000e00 9998      	SBIC 0x13,0
000e01 e0a1      	LDI  R26,1
000e02 30a0      	CPI  R26,LOW(0x0)
000e03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000e04 98c0      	CBI  0x18,0
000e05 9ac1      	SBI  0x18,1
000e06 9ac5      	SBI  0x18,5
000e07 98c4      	CBI  0x18,4
000e08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
                +
000e09 5f0f     +SUBI R16 , LOW ( - 1 )
000e0a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000e0b e0e1      	LDI  R30,LOW(1)
000e0c e0f0      	LDI  R31,HIGH(1)
000e0d cfa3      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000e0e 9ac0      	SBI  0x18,0
000e0f 98c1      	CBI  0x18,1
000e10 9ac5      	SBI  0x18,5
000e11 98c4      	CBI  0x18,4
000e12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x15:
000e13 98c3      	CBI  0x18,3
000e14 e0e0      	LDI  R30,LOW(0)
000e15 93ea      	ST   -Y,R30
000e16 93ea      	ST   -Y,R30
000e17 940c 0bdf 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x16:
000e19 93fa      	ST   -Y,R31
000e1a 93ea      	ST   -Y,R30
000e1b 940c 0c3f 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
000e1d e0e0      	LDI  R30,LOW(0)
000e1e 93ea      	ST   -Y,R30
000e1f e0e1      	LDI  R30,LOW(1)
000e20 93ea      	ST   -Y,R30
000e21 940c 0bdf 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000e23 ebe8      	LDI  R30,LOW(3000)
000e24 e0fb      	LDI  R31,HIGH(3000)
000e25 cf8b      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000e26 940e 03c1 	CALL _stop
000e28 cfea      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A:
000e29 e0e0      	LDI  R30,LOW(0)
000e2a 93ea      	ST   -Y,R30
000e2b 93ea      	ST   -Y,R30
000e2c 940c 0bdf 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000e2e e0e7      	LDI  R30,LOW(7)
000e2f e0f0      	LDI  R31,HIGH(7)
000e30 15ea      	CP   R30,R10
000e31 05fb      	CPC  R31,R11
000e32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
000e33 940e 03c1 	CALL _stop
000e35 cf71      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000e36 e2ec      	LDI  R30,LOW(300)
000e37 e0f1      	LDI  R31,HIGH(300)
000e38 cf78      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000e39 940e 03c1 	CALL _stop
000e3b cf81      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
000e3c efe4      	LDI  R30,LOW(500)
000e3d e0f1      	LDI  R31,HIGH(500)
000e3e cf72      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
000e3f 91a0 0160 	LDS  R26,_dis_rp
000e41 91b0 0161 	LDS  R27,_dis_rp+1
000e43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
000e44 e0a2      	LDI  R26,LOW(_chap90)
000e45 e0b0      	LDI  R27,HIGH(_chap90)
000e46 940e 1208 	CALL __EEPROMRDW
000e48 93fa      	ST   -Y,R31
000e49 93ea      	ST   -Y,R30
000e4a 940c 0109 	JMP  _l_90
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000e4c 940e 03c1 	CALL _stop
000e4e 940c 01e3 	JMP  _eslah_aghab
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x23:
000e50 940e 03c1 	CALL _stop
000e52 98c3      	CBI  0x18,3
000e53 e0ea      	LDI  R30,LOW(10)
000e54 e0f0      	LDI  R31,HIGH(10)
000e55 cf5b      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
000e56 98c3      	CBI  0x18,3
000e57 e6e6      	LDI  R30,LOW(_text)
000e58 e0f1      	LDI  R31,HIGH(_text)
000e59 93fa      	ST   -Y,R31
000e5a 93ea      	ST   -Y,R30
000e5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
000e5c e0a0      	LDI  R26,LOW(_rast90)
000e5d e0b0      	LDI  R27,HIGH(_rast90)
000e5e 940e 1208 	CALL __EEPROMRDW
000e60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
000e61 940e 1171 	CALL __CWD1
000e63 940e 11f6 	CALL __PUTPARD1
000e65 e084      	LDI  R24,4
000e66 940e 0b6a 	CALL _sprintf
000e68 9628      	ADIW R28,8
000e69 cfbf      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x27:
000e6a e6e6      	LDI  R30,LOW(_text)
000e6b e0f1      	LDI  R31,HIGH(_text)
000e6c 93fa      	ST   -Y,R31
000e6d 93ea      	ST   -Y,R30
000e6e 940c 0c32 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
000e70 e0a0      	LDI  R26,LOW(_rast90)
000e71 e0b0      	LDI  R27,HIGH(_rast90)
000e72 940e 1218 	CALL __EEPROMWRW
000e74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x29:
000e75 e0a2      	LDI  R26,LOW(_chap90)
000e76 e0b0      	LDI  R27,HIGH(_chap90)
000e77 940e 1208 	CALL __EEPROMRDW
000e79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
000e7a e0a2      	LDI  R26,LOW(_chap90)
000e7b e0b0      	LDI  R27,HIGH(_chap90)
000e7c 940e 1218 	CALL __EEPROMWRW
000e7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
000e7f e6e6      	LDI  R30,LOW(_text)
000e80 e0f1      	LDI  R31,HIGH(_text)
000e81 93fa      	ST   -Y,R31
000e82 93ea      	ST   -Y,R30
000e83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x2C:
000e84 27ff      	CLR  R31
000e85 2766      	CLR  R22
000e86 2777      	CLR  R23
000e87 940e 11f6 	CALL __PUTPARD1
000e89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
000e8a 940e 1171 	CALL __CWD1
000e8c 940e 11f6 	CALL __PUTPARD1
000e8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2E:
000e8f 2766      	CLR  R22
000e90 2777      	CLR  R23
000e91 940e 1022 	CALL __CDF1
000e93 940e 11e7 	CALL __PUTDP1
000e95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x2F:
                +
000e96 e0e0     +LDI R30 , LOW ( 0x40A00000 )
000e97 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
000e98 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
000e99 e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
000e9a 940e 10ac 	CALL __MULF12
000e9c 01df      	MOVW R26,R30
000e9d 01cb      	MOVW R24,R22
                +
000e9e e0e0     +LDI R30 , LOW ( 0x447FC000 )
000e9f ecf0     +LDI R31 , HIGH ( 0x447FC000 )
000ea0 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
000ea1 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
000ea2 940e 10fa 	CALL __DIVF21
000ea4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x30:
000ea5 91ed      	LD   R30,X+
000ea6 91fd      	LD   R31,X+
000ea7 9631      	ADIW R30,1
000ea8 93fe      	ST   -X,R31
000ea9 93ee      	ST   -X,R30
000eaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31:
000eab 93fa      	ST   -Y,R31
000eac 93ea      	ST   -Y,R30
000ead 940c 0c95 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x32:
                +
000eaf 81ac     +LDD R26 , Y + 4
000eb0 81bd     +LDD R27 , Y + 4 + 1
000eb1 818e     +LDD R24 , Y + 4 + 2
000eb2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000eb3 e0e0     +LDI R30 , LOW ( 0x41200000 )
000eb4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000eb5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000eb6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000eb7 940e 10ac 	CALL __MULF12
                +
000eb9 83ec     +STD Y + 4 , R30
000eba 83fd     +STD Y + 4 + 1 , R31
000ebb 836e     +STD Y + 4 + 2 , R22
000ebc 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000ebd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x33:
                +
000ebe 81ec     +LDD R30 , Y + 4
000ebf 81fd     +LDD R31 , Y + 4 + 1
000ec0 816e     +LDD R22 , Y + 4 + 2
000ec1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000ec2 85ac     +LDD R26 , Y + 12
000ec3 85bd     +LDD R27 , Y + 12 + 1
000ec4 858e     +LDD R24 , Y + 12 + 2
000ec5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000ec6 940e 113f 	CALL __CMPF12
000ec8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34:
                +
000ec9 85ac     +LDD R26 , Y + 12
000eca 85bd     +LDD R27 , Y + 12 + 1
000ecb 858e     +LDD R24 , Y + 12 + 2
000ecc 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000ecd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35:
                +
000ece eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000ecf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000ed0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000ed1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000ed2 940e 10ac 	CALL __MULF12
                +
000ed4 87ec     +STD Y + 12 , R30
000ed5 87fd     +STD Y + 12 + 1 , R31
000ed6 876e     +STD Y + 12 + 2 , R22
000ed7 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000ed8 5f3f      	SUBI R19,-LOW(1)
000ed9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36:
                +
000eda e0e0     +LDI R30 , LOW ( 0x41200000 )
000edb e0f0     +LDI R31 , HIGH ( 0x41200000 )
000edc e260     +LDI R22 , BYTE3 ( 0x41200000 )
000edd e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000ede 940e 10ac 	CALL __MULF12
000ee0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
                +
000ee1 87ec     +STD Y + 12 , R30
000ee2 87fd     +STD Y + 12 + 1 , R31
000ee3 876e     +STD Y + 12 + 2 , R22
000ee4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000ee5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
000ee6 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000ee7 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000ee8 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000ee9 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000eea 940e 105c 	CALL __ADDF12
000eec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39:
                +
000eed eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000eee ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000eef ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000ef0 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000ef1 940e 10ac 	CALL __MULF12
000ef3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
000ef4 85a8      	LDD  R26,Y+8
000ef5 85b9      	LDD  R27,Y+8+1
000ef6 9611      	ADIW R26,1
000ef7 87a8      	STD  Y+8,R26
000ef8 87b9      	STD  Y+8+1,R27
000ef9 9711      	SBIW R26,1
000efa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000efb 2fe0      	MOV  R30,R16
000efc 5de0      	SUBI R30,-LOW(48)
000efd 93ec      	ST   X,R30
000efe 2fe0      	MOV  R30,R16
000eff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
000f00 940e 11fb 	CALL __SWAPD12
000f02 940e 1055 	CALL __SUBF12
000f04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3D:
000f05 85e8      	LDD  R30,Y+8
000f06 85f9      	LDD  R31,Y+8+1
000f07 9631      	ADIW R30,1
000f08 87e8      	STD  Y+8,R30
000f09 87f9      	STD  Y+8+1,R31
000f0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E:
000f0b 932a      	ST   -Y,R18
000f0c 81ef      	LDD  R30,Y+7
000f0d 85f8      	LDD  R31,Y+7+1
000f0e 93fa      	ST   -Y,R31
000f0f 93ea      	ST   -Y,R30
000f10 85eb      	LDD  R30,Y+11
000f11 85fc      	LDD  R31,Y+11+1
000f12 9509      	ICALL
000f13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3F:
                +
000f14 01fe     +MOVW R30 , R28
000f15 5ae6     +SUBI R30 , LOW ( - 90 )
000f16 4fff     +SBCI R31 , HIGH ( - 90 )
000f17 9001     +LD R0 , Z +
000f18 81f0     +LD R31 , Z
000f19 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000f1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
000f1b 9734      	SBIW R30,4
                +
000f1c 01de     +MOVW R26 , R28
000f1d 5aa6     +SUBI R26 , LOW ( - 90 )
000f1e 4fbf     +SBCI R27 , HIGH ( - 90 )
000f1f 93ed     +ST X + , R30
000f20 93fc     +ST X , R31
                 	__PUTW1SX 90
000f21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x41:
000f22 81ef      	LDD  R30,Y+7
000f23 85f8      	LDD  R31,Y+7+1
000f24 93fa      	ST   -Y,R31
000f25 93ea      	ST   -Y,R30
000f26 85eb      	LDD  R30,Y+11
000f27 85fc      	LDD  R31,Y+11+1
000f28 9509      	ICALL
000f29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x42:
                +
000f2a 01de     +MOVW R26 , R28
000f2b 5aa6     +SUBI R26 , LOW ( - 90 )
000f2c 4fbf     +SBCI R27 , HIGH ( - 90 )
000f2d 900d     +LD R0 , X +
000f2e 91bc     +LD R27 , X
000f2f 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000f30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x43:
                +
000f31 87ea     +STD Y + 10 , R30
000f32 87fb     +STD Y + 10 + 1 , R31
000f33 876c     +STD Y + 10 + 2 , R22
000f34 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000f35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x44:
000f36 dfdd      	RCALL SUBOPT_0x3F
000f37 cfe3      	RJMP SUBOPT_0x40
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x45:
                +
000f38 85ea     +LDD R30 , Y + 10
000f39 85fb     +LDD R31 , Y + 10 + 1
000f3a 856c     +LDD R22 , Y + 10 + 2
000f3b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000f3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x46:
000f3d 87ee      	STD  Y+14,R30
000f3e 87ff      	STD  Y+14+1,R31
000f3f 93fa      	ST   -Y,R31
000f40 93ea      	ST   -Y,R30
000f41 940e 0ca0 	CALL _strlen
000f43 2f1e      	MOV  R17,R30
000f44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x47:
000f45 dfe4      	RCALL SUBOPT_0x42
000f46 9614      	ADIW R26,4
000f47 940e 11dd 	CALL __GETW1P
000f49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
                +
000f4a 8be8     +STD Y + 16 , R30
000f4b 8bf9     +STD Y + 16 + 1 , R31
000f4c 8b6a     +STD Y + 16 + 2 , R22
000f4d 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000f4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x49:
000f4f 7f0b      	ANDI R16,LOW(251)
000f50 89ed      	LDD  R30,Y+21
000f51 93ea      	ST   -Y,R30
                +
000f52 01fe     +MOVW R30 , R28
000f53 5ae9     +SUBI R30 , LOW ( - 87 )
000f54 4fff     +SBCI R31 , HIGH ( - 87 )
000f55 9001     +LD R0 , Z +
000f56 81f0     +LD R31 , Z
000f57 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000f58 93fa      	ST   -Y,R31
000f59 93ea      	ST   -Y,R30
                +
000f5a 01fe     +MOVW R30 , R28
000f5b 5ae5     +SUBI R30 , LOW ( - 91 )
000f5c 4fff     +SBCI R31 , HIGH ( - 91 )
000f5d 9001     +LD R0 , Z +
000f5e 81f0     +LD R31 , Z
000f5f 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000f60 9509      	ICALL
000f61 3050      	CPI  R21,0
000f62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
000f63 89e8     +LDD R30 , Y + 16
000f64 89f9     +LDD R31 , Y + 16 + 1
000f65 896a     +LDD R22 , Y + 16 + 2
000f66 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000f67 85aa     +LDD R26 , Y + 10
000f68 85bb     +LDD R27 , Y + 10 + 1
000f69 858c     +LDD R24 , Y + 10 + 2
000f6a 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000f6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
000f6c 01de      	MOVW R26,R28
000f6d 961c      	ADIW R26,12
000f6e 940e 115f 	CALL __ADDW2R15
000f70 940e 11dd 	CALL __GETW1P
000f72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4C:
000f73 940e 0c50 	CALL __long_delay_G101
000f75 e3e0      	LDI  R30,LOW(48)
000f76 93ea      	ST   -Y,R30
000f77 940c 0c55 	JMP  __lcd_init_write_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4D:
000f79 93ea      	ST   -Y,R30
000f7a 940e 0bbf 	CALL __lcd_write_data
000f7c 940c 0c50 	JMP  __long_delay_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4E:
000f7e 940e 11ec 	CALL __GETD1S0
000f80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4F:
000f81 81ee      	LDD  R30,Y+6
000f82 81ff      	LDD  R31,Y+6+1
000f83 93fa      	ST   -Y,R31
000f84 93ea      	ST   -Y,R30
000f85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x50:
                +
000f86 87e9     +STD Y + 9 , R30
000f87 87fa     +STD Y + 9 + 1 , R31
000f88 876b     +STD Y + 9 + 2 , R22
000f89 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000f8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x51:
000f8b 81ae      	LDD  R26,Y+6
000f8c 81bf      	LDD  R27,Y+6+1
000f8d 9611      	ADIW R26,1
000f8e 83ae      	STD  Y+6,R26
000f8f 83bf      	STD  Y+6+1,R27
000f90 9711      	SBIW R26,1
000f91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x52:
                +
000f92 81aa     +LDD R26 , Y + 2
000f93 81bb     +LDD R27 , Y + 2 + 1
000f94 818c     +LDD R24 , Y + 2 + 2
000f95 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000f96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x53:
                +
000f97 83ea     +STD Y + 2 , R30
000f98 83fb     +STD Y + 2 + 1 , R31
000f99 836c     +STD Y + 2 + 2 , R22
000f9a 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000f9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x54:
                +
000f9c 81ea     +LDD R30 , Y + 2
000f9d 81fb     +LDD R31 , Y + 2 + 1
000f9e 816c     +LDD R22 , Y + 2 + 2
000f9f 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000fa0 85a9     +LDD R26 , Y + 9
000fa1 85ba     +LDD R27 , Y + 9 + 1
000fa2 858b     +LDD R24 , Y + 9 + 2
000fa3 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000fa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
000fa5 85a9     +LDD R26 , Y + 9
000fa6 85ba     +LDD R27 , Y + 9 + 1
000fa7 858b     +LDD R24 , Y + 9 + 2
000fa8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000fa9 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000faa 91e9      	ld   r30,y+
000fab 91f9      	ld   r31,y+
000fac 9630      	adiw r30,0
000fad f039      	breq __delay_ms1
                 __delay_ms0:
                +
000fae ed80     +LDI R24 , LOW ( 0x7D0 )
000faf e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000fb0 9701     +SBIW R24 , 1
000fb1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000fb2 95a8      	wdr
000fb3 9731      	sbiw r30,1
000fb4 f7c9      	brne __delay_ms0
                 __delay_ms1:
000fb5 9508      	ret
                 
                 __ANEGF1:
000fb6 9730      	SBIW R30,0
000fb7 4060      	SBCI R22,0
000fb8 4070      	SBCI R23,0
000fb9 f009      	BREQ __ANEGF10
000fba 5870      	SUBI R23,0x80
                 __ANEGF10:
000fbb 9508      	RET
                 
                 __ROUND_REPACK:
000fbc 2355      	TST  R21
000fbd f442      	BRPL __REPACK
000fbe 3850      	CPI  R21,0x80
000fbf f411      	BRNE __ROUND_REPACK0
000fc0 ffe0      	SBRS R30,0
000fc1 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000fc2 9631      	ADIW R30,1
000fc3 1f69      	ADC  R22,R25
000fc4 1f79      	ADC  R23,R25
000fc5 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000fc6 e850      	LDI  R21,0x80
000fc7 2757      	EOR  R21,R23
000fc8 f411      	BRNE __REPACK0
000fc9 935f      	PUSH R21
000fca c0cf      	RJMP __ZERORES
                 __REPACK0:
000fcb 3f5f      	CPI  R21,0xFF
000fcc f031      	BREQ __REPACK1
000fcd 0f66      	LSL  R22
000fce 0c00      	LSL  R0
000fcf 9557      	ROR  R21
000fd0 9567      	ROR  R22
000fd1 2f75      	MOV  R23,R21
000fd2 9508      	RET
                 __REPACK1:
000fd3 935f      	PUSH R21
000fd4 2000      	TST  R0
000fd5 f00a      	BRMI __REPACK2
000fd6 c0cf      	RJMP __MAXRES
                 __REPACK2:
000fd7 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000fd8 e850      	LDI  R21,0x80
000fd9 2e19      	MOV  R1,R25
000fda 2215      	AND  R1,R21
000fdb 0f88      	LSL  R24
000fdc 1f99      	ROL  R25
000fdd 2795      	EOR  R25,R21
000fde 0f55      	LSL  R21
000fdf 9587      	ROR  R24
                 
                 __UNPACK1:
000fe0 e850      	LDI  R21,0x80
000fe1 2e07      	MOV  R0,R23
000fe2 2205      	AND  R0,R21
000fe3 0f66      	LSL  R22
000fe4 1f77      	ROL  R23
000fe5 2775      	EOR  R23,R21
000fe6 0f55      	LSL  R21
000fe7 9567      	ROR  R22
000fe8 9508      	RET
                 
                 __CFD1U:
000fe9 9468      	SET
000fea c001      	RJMP __CFD1U0
                 __CFD1:
000feb 94e8      	CLT
                 __CFD1U0:
000fec 935f      	PUSH R21
000fed dff2      	RCALL __UNPACK1
000fee 3870      	CPI  R23,0x80
000fef f018      	BRLO __CFD10
000ff0 3f7f      	CPI  R23,0xFF
000ff1 f408      	BRCC __CFD10
000ff2 c0a7      	RJMP __ZERORES
                 __CFD10:
000ff3 e156      	LDI  R21,22
000ff4 1b57      	SUB  R21,R23
000ff5 f4aa      	BRPL __CFD11
000ff6 9551      	NEG  R21
000ff7 3058      	CPI  R21,8
000ff8 f40e      	BRTC __CFD19
000ff9 3059      	CPI  R21,9
                 __CFD19:
000ffa f030      	BRLO __CFD17
000ffb efef      	SER  R30
000ffc efff      	SER  R31
000ffd ef6f      	SER  R22
000ffe e77f      	LDI  R23,0x7F
000fff f977      	BLD  R23,7
001000 c01a      	RJMP __CFD15
                 __CFD17:
001001 2777      	CLR  R23
001002 2355      	TST  R21
001003 f0b9      	BREQ __CFD15
                 __CFD18:
001004 0fee      	LSL  R30
001005 1fff      	ROL  R31
001006 1f66      	ROL  R22
001007 1f77      	ROL  R23
001008 955a      	DEC  R21
001009 f7d1      	BRNE __CFD18
00100a c010      	RJMP __CFD15
                 __CFD11:
00100b 2777      	CLR  R23
                 __CFD12:
00100c 3058      	CPI  R21,8
00100d f028      	BRLO __CFD13
00100e 2fef      	MOV  R30,R31
00100f 2ff6      	MOV  R31,R22
001010 2f67      	MOV  R22,R23
001011 5058      	SUBI R21,8
001012 cff9      	RJMP __CFD12
                 __CFD13:
001013 2355      	TST  R21
001014 f031      	BREQ __CFD15
                 __CFD14:
001015 9576      	LSR  R23
001016 9567      	ROR  R22
001017 95f7      	ROR  R31
001018 95e7      	ROR  R30
001019 955a      	DEC  R21
00101a f7d1      	BRNE __CFD14
                 __CFD15:
00101b 2000      	TST  R0
00101c f40a      	BRPL __CFD16
00101d d145      	RCALL __ANEGD1
                 __CFD16:
00101e 915f      	POP  R21
00101f 9508      	RET
                 
                 __CDF1U:
001020 9468      	SET
001021 c001      	RJMP __CDF1U0
                 __CDF1:
001022 94e8      	CLT
                 __CDF1U0:
001023 9730      	SBIW R30,0
001024 4060      	SBCI R22,0
001025 4070      	SBCI R23,0
001026 f0b1      	BREQ __CDF10
001027 2400      	CLR  R0
001028 f026      	BRTS __CDF11
001029 2377      	TST  R23
00102a f412      	BRPL __CDF11
00102b 9400      	COM  R0
00102c d136      	RCALL __ANEGD1
                 __CDF11:
00102d 2e17      	MOV  R1,R23
00102e e17e      	LDI  R23,30
00102f 2011      	TST  R1
                 __CDF12:
001030 f032      	BRMI __CDF13
001031 957a      	DEC  R23
001032 0fee      	LSL  R30
001033 1fff      	ROL  R31
001034 1f66      	ROL  R22
001035 1c11      	ROL  R1
001036 cff9      	RJMP __CDF12
                 __CDF13:
001037 2fef      	MOV  R30,R31
001038 2ff6      	MOV  R31,R22
001039 2d61      	MOV  R22,R1
00103a 935f      	PUSH R21
00103b df8a      	RCALL __REPACK
00103c 915f      	POP  R21
                 __CDF10:
00103d 9508      	RET
                 
                 __SWAPACC:
00103e 934f      	PUSH R20
00103f 01af      	MOVW R20,R30
001040 01fd      	MOVW R30,R26
001041 01da      	MOVW R26,R20
001042 01ab      	MOVW R20,R22
001043 01bc      	MOVW R22,R24
001044 01ca      	MOVW R24,R20
001045 2d40      	MOV  R20,R0
001046 2c01      	MOV  R0,R1
001047 2e14      	MOV  R1,R20
001048 914f      	POP  R20
001049 9508      	RET
                 
                 __UADD12:
00104a 0fea      	ADD  R30,R26
00104b 1ffb      	ADC  R31,R27
00104c 1f68      	ADC  R22,R24
00104d 9508      	RET
                 
                 __NEGMAN1:
00104e 95e0      	COM  R30
00104f 95f0      	COM  R31
001050 9560      	COM  R22
001051 5fef      	SUBI R30,-1
001052 4fff      	SBCI R31,-1
001053 4f6f      	SBCI R22,-1
001054 9508      	RET
                 
                 __SUBF12:
001055 935f      	PUSH R21
001056 df81      	RCALL __UNPACK
001057 3890      	CPI  R25,0x80
001058 f171      	BREQ __ADDF129
001059 e850      	LDI  R21,0x80
00105a 2615      	EOR  R1,R21
                 
00105b c004      	RJMP __ADDF120
                 
                 __ADDF12:
00105c 935f      	PUSH R21
00105d df7a      	RCALL __UNPACK
00105e 3890      	CPI  R25,0x80
00105f f139      	BREQ __ADDF129
                 
                 __ADDF120:
001060 3870      	CPI  R23,0x80
001061 f121      	BREQ __ADDF128
                 __ADDF121:
001062 2f57      	MOV  R21,R23
001063 1b59      	SUB  R21,R25
001064 f12b      	BRVS __ADDF1211
001065 f412      	BRPL __ADDF122
001066 dfd7      	RCALL __SWAPACC
001067 cffa      	RJMP __ADDF121
                 __ADDF122:
001068 3158      	CPI  R21,24
001069 f018      	BRLO __ADDF123
00106a 27aa      	CLR  R26
00106b 27bb      	CLR  R27
00106c 2788      	CLR  R24
                 __ADDF123:
00106d 3058      	CPI  R21,8
00106e f028      	BRLO __ADDF124
00106f 2fab      	MOV  R26,R27
001070 2fb8      	MOV  R27,R24
001071 2788      	CLR  R24
001072 5058      	SUBI R21,8
001073 cff9      	RJMP __ADDF123
                 __ADDF124:
001074 2355      	TST  R21
001075 f029      	BREQ __ADDF126
                 __ADDF125:
001076 9586      	LSR  R24
001077 95b7      	ROR  R27
001078 95a7      	ROR  R26
001079 955a      	DEC  R21
00107a f7d9      	BRNE __ADDF125
                 __ADDF126:
00107b 2d50      	MOV  R21,R0
00107c 2551      	EOR  R21,R1
00107d f072      	BRMI __ADDF127
00107e dfcb      	RCALL __UADD12
00107f f438      	BRCC __ADDF129
001080 9567      	ROR  R22
001081 95f7      	ROR  R31
001082 95e7      	ROR  R30
001083 9573      	INC  R23
001084 f413      	BRVC __ADDF129
001085 c020      	RJMP __MAXRES
                 __ADDF128:
001086 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001087 df3e      	RCALL __REPACK
001088 915f      	POP  R21
001089 9508      	RET
                 __ADDF1211:
00108a f7d8      	BRCC __ADDF128
00108b cffb      	RJMP __ADDF129
                 __ADDF127:
00108c 1bea      	SUB  R30,R26
00108d 0bfb      	SBC  R31,R27
00108e 0b68      	SBC  R22,R24
00108f f051      	BREQ __ZERORES
001090 f410      	BRCC __ADDF1210
001091 9400      	COM  R0
001092 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001093 2366      	TST  R22
001094 f392      	BRMI __ADDF129
001095 0fee      	LSL  R30
001096 1fff      	ROL  R31
001097 1f66      	ROL  R22
001098 957a      	DEC  R23
001099 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00109a 27ee      	CLR  R30
00109b 27ff      	CLR  R31
00109c 2766      	CLR  R22
00109d 2777      	CLR  R23
00109e 915f      	POP  R21
00109f 9508      	RET
                 
                 __MINRES:
0010a0 efef      	SER  R30
0010a1 efff      	SER  R31
0010a2 e76f      	LDI  R22,0x7F
0010a3 ef7f      	SER  R23
0010a4 915f      	POP  R21
0010a5 9508      	RET
                 
                 __MAXRES:
0010a6 efef      	SER  R30
0010a7 efff      	SER  R31
0010a8 e76f      	LDI  R22,0x7F
0010a9 e77f      	LDI  R23,0x7F
0010aa 915f      	POP  R21
0010ab 9508      	RET
                 
                 __MULF12:
0010ac 935f      	PUSH R21
0010ad df2a      	RCALL __UNPACK
0010ae 3870      	CPI  R23,0x80
0010af f351      	BREQ __ZERORES
0010b0 3890      	CPI  R25,0x80
0010b1 f341      	BREQ __ZERORES
0010b2 2401      	EOR  R0,R1
0010b3 9408      	SEC
0010b4 1f79      	ADC  R23,R25
0010b5 f423      	BRVC __MULF124
0010b6 f31c      	BRLT __ZERORES
                 __MULF125:
0010b7 2000      	TST  R0
0010b8 f33a      	BRMI __MINRES
0010b9 cfec      	RJMP __MAXRES
                 __MULF124:
0010ba 920f      	PUSH R0
0010bb 931f      	PUSH R17
0010bc 932f      	PUSH R18
0010bd 933f      	PUSH R19
0010be 934f      	PUSH R20
0010bf 2711      	CLR  R17
0010c0 2722      	CLR  R18
0010c1 2799      	CLR  R25
0010c2 9f68      	MUL  R22,R24
0010c3 01a0      	MOVW R20,R0
0010c4 9f8f      	MUL  R24,R31
0010c5 2d30      	MOV  R19,R0
0010c6 0d41      	ADD  R20,R1
0010c7 1f59      	ADC  R21,R25
0010c8 9f6b      	MUL  R22,R27
0010c9 0d30      	ADD  R19,R0
0010ca 1d41      	ADC  R20,R1
0010cb 1f59      	ADC  R21,R25
0010cc 9f8e      	MUL  R24,R30
0010cd d027      	RCALL __MULF126
0010ce 9fbf      	MUL  R27,R31
0010cf d025      	RCALL __MULF126
0010d0 9f6a      	MUL  R22,R26
0010d1 d023      	RCALL __MULF126
0010d2 9fbe      	MUL  R27,R30
0010d3 d01d      	RCALL __MULF127
0010d4 9faf      	MUL  R26,R31
0010d5 d01b      	RCALL __MULF127
0010d6 9fae      	MUL  R26,R30
0010d7 0d11      	ADD  R17,R1
0010d8 1f29      	ADC  R18,R25
0010d9 1f39      	ADC  R19,R25
0010da 1f49      	ADC  R20,R25
0010db 1f59      	ADC  R21,R25
0010dc 2fe3      	MOV  R30,R19
0010dd 2ff4      	MOV  R31,R20
0010de 2f65      	MOV  R22,R21
0010df 2f52      	MOV  R21,R18
0010e0 914f      	POP  R20
0010e1 913f      	POP  R19
0010e2 912f      	POP  R18
0010e3 911f      	POP  R17
0010e4 900f      	POP  R0
0010e5 2366      	TST  R22
0010e6 f02a      	BRMI __MULF122
0010e7 0f55      	LSL  R21
0010e8 1fee      	ROL  R30
0010e9 1fff      	ROL  R31
0010ea 1f66      	ROL  R22
0010eb c002      	RJMP __MULF123
                 __MULF122:
0010ec 9573      	INC  R23
0010ed f24b      	BRVS __MULF125
                 __MULF123:
0010ee decd      	RCALL __ROUND_REPACK
0010ef 915f      	POP  R21
0010f0 9508      	RET
                 
                 __MULF127:
0010f1 0d10      	ADD  R17,R0
0010f2 1d21      	ADC  R18,R1
0010f3 1f39      	ADC  R19,R25
0010f4 c002      	RJMP __MULF128
                 __MULF126:
0010f5 0d20      	ADD  R18,R0
0010f6 1d31      	ADC  R19,R1
                 __MULF128:
0010f7 1f49      	ADC  R20,R25
0010f8 1f59      	ADC  R21,R25
0010f9 9508      	RET
                 
                 __DIVF21:
0010fa 935f      	PUSH R21
0010fb dedc      	RCALL __UNPACK
0010fc 3870      	CPI  R23,0x80
0010fd f421      	BRNE __DIVF210
0010fe 2011      	TST  R1
                 __DIVF211:
0010ff f40a      	BRPL __DIVF219
001100 cf9f      	RJMP __MINRES
                 __DIVF219:
001101 cfa4      	RJMP __MAXRES
                 __DIVF210:
001102 3890      	CPI  R25,0x80
001103 f409      	BRNE __DIVF218
                 __DIVF217:
001104 cf95      	RJMP __ZERORES
                 __DIVF218:
001105 2401      	EOR  R0,R1
001106 9408      	SEC
001107 0b97      	SBC  R25,R23
001108 f41b      	BRVC __DIVF216
001109 f3d4      	BRLT __DIVF217
00110a 2000      	TST  R0
00110b cff3      	RJMP __DIVF211
                 __DIVF216:
00110c 2f79      	MOV  R23,R25
00110d 931f      	PUSH R17
00110e 932f      	PUSH R18
00110f 933f      	PUSH R19
001110 934f      	PUSH R20
001111 2411      	CLR  R1
001112 2711      	CLR  R17
001113 2722      	CLR  R18
001114 2733      	CLR  R19
001115 2744      	CLR  R20
001116 2755      	CLR  R21
001117 e290      	LDI  R25,32
                 __DIVF212:
001118 17ae      	CP   R26,R30
001119 07bf      	CPC  R27,R31
00111a 0786      	CPC  R24,R22
00111b 0741      	CPC  R20,R17
00111c f030      	BRLO __DIVF213
00111d 1bae      	SUB  R26,R30
00111e 0bbf      	SBC  R27,R31
00111f 0b86      	SBC  R24,R22
001120 0b41      	SBC  R20,R17
001121 9408      	SEC
001122 c001      	RJMP __DIVF214
                 __DIVF213:
001123 9488      	CLC
                 __DIVF214:
001124 1f55      	ROL  R21
001125 1f22      	ROL  R18
001126 1f33      	ROL  R19
001127 1c11      	ROL  R1
001128 1faa      	ROL  R26
001129 1fbb      	ROL  R27
00112a 1f88      	ROL  R24
00112b 1f44      	ROL  R20
00112c 959a      	DEC  R25
00112d f751      	BRNE __DIVF212
00112e 01f9      	MOVW R30,R18
00112f 2d61      	MOV  R22,R1
001130 914f      	POP  R20
001131 913f      	POP  R19
001132 912f      	POP  R18
001133 911f      	POP  R17
001134 2366      	TST  R22
001135 f032      	BRMI __DIVF215
001136 0f55      	LSL  R21
001137 1fee      	ROL  R30
001138 1fff      	ROL  R31
001139 1f66      	ROL  R22
00113a 957a      	DEC  R23
00113b f243      	BRVS __DIVF217
                 __DIVF215:
00113c de7f      	RCALL __ROUND_REPACK
00113d 915f      	POP  R21
00113e 9508      	RET
                 
                 __CMPF12:
00113f 2399      	TST  R25
001140 f09a      	BRMI __CMPF120
001141 2377      	TST  R23
001142 f042      	BRMI __CMPF121
001143 1797      	CP   R25,R23
001144 f048      	BRLO __CMPF122
001145 f429      	BRNE __CMPF121
001146 17ae      	CP   R26,R30
001147 07bf      	CPC  R27,R31
001148 0786      	CPC  R24,R22
001149 f020      	BRLO __CMPF122
00114a f031      	BREQ __CMPF123
                 __CMPF121:
00114b 9498      	CLZ
00114c 9488      	CLC
00114d 9508      	RET
                 __CMPF122:
00114e 9498      	CLZ
00114f 9408      	SEC
001150 9508      	RET
                 __CMPF123:
001151 9418      	SEZ
001152 9488      	CLC
001153 9508      	RET
                 __CMPF120:
001154 2377      	TST  R23
001155 f7c2      	BRPL __CMPF122
001156 1797      	CP   R25,R23
001157 f398      	BRLO __CMPF121
001158 f7a9      	BRNE __CMPF122
001159 17ea      	CP   R30,R26
00115a 07fb      	CPC  R31,R27
00115b 0768      	CPC  R22,R24
00115c f388      	BRLO __CMPF122
00115d f399      	BREQ __CMPF123
00115e cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00115f 2400      	CLR  R0
001160 0daf      	ADD  R26,R15
001161 1db0      	ADC  R27,R0
001162 9508      	RET
                 
                 __ANEGD1:
001163 95f0      	COM  R31
001164 9560      	COM  R22
001165 9570      	COM  R23
001166 95e1      	NEG  R30
001167 4fff      	SBCI R31,-1
001168 4f6f      	SBCI R22,-1
001169 4f7f      	SBCI R23,-1
00116a 9508      	RET
                 
                 __CBD1:
00116b 2ffe      	MOV  R31,R30
00116c 0fff      	ADD  R31,R31
00116d 0bff      	SBC  R31,R31
00116e 2f6f      	MOV  R22,R31
00116f 2f7f      	MOV  R23,R31
001170 9508      	RET
                 
                 __CWD1:
001171 2f6f      	MOV  R22,R31
001172 0f66      	ADD  R22,R22
001173 0b66      	SBC  R22,R22
001174 2f76      	MOV  R23,R22
001175 9508      	RET
                 
                 __DIVB21U:
001176 2400      	CLR  R0
001177 e098      	LDI  R25,8
                 __DIVB21U1:
001178 0faa      	LSL  R26
001179 1c00      	ROL  R0
00117a 1a0e      	SUB  R0,R30
00117b f410      	BRCC __DIVB21U2
00117c 0e0e      	ADD  R0,R30
00117d c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00117e 60a1      	SBR  R26,1
                 __DIVB21U3:
00117f 959a      	DEC  R25
001180 f7b9      	BRNE __DIVB21U1
001181 2fea      	MOV  R30,R26
001182 2da0      	MOV  R26,R0
001183 9508      	RET
                 
                 __DIVB21:
001184 d04c      	RCALL __CHKSIGNB
001185 dff0      	RCALL __DIVB21U
001186 f40e      	BRTC __DIVB211
001187 95e1      	NEG  R30
                 __DIVB211:
001188 9508      	RET
                 
                 __DIVW21U:
001189 2400      	CLR  R0
00118a 2411      	CLR  R1
00118b e190      	LDI  R25,16
                 __DIVW21U1:
00118c 0faa      	LSL  R26
00118d 1fbb      	ROL  R27
00118e 1c00      	ROL  R0
00118f 1c11      	ROL  R1
001190 1a0e      	SUB  R0,R30
001191 0a1f      	SBC  R1,R31
001192 f418      	BRCC __DIVW21U2
001193 0e0e      	ADD  R0,R30
001194 1e1f      	ADC  R1,R31
001195 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
001196 60a1      	SBR  R26,1
                 __DIVW21U3:
001197 959a      	DEC  R25
001198 f799      	BRNE __DIVW21U1
001199 01fd      	MOVW R30,R26
00119a 01d0      	MOVW R26,R0
00119b 9508      	RET
                 
                 __DIVD21U:
00119c 933f      	PUSH R19
00119d 934f      	PUSH R20
00119e 935f      	PUSH R21
00119f 2400      	CLR  R0
0011a0 2411      	CLR  R1
0011a1 2744      	CLR  R20
0011a2 2755      	CLR  R21
0011a3 e230      	LDI  R19,32
                 __DIVD21U1:
0011a4 0faa      	LSL  R26
0011a5 1fbb      	ROL  R27
0011a6 1f88      	ROL  R24
0011a7 1f99      	ROL  R25
0011a8 1c00      	ROL  R0
0011a9 1c11      	ROL  R1
0011aa 1f44      	ROL  R20
0011ab 1f55      	ROL  R21
0011ac 1a0e      	SUB  R0,R30
0011ad 0a1f      	SBC  R1,R31
0011ae 0b46      	SBC  R20,R22
0011af 0b57      	SBC  R21,R23
0011b0 f428      	BRCC __DIVD21U2
0011b1 0e0e      	ADD  R0,R30
0011b2 1e1f      	ADC  R1,R31
0011b3 1f46      	ADC  R20,R22
0011b4 1f57      	ADC  R21,R23
0011b5 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0011b6 60a1      	SBR  R26,1
                 __DIVD21U3:
0011b7 953a      	DEC  R19
0011b8 f759      	BRNE __DIVD21U1
0011b9 01fd      	MOVW R30,R26
0011ba 01bc      	MOVW R22,R24
0011bb 01d0      	MOVW R26,R0
0011bc 01ca      	MOVW R24,R20
0011bd 915f      	POP  R21
0011be 914f      	POP  R20
0011bf 913f      	POP  R19
0011c0 9508      	RET
                 
                 __MODB21:
0011c1 94e8      	CLT
0011c2 ffa7      	SBRS R26,7
0011c3 c002      	RJMP __MODB211
0011c4 95a1      	NEG  R26
0011c5 9468      	SET
                 __MODB211:
0011c6 fde7      	SBRC R30,7
0011c7 95e1      	NEG  R30
0011c8 dfad      	RCALL __DIVB21U
0011c9 2fea      	MOV  R30,R26
0011ca f40e      	BRTC __MODB212
0011cb 95e1      	NEG  R30
                 __MODB212:
0011cc 9508      	RET
                 
                 __MODD21U:
0011cd dfce      	RCALL __DIVD21U
0011ce 01fd      	MOVW R30,R26
0011cf 01bc      	MOVW R22,R24
0011d0 9508      	RET
                 
                 __CHKSIGNB:
0011d1 94e8      	CLT
0011d2 ffe7      	SBRS R30,7
0011d3 c002      	RJMP __CHKSB1
0011d4 95e1      	NEG  R30
0011d5 9468      	SET
                 __CHKSB1:
0011d6 ffa7      	SBRS R26,7
0011d7 c004      	RJMP __CHKSB2
0011d8 95a1      	NEG  R26
0011d9 f800      	BLD  R0,0
0011da 9403      	INC  R0
0011db fa00      	BST  R0,0
                 __CHKSB2:
0011dc 9508      	RET
                 
                 __GETW1P:
0011dd 91ed      	LD   R30,X+
0011de 91fc      	LD   R31,X
0011df 9711      	SBIW R26,1
0011e0 9508      	RET
                 
                 __GETD1P:
0011e1 91ed      	LD   R30,X+
0011e2 91fd      	LD   R31,X+
0011e3 916d      	LD   R22,X+
0011e4 917c      	LD   R23,X
0011e5 9713      	SBIW R26,3
0011e6 9508      	RET
                 
                 __PUTDP1:
0011e7 93ed      	ST   X+,R30
0011e8 93fd      	ST   X+,R31
0011e9 936d      	ST   X+,R22
0011ea 937c      	ST   X,R23
0011eb 9508      	RET
                 
                 __GETD1S0:
0011ec 81e8      	LD   R30,Y
0011ed 81f9      	LDD  R31,Y+1
0011ee 816a      	LDD  R22,Y+2
0011ef 817b      	LDD  R23,Y+3
0011f0 9508      	RET
                 
                 __PUTD1S0:
0011f1 83e8      	ST   Y,R30
0011f2 83f9      	STD  Y+1,R31
0011f3 836a      	STD  Y+2,R22
0011f4 837b      	STD  Y+3,R23
0011f5 9508      	RET
                 
                 __PUTPARD1:
0011f6 937a      	ST   -Y,R23
0011f7 936a      	ST   -Y,R22
0011f8 93fa      	ST   -Y,R31
0011f9 93ea      	ST   -Y,R30
0011fa 9508      	RET
                 
                 __SWAPD12:
0011fb 2e18      	MOV  R1,R24
0011fc 2f86      	MOV  R24,R22
0011fd 2d61      	MOV  R22,R1
0011fe 2e19      	MOV  R1,R25
0011ff 2f97      	MOV  R25,R23
001200 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001201 2e1b      	MOV  R1,R27
001202 2fbf      	MOV  R27,R31
001203 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001204 2e1a      	MOV  R1,R26
001205 2fae      	MOV  R26,R30
001206 2de1      	MOV  R30,R1
001207 9508      	RET
                 
                 __EEPROMRDW:
001208 9611      	ADIW R26,1
001209 d002      	RCALL __EEPROMRDB
00120a 2ffe      	MOV  R31,R30
00120b 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00120c 99e1      	SBIC EECR,EEWE
00120d cffe      	RJMP __EEPROMRDB
00120e 93ff      	PUSH R31
00120f b7ff      	IN   R31,SREG
001210 94f8      	CLI
001211 bbae      	OUT  EEARL,R26
001212 bbbf      	OUT  EEARH,R27
001213 9ae0      	SBI  EECR,EERE
001214 b3ed      	IN   R30,EEDR
001215 bfff      	OUT  SREG,R31
001216 91ff      	POP  R31
001217 9508      	RET
                 
                 __EEPROMWRW:
001218 d007      	RCALL __EEPROMWRB
001219 9611      	ADIW R26,1
00121a 93ef      	PUSH R30
00121b 2fef      	MOV  R30,R31
00121c d003      	RCALL __EEPROMWRB
00121d 91ef      	POP  R30
00121e 9711      	SBIW R26,1
00121f 9508      	RET
                 
                 __EEPROMWRB:
001220 9be1      	SBIS EECR,EEWE
001221 c002      	RJMP __EEPROMWRB1
001222 95a8      	WDR
001223 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001224 b79f      	IN   R25,SREG
001225 94f8      	CLI
001226 bbae      	OUT  EEARL,R26
001227 bbbf      	OUT  EEARH,R27
001228 9ae0      	SBI  EECR,EERE
001229 b38d      	IN   R24,EEDR
00122a 17e8      	CP   R30,R24
00122b f019      	BREQ __EEPROMWRB0
00122c bbed      	OUT  EEDR,R30
00122d 9ae2      	SBI  EECR,EEMWE
00122e 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00122f bf9f      	OUT  SREG,R25
001230 9508      	RET
                 
                 __CPD10:
001231 9730      	SBIW R30,0
001232 4060      	SBCI R22,0
001233 4070      	SBCI R23,0
001234 9508      	RET
                 
                 __SAVELOCR6:
001235 935a      	ST   -Y,R21
                 __SAVELOCR5:
001236 934a      	ST   -Y,R20
                 __SAVELOCR4:
001237 933a      	ST   -Y,R19
                 __SAVELOCR3:
001238 932a      	ST   -Y,R18
                 __SAVELOCR2:
001239 931a      	ST   -Y,R17
00123a 930a      	ST   -Y,R16
00123b 9508      	RET
                 
                 __LOADLOCR6:
00123c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00123d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00123e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00123f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001240 8119      	LDD  R17,Y+1
001241 8108      	LD   R16,Y
001242 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  65 r1 :  38 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   4 r7 :   2 
r8 :   4 r9 :   2 r10:   9 r11:   6 r12:   9 r13:   5 r14:   0 r15:  13 
r16:  58 r17:  71 r18:  48 r19:  35 r20:  50 r21:  90 r22: 127 r23: 114 
r24:  84 r25:  69 r26: 247 r27: 117 r28:  38 r29:   1 r30: 838 r31: 302 
x  :  42 y  : 426 z  :  27 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  18 
adiw  :  47 and   :   5 andi  :  11 asr   :   0 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  : 122 
brge  :  16 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :  11 brmi  :  11 brne  :  81 brpl  :   9 brsh  :   8 brtc  :   4 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 495 
cbi   :  87 cbr   :   1 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  64 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  29 cpc   :  40 cpi   : 172 cpse  :   0 dec   :  19 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  95 inc   :   3 jmp   :  46 ld    :  54 ldd   : 185 ldi   : 426 
lds   :  83 lpm   :  14 lsl   :  15 lsr   :   3 mov   :  81 movw  :  62 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   2 
ori   :  10 out   :  47 pop   :  27 push  :  28 rcall : 140 ret   : 133 
reti  :   0 rjmp  : 296 rol   :  35 ror   :  15 sbc   :  12 sbci  :  25 
sbi   :  74 sbic  :  57 sbis  :  40 sbiw  :  38 sbr   :   5 sbrc  :   5 
sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   7 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 155 std   :  89 sts   :  49 sub   :   7 subi  :  55 swap  :   2 
tst   :  24 wdr   :   2 
Instructions used: 81 out of 116 (69.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002486   9072    278   9350   16384  57.1%
[.dseg] 0x000060 0x0001bb      0     91     91    1119   8.1%
[.eseg] 0x000000 0x000004      0      4      4     512   0.8%

Assembly complete, 0 errors, 9 warnings
